/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


#define SWIG_VERSION 0x040101
#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE
#define SWIGPYTHON_FASTPROXY

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if !defined(PY_SSIZE_T_CLEAN) && !defined(SWIG_NO_PY_SSIZE_T_CLEAN)
#define PY_SSIZE_T_CLEAN
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic push
#if defined(__cplusplus) && __cplusplus >=201703L
#pragma GCC diagnostic ignored "-Wregister" /* For python-2.7 headers that use register */
#endif
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */

#if defined(_MSC_VER) && _MSC_VER >= 1929
/* Workaround compilation errors when redefining _DEBUG in MSVC 2019 version 16.10 and later
 * See https://github.com/swig/swig/issues/2090 */
# include <corecrt.h>
#endif

# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

#if __GNUC__ >= 7
#pragma GCC diagnostic pop
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4
#define SWIG_POINTER_CLEAR         0x8
#define SWIG_POINTER_RELEASE       (SWIG_POINTER_CLEAR | SWIG_POINTER_DISOWN)

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
/* Runtime errors are < 0 */
#define SWIG_ERROR                 (-1)
/* Errors in range -1 to -99 are in swigerrors.swg (errors for all languages including those not using the runtime) */
/* Errors in range -100 to -199 are language specific errors defined in *errors.swg */
/* Errors < -200 are generic runtime specific errors */
#define SWIG_ERROR_RELEASE_NOT_OWNED (-200)

#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del object mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  Choose the last
     name. It should be the most specific; a fully resolved name
     but not necessarily with default template parameters expanded. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13


/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#else
  return PyString_AsString(str);
#endif
}

/* Was useful for Python 3.0.x-3.2.x - now provided only for compatibility
 * with any uses in user interface files. */
#define SWIG_Python_str_DelForPy3(x)


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user interface files check for it. */
# define SWIGPY_USE_CAPSULE
#ifdef SWIGPYTHON_BUILTIN
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule_builtin" SWIG_TYPE_TABLE_NAME
#else
# define SWIGPY_CAPSULE_ATTR_NAME "type_pointer_capsule" SWIG_TYPE_TABLE_NAME
#endif
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION "." SWIGPY_CAPSULE_ATTR_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    if (newvalue) {
      Py_XDECREF(value);
      PyErr_Restore(type, newvalue, traceback);
    } else {
      PyErr_Restore(type, value, traceback);
    }
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      if PY_VERSION_HEX < 0x03070000
#        define SWIG_PYTHON_INITIALIZE_THREADS PyEval_InitThreads()
#      else
#        define SWIG_PYTHON_INITIALIZE_THREADS
#      endif
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03030000
# error "This version of SWIG only supports Python 3 >= 3.3"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      if (result) {
        PyList_SET_ITEM(result, 0, o2);
      } else {
        Py_DECREF(obj);
        return o2;
      }
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
 
/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */
 
typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

SWIGINTERN PyObject *
swig_varlink_repr(PyObject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_InternFromString("<Swig global variables>");
#else
  return PyString_FromString("<Swig global variables>");
#endif
}

SWIGINTERN PyObject *
swig_varlink_str(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
#if PY_VERSION_HEX >= 0x03000000
  PyObject *str = PyUnicode_InternFromString("(");
  PyObject *tail;
  PyObject *joined;
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    tail = PyUnicode_FromString(var->name);
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
    if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
    }
  }
  tail = PyUnicode_InternFromString(")");
  joined = PyUnicode_Concat(str, tail);
  Py_DecRef(str);
  Py_DecRef(tail);
  str = joined;
#else
  PyObject *str = PyString_FromString("(");
  swig_globalvar *var;
  for (var = v->vars; var; var=var->next) {
    PyString_ConcatAndDel(&str,PyString_FromString(var->name));
    if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
  }
  PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
  return str;
}

SWIGINTERN void
swig_varlink_dealloc(PyObject *o) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  swig_globalvar *var = v->vars;
  while (var) {
    swig_globalvar *n = var->next;
    free(var->name);
    free(var);
    var = n;
  }
}

SWIGINTERN PyObject *
swig_varlink_getattr(PyObject *o, char *n) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  PyObject *res = NULL;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->get_attr)();
      break;
    }
    var = var->next;
  }
  if (res == NULL && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN int
swig_varlink_setattr(PyObject *o, char *n, PyObject *p) {
  swig_varlinkobject *v = (swig_varlinkobject *) o;
  int res = 1;
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      res = (*var->set_attr)(p);
      break;
    }
    var = var->next;
  }
  if (res == 1 && !PyErr_Occurred()) {
    PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
  }
  return res;
}

SWIGINTERN PyTypeObject*
swig_varlink_type(void) {
  static char varlink__doc__[] = "Swig var link object";
  static PyTypeObject varlink_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                  /* ob_size */
#endif
      "swigvarlink",                      /* tp_name */
      sizeof(swig_varlinkobject),         /* tp_basicsize */
      0,                                  /* tp_itemsize */
      (destructor) swig_varlink_dealloc,  /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                       /*tp_print*/
#else
      (Py_ssize_t)0,                      /*tp_vectorcall_offset*/
#endif
      (getattrfunc) swig_varlink_getattr, /* tp_getattr */
      (setattrfunc) swig_varlink_setattr, /* tp_setattr */
      0,                                  /* tp_compare */
      (reprfunc) swig_varlink_repr,       /* tp_repr */
      0,                                  /* tp_as_number */
      0,                                  /* tp_as_sequence */
      0,                                  /* tp_as_mapping */
      0,                                  /* tp_hash */
      0,                                  /* tp_call */
      (reprfunc) swig_varlink_str,        /* tp_str */
      0,                                  /* tp_getattro */
      0,                                  /* tp_setattro */
      0,                                  /* tp_as_buffer */
      0,                                  /* tp_flags */
      varlink__doc__,                     /* tp_doc */
      0,                                  /* tp_traverse */
      0,                                  /* tp_clear */
      0,                                  /* tp_richcompare */
      0,                                  /* tp_weaklistoffset */
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
      0,                                  /* tp_del */
      0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                  /* tp_allocs */
      0,                                  /* tp_frees */
      0,                                  /* tp_maxalloc */
      0,                                  /* tp_prev */
      0                                   /* tp_next */
#endif
    };
    varlink_type = tmp;
    type_init = 1;
    if (PyType_Ready(&varlink_type) < 0)
      return NULL;
  }
  return &varlink_type;
}

/* Create a variable linking object for use later */
SWIGINTERN PyObject *
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
  if (result) {
    result->vars = 0;
  }
  return ((PyObject*) result);
}

SWIGINTERN void 
SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v = (swig_varlinkobject *) p;
  swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  if (gv) {
    size_t size = strlen(name)+1;
    gv->name = (char *)malloc(size);
    if (gv->name) {
      memcpy(gv->name, name, size);
      gv->get_attr = get_attr;
      gv->set_attr = set_attr;
      gv->next = v->vars;
    }
  }
  v->vars = gv;
}


static PyObject *Swig_Globals_global = NULL;
  
SWIGINTERN PyObject *
SWIG_globals(void) {
  if (Swig_Globals_global == NULL) {
    Swig_Globals_global = SWIG_newvarlink();
  }
  return Swig_Globals_global;
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      Py_INCREF(obj);
      data->newargs = obj;
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
        data->newargs = PyTuple_New(1);
        if (data->newargs) {
          Py_INCREF(obj);
          PyTuple_SET_ITEM(data->newargs, 0, obj);
        } else {
          Py_DECREF(data->newraw);
          Py_DECREF(data->klass);
          free(data);
          return 0;
        }
      } else {
        Py_INCREF(obj);
        data->newargs = obj;
      }
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      data->delargs = !(PyCFunction_GET_FLAGS(data->destroy) & METH_O);
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data)
{
  Py_XDECREF(data->klass);
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
  free(data);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_XINCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    PyObject *val = SwigPyObject_long(v);
    if (val) {
      PyObject *ofmt;
      PyTuple_SET_ITEM(args, 0, val);
      ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
        res = PyUnicode_Format(ofmt,args);
#else
        res = PyString_Format(ofmt,args);
#endif
        Py_DECREF(ofmt);
      }
    }
    Py_DECREF(args);
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (repr && v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
    if (nrep) {
# if PY_VERSION_HEX >= 0x03000000
      PyObject *joined = PyUnicode_Concat(repr, nrep);
      Py_DecRef(repr);
      Py_DecRef(nrep);
      repr = joined;
# else
      PyString_ConcatAndDel(&repr,nrep);
# endif
    } else {
      Py_DecRef(repr);
      repr = NULL;
    }
  }
  return repr;
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

static PyObject* Swig_Capsule_global = NULL;

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        if (tmp) {
          res = SWIG_Python_CallFunctor(destroy, tmp);
        } else {
          res = 0;
        }
        Py_XDECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
    Py_XDECREF(Swig_Capsule_global);
  }
  Py_XDECREF(next);
#ifdef SWIGPYTHON_BUILTIN
  Py_XDECREF(sobj->dict);
#endif
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  ((SwigPyObject *)next)->next = sobj->next;
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        Py_DECREF(SwigPyObject_acquire(v,args));
      } else {
        Py_DECREF(SwigPyObject_disown(v,args));
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /*tp_print*/
#else
      (Py_ssize_t)0,                        /*tp_vectorcall_offset*/
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) != 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
    sobj->dict = 0;
#endif
    if (own == SWIG_POINTER_OWN) {
      /* Obtain a reference to the Python capsule wrapping the module information, so that the
       * module information is correctly destroyed after all SWIG python objects have been freed
       * by the GC (and corresponding destructors invoked) */
      Py_XINCREF(Swig_Capsule_global);
    }
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
#if PY_VERSION_HEX < 0x030800b4
      (printfunc)0,                         /*tp_print*/
#else
      (Py_ssize_t)0,                        /*tp_vectorcall_offset*/
#endif
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) != 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (((flags & SWIG_POINTER_RELEASE) == SWIG_POINTER_RELEASE) && !sobj->own) {
      res = SWIG_ERROR_RELEASE_NOT_OWNED;
    } else {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
        sobj->own = 0;
      }
      if (flags & SWIG_POINTER_CLEAR) {
        sobj->ptr = 0;
      }
      res = SWIG_OK;
    }
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
        PyObject *dict = *dictptr;
        if (dict == NULL) {
          dict = PyDict_New();
          *dictptr = dict;
        }
        if (dict) {
          PyDict_SetItem(dict, SWIG_This(), swig_this);
        } else{
          Py_DECREF(inst);
          inst = 0;
        }
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            PyType_Modified(Py_TYPE(inst));
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    if (dict) {
      return PyDict_SetItem(dict, SWIG_This(), swig_this);
    } else{
      return -1;
    }
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      Py_DECREF(SwigPyObject_append((PyObject*) sthis, obj[1]));
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      if (newobj) {
        newobj->dict = 0;
      }
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

static PyObject *Swig_TypeCache_global = NULL;

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  if (Swig_TypeCache_global == NULL) {
    Swig_TypeCache_global = PyDict_New();
  }
  return Swig_TypeCache_global;
}

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
#ifdef SWIG_LINK_RUNTIME
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
  }
#else
  void *type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
  if (PyErr_Occurred()) {
    PyErr_Clear();
    type_pointer = (void *)0;
  }
#endif
  return (swig_module_info *) type_pointer;
}


static int interpreter_counter = 0; // how many (sub-)interpreters are using swig_module's types

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  if (--interpreter_counter != 0) // another sub-interpreter may still be using the swig_module's types
    return;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      ty->clientdata = 0;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
  Py_DECREF(SWIG_globals());
  Swig_Globals_global = NULL;
  Py_DECREF(SWIG_Python_TypeCache());
  Swig_TypeCache_global = NULL;
  Swig_Capsule_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    if (PyModule_AddObject(module, SWIGPY_CAPSULE_ATTR_NAME, pointer) == 0) {
      ++interpreter_counter;
      Swig_Capsule_global = pointer;
    } else {
      Py_DECREF(pointer);
    }
  } else {
    Py_XDECREF(pointer);
  }
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      if (obj) {
        PyDict_SetItem(cache, key, obj);
        Py_DECREF(obj);
      }
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) != 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        goto done;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object. */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE__input swig_types[0]
#define SWIGTYPE_p_MatrixNumbaCoefficient swig_types[1]
#define SWIGTYPE_p_PyMFEM__wFILE swig_types[2]
#define SWIGTYPE_p_RefCoord swig_types[3]
#define SWIGTYPE_p_ScalarNumbaCoefficient swig_types[4]
#define SWIGTYPE_p_VectorNumbaCoefficient swig_types[5]
#define SWIGTYPE_p_allocator_type swig_types[6]
#define SWIGTYPE_p_bool swig_types[7]
#define SWIGTYPE_p_char swig_types[8]
#define SWIGTYPE_p_difference_type swig_types[9]
#define SWIGTYPE_p_double swig_types[10]
#define SWIGTYPE_p_hex_t swig_types[11]
#define SWIGTYPE_p_int swig_types[12]
#define SWIGTYPE_p_mfem__AbstractSparseMatrix swig_types[13]
#define SWIGTYPE_p_mfem__ArrayT_int_t swig_types[14]
#define SWIGTYPE_p_mfem__BiCubic2DFiniteElement swig_types[15]
#define SWIGTYPE_p_mfem__BiLinear2DFiniteElement swig_types[16]
#define SWIGTYPE_p_mfem__BiQuad2DFiniteElement swig_types[17]
#define SWIGTYPE_p_mfem__BiQuadPos2DFiniteElement swig_types[18]
#define SWIGTYPE_p_mfem__BilinearFormIntegrator swig_types[19]
#define SWIGTYPE_p_mfem__BoundaryMassIntegrator swig_types[20]
#define SWIGTYPE_p_mfem__Coefficient swig_types[21]
#define SWIGTYPE_p_mfem__CoefficientVector swig_types[22]
#define SWIGTYPE_p_mfem__ConservativeConvectionIntegrator swig_types[23]
#define SWIGTYPE_p_mfem__ConstantCoefficient swig_types[24]
#define SWIGTYPE_p_mfem__ConstrainedOperator swig_types[25]
#define SWIGTYPE_p_mfem__ConvectionIntegrator swig_types[26]
#define SWIGTYPE_p_mfem__ConvectiveVectorConvectionNLFIntegrator swig_types[27]
#define SWIGTYPE_p_mfem__CrossCrossCoefficient swig_types[28]
#define SWIGTYPE_p_mfem__CrouzeixRaviartFiniteElement swig_types[29]
#define SWIGTYPE_p_mfem__CrouzeixRaviartQuadFiniteElement swig_types[30]
#define SWIGTYPE_p_mfem__Cubic1DFiniteElement swig_types[31]
#define SWIGTYPE_p_mfem__Cubic2DFiniteElement swig_types[32]
#define SWIGTYPE_p_mfem__Cubic3DFiniteElement swig_types[33]
#define SWIGTYPE_p_mfem__CurlCurlIntegrator swig_types[34]
#define SWIGTYPE_p_mfem__CurlGridFunctionCoefficient swig_types[35]
#define SWIGTYPE_p_mfem__CurlInterpolator swig_types[36]
#define SWIGTYPE_p_mfem__DGDiffusionBR2Integrator swig_types[37]
#define SWIGTYPE_p_mfem__DGDiffusionIntegrator swig_types[38]
#define SWIGTYPE_p_mfem__DGElasticityIntegrator swig_types[39]
#define SWIGTYPE_p_mfem__DGTraceIntegrator swig_types[40]
#define SWIGTYPE_p_mfem__DeltaCoefficient swig_types[41]
#define SWIGTYPE_p_mfem__DenseMatrix swig_types[42]
#define SWIGTYPE_p_mfem__DenseMatrixInverse swig_types[43]
#define SWIGTYPE_p_mfem__DenseSymmetricMatrix swig_types[44]
#define SWIGTYPE_p_mfem__DerivativeIntegrator swig_types[45]
#define SWIGTYPE_p_mfem__DeterminantCoefficient swig_types[46]
#define SWIGTYPE_p_mfem__DiffusionIntegrator swig_types[47]
#define SWIGTYPE_p_mfem__DiscreteInterpolator swig_types[48]
#define SWIGTYPE_p_mfem__DivDivIntegrator swig_types[49]
#define SWIGTYPE_p_mfem__DivergenceGridFunctionCoefficient swig_types[50]
#define SWIGTYPE_p_mfem__DivergenceInterpolator swig_types[51]
#define SWIGTYPE_p_mfem__ElasticityIntegrator swig_types[52]
#define SWIGTYPE_p_mfem__ElementRestriction swig_types[53]
#define SWIGTYPE_p_mfem__ElementRestrictionOperator swig_types[54]
#define SWIGTYPE_p_mfem__ElementTransformation swig_types[55]
#define SWIGTYPE_p_mfem__ExtrudeCoefficient swig_types[56]
#define SWIGTYPE_p_mfem__FaceElementTransformations swig_types[57]
#define SWIGTYPE_p_mfem__FaceRestriction swig_types[58]
#define SWIGTYPE_p_mfem__FiniteElement swig_types[59]
#define SWIGTYPE_p_mfem__FiniteElementSpace swig_types[60]
#define SWIGTYPE_p_mfem__FunctionCoefficient swig_types[61]
#define SWIGTYPE_p_mfem__GaussBiLinear2DFiniteElement swig_types[62]
#define SWIGTYPE_p_mfem__GaussBiQuad2DFiniteElement swig_types[63]
#define SWIGTYPE_p_mfem__GaussLinear2DFiniteElement swig_types[64]
#define SWIGTYPE_p_mfem__GaussQuad2DFiniteElement swig_types[65]
#define SWIGTYPE_p_mfem__GradientGridFunctionCoefficient swig_types[66]
#define SWIGTYPE_p_mfem__GradientIntegrator swig_types[67]
#define SWIGTYPE_p_mfem__GradientInterpolator swig_types[68]
#define SWIGTYPE_p_mfem__GridFunction swig_types[69]
#define SWIGTYPE_p_mfem__GridFunctionCoefficient swig_types[70]
#define SWIGTYPE_p_mfem__GroupConvectionIntegrator swig_types[71]
#define SWIGTYPE_p_mfem__H1FaceRestriction swig_types[72]
#define SWIGTYPE_p_mfem__H1Pos_HexahedronElement swig_types[73]
#define SWIGTYPE_p_mfem__H1Pos_QuadrilateralElement swig_types[74]
#define SWIGTYPE_p_mfem__H1Pos_SegmentElement swig_types[75]
#define SWIGTYPE_p_mfem__H1Pos_TetrahedronElement swig_types[76]
#define SWIGTYPE_p_mfem__H1Pos_TriangleElement swig_types[77]
#define SWIGTYPE_p_mfem__H1Pos_WedgeElement swig_types[78]
#define SWIGTYPE_p_mfem__H1Ser_QuadrilateralElement swig_types[79]
#define SWIGTYPE_p_mfem__H1_HexahedronElement swig_types[80]
#define SWIGTYPE_p_mfem__H1_QuadrilateralElement swig_types[81]
#define SWIGTYPE_p_mfem__H1_SegmentElement swig_types[82]
#define SWIGTYPE_p_mfem__H1_TetrahedronElement swig_types[83]
#define SWIGTYPE_p_mfem__H1_TriangleElement swig_types[84]
#define SWIGTYPE_p_mfem__H1_WedgeElement swig_types[85]
#define SWIGTYPE_p_mfem__HyperelasticNLFIntegrator swig_types[86]
#define SWIGTYPE_p_mfem__IdentityInterpolator swig_types[87]
#define SWIGTYPE_p_mfem__IdentityMatrixCoefficient swig_types[88]
#define SWIGTYPE_p_mfem__IdentityOperator swig_types[89]
#define SWIGTYPE_p_mfem__InnerProductCoefficient swig_types[90]
#define SWIGTYPE_p_mfem__IntegrationPoint swig_types[91]
#define SWIGTYPE_p_mfem__IntegrationRule swig_types[92]
#define SWIGTYPE_p_mfem__InverseIntegrator swig_types[93]
#define SWIGTYPE_p_mfem__InverseMatrixCoefficient swig_types[94]
#define SWIGTYPE_p_mfem__IsoparametricTransformation swig_types[95]
#define SWIGTYPE_p_mfem__L2ElementRestriction swig_types[96]
#define SWIGTYPE_p_mfem__L2FaceRestriction swig_types[97]
#define SWIGTYPE_p_mfem__L2Pos_HexahedronElement swig_types[98]
#define SWIGTYPE_p_mfem__L2Pos_QuadrilateralElement swig_types[99]
#define SWIGTYPE_p_mfem__L2Pos_SegmentElement swig_types[100]
#define SWIGTYPE_p_mfem__L2Pos_TetrahedronElement swig_types[101]
#define SWIGTYPE_p_mfem__L2Pos_TriangleElement swig_types[102]
#define SWIGTYPE_p_mfem__L2Pos_WedgeElement swig_types[103]
#define SWIGTYPE_p_mfem__L2_FECollection swig_types[104]
#define SWIGTYPE_p_mfem__L2_HexahedronElement swig_types[105]
#define SWIGTYPE_p_mfem__L2_QuadrilateralElement swig_types[106]
#define SWIGTYPE_p_mfem__L2_SegmentElement swig_types[107]
#define SWIGTYPE_p_mfem__L2_TetrahedronElement swig_types[108]
#define SWIGTYPE_p_mfem__L2_TriangleElement swig_types[109]
#define SWIGTYPE_p_mfem__L2_WedgeElement swig_types[110]
#define SWIGTYPE_p_mfem__Lagrange1DFiniteElement swig_types[111]
#define SWIGTYPE_p_mfem__LagrangeHexFiniteElement swig_types[112]
#define SWIGTYPE_p_mfem__Linear1DFiniteElement swig_types[113]
#define SWIGTYPE_p_mfem__Linear2DFiniteElement swig_types[114]
#define SWIGTYPE_p_mfem__Linear3DFiniteElement swig_types[115]
#define SWIGTYPE_p_mfem__LinearForm swig_types[116]
#define SWIGTYPE_p_mfem__LinearPyramidFiniteElement swig_types[117]
#define SWIGTYPE_p_mfem__LinearWedgeFiniteElement swig_types[118]
#define SWIGTYPE_p_mfem__LumpedIntegrator swig_types[119]
#define SWIGTYPE_p_mfem__MassIntegrator swig_types[120]
#define SWIGTYPE_p_mfem__Matrix swig_types[121]
#define SWIGTYPE_p_mfem__MatrixArrayCoefficient swig_types[122]
#define SWIGTYPE_p_mfem__MatrixCoefficient swig_types[123]
#define SWIGTYPE_p_mfem__MatrixConstantCoefficient swig_types[124]
#define SWIGTYPE_p_mfem__MatrixFunctionCoefficient swig_types[125]
#define SWIGTYPE_p_mfem__MatrixInverse swig_types[126]
#define SWIGTYPE_p_mfem__MatrixProductCoefficient swig_types[127]
#define SWIGTYPE_p_mfem__MatrixPyCoefficientBase swig_types[128]
#define SWIGTYPE_p_mfem__MatrixRestrictedCoefficient swig_types[129]
#define SWIGTYPE_p_mfem__MatrixSumCoefficient swig_types[130]
#define SWIGTYPE_p_mfem__MatrixVectorProductCoefficient swig_types[131]
#define SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator swig_types[132]
#define SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator swig_types[133]
#define SWIGTYPE_p_mfem__MixedCrossCurlIntegrator swig_types[134]
#define SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator swig_types[135]
#define SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator swig_types[136]
#define SWIGTYPE_p_mfem__MixedCrossGradIntegrator swig_types[137]
#define SWIGTYPE_p_mfem__MixedCrossProductIntegrator swig_types[138]
#define SWIGTYPE_p_mfem__MixedCurlCurlIntegrator swig_types[139]
#define SWIGTYPE_p_mfem__MixedCurlIntegrator swig_types[140]
#define SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator swig_types[141]
#define SWIGTYPE_p_mfem__MixedDivGradIntegrator swig_types[142]
#define SWIGTYPE_p_mfem__MixedDotProductIntegrator swig_types[143]
#define SWIGTYPE_p_mfem__MixedGradDivIntegrator swig_types[144]
#define SWIGTYPE_p_mfem__MixedGradGradIntegrator swig_types[145]
#define SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator swig_types[146]
#define SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator swig_types[147]
#define SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator swig_types[148]
#define SWIGTYPE_p_mfem__MixedScalarCurlIntegrator swig_types[149]
#define SWIGTYPE_p_mfem__MixedScalarDerivativeIntegrator swig_types[150]
#define SWIGTYPE_p_mfem__MixedScalarDivergenceIntegrator swig_types[151]
#define SWIGTYPE_p_mfem__MixedScalarIntegrator swig_types[152]
#define SWIGTYPE_p_mfem__MixedScalarMassIntegrator swig_types[153]
#define SWIGTYPE_p_mfem__MixedScalarVectorIntegrator swig_types[154]
#define SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator swig_types[155]
#define SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator swig_types[156]
#define SWIGTYPE_p_mfem__MixedScalarWeakCurlIntegrator swig_types[157]
#define SWIGTYPE_p_mfem__MixedScalarWeakDerivativeIntegrator swig_types[158]
#define SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator swig_types[159]
#define SWIGTYPE_p_mfem__MixedScalarWeakGradientIntegrator swig_types[160]
#define SWIGTYPE_p_mfem__MixedVectorCurlIntegrator swig_types[161]
#define SWIGTYPE_p_mfem__MixedVectorDivergenceIntegrator swig_types[162]
#define SWIGTYPE_p_mfem__MixedVectorGradientIntegrator swig_types[163]
#define SWIGTYPE_p_mfem__MixedVectorIntegrator swig_types[164]
#define SWIGTYPE_p_mfem__MixedVectorMassIntegrator swig_types[165]
#define SWIGTYPE_p_mfem__MixedVectorProductIntegrator swig_types[166]
#define SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator swig_types[167]
#define SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator swig_types[168]
#define SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator swig_types[169]
#define SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator swig_types[170]
#define SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator swig_types[171]
#define SWIGTYPE_p_mfem__NCL2FaceRestriction swig_types[172]
#define SWIGTYPE_p_mfem__ND_HexahedronElement swig_types[173]
#define SWIGTYPE_p_mfem__ND_QuadrilateralElement swig_types[174]
#define SWIGTYPE_p_mfem__ND_R1D_PointElement swig_types[175]
#define SWIGTYPE_p_mfem__ND_R1D_SegmentElement swig_types[176]
#define SWIGTYPE_p_mfem__ND_R2D_FiniteElement swig_types[177]
#define SWIGTYPE_p_mfem__ND_R2D_QuadrilateralElement swig_types[178]
#define SWIGTYPE_p_mfem__ND_R2D_SegmentElement swig_types[179]
#define SWIGTYPE_p_mfem__ND_R2D_TriangleElement swig_types[180]
#define SWIGTYPE_p_mfem__ND_SegmentElement swig_types[181]
#define SWIGTYPE_p_mfem__ND_TetrahedronElement swig_types[182]
#define SWIGTYPE_p_mfem__ND_TriangleElement swig_types[183]
#define SWIGTYPE_p_mfem__ND_WedgeElement swig_types[184]
#define SWIGTYPE_p_mfem__NURBS1DFiniteElement swig_types[185]
#define SWIGTYPE_p_mfem__NURBS2DFiniteElement swig_types[186]
#define SWIGTYPE_p_mfem__NURBS3DFiniteElement swig_types[187]
#define SWIGTYPE_p_mfem__NURBSFiniteElement swig_types[188]
#define SWIGTYPE_p_mfem__Nedelec1HexFiniteElement swig_types[189]
#define SWIGTYPE_p_mfem__Nedelec1PyrFiniteElement swig_types[190]
#define SWIGTYPE_p_mfem__Nedelec1TetFiniteElement swig_types[191]
#define SWIGTYPE_p_mfem__Nedelec1WdgFiniteElement swig_types[192]
#define SWIGTYPE_p_mfem__NodalFiniteElement swig_types[193]
#define SWIGTYPE_p_mfem__NodalTensorFiniteElement swig_types[194]
#define SWIGTYPE_p_mfem__NodeExtrudeCoefficient swig_types[195]
#define SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator swig_types[196]
#define SWIGTYPE_p_mfem__NonlinearFormIntegrator swig_types[197]
#define SWIGTYPE_p_mfem__NormalInterpolator swig_types[198]
#define SWIGTYPE_p_mfem__NormalTraceJumpIntegrator swig_types[199]
#define SWIGTYPE_p_mfem__NormalizedVectorCoefficient swig_types[200]
#define SWIGTYPE_p_mfem__Operator swig_types[201]
#define SWIGTYPE_p_mfem__OperatorHandle swig_types[202]
#define SWIGTYPE_p_mfem__OuterProductCoefficient swig_types[203]
#define SWIGTYPE_p_mfem__P0HexFiniteElement swig_types[204]
#define SWIGTYPE_p_mfem__P0PyrFiniteElement swig_types[205]
#define SWIGTYPE_p_mfem__P0QuadFiniteElement swig_types[206]
#define SWIGTYPE_p_mfem__P0SegmentFiniteElement swig_types[207]
#define SWIGTYPE_p_mfem__P0TetFiniteElement swig_types[208]
#define SWIGTYPE_p_mfem__P0TriangleFiniteElement swig_types[209]
#define SWIGTYPE_p_mfem__P0WdgFiniteElement swig_types[210]
#define SWIGTYPE_p_mfem__P1OnQuadFiniteElement swig_types[211]
#define SWIGTYPE_p_mfem__P1SegmentFiniteElement swig_types[212]
#define SWIGTYPE_p_mfem__P1TetNonConfFiniteElement swig_types[213]
#define SWIGTYPE_p_mfem__P2SegmentFiniteElement swig_types[214]
#define SWIGTYPE_p_mfem__PWCoefficient swig_types[215]
#define SWIGTYPE_p_mfem__PWConstCoefficient swig_types[216]
#define SWIGTYPE_p_mfem__PWMatrixCoefficient swig_types[217]
#define SWIGTYPE_p_mfem__PWVectorCoefficient swig_types[218]
#define SWIGTYPE_p_mfem__PointFiniteElement swig_types[219]
#define SWIGTYPE_p_mfem__PositiveFiniteElement swig_types[220]
#define SWIGTYPE_p_mfem__PositiveTensorFiniteElement swig_types[221]
#define SWIGTYPE_p_mfem__PowerCoefficient swig_types[222]
#define SWIGTYPE_p_mfem__ProductCoefficient swig_types[223]
#define SWIGTYPE_p_mfem__ProductOperator swig_types[224]
#define SWIGTYPE_p_mfem__PyCoefficientBase swig_types[225]
#define SWIGTYPE_p_mfem__PyOperatorBase swig_types[226]
#define SWIGTYPE_p_mfem__PyTimeDependentOperatorBase swig_types[227]
#define SWIGTYPE_p_mfem__Quad1DFiniteElement swig_types[228]
#define SWIGTYPE_p_mfem__Quad2DFiniteElement swig_types[229]
#define SWIGTYPE_p_mfem__QuadPos1DFiniteElement swig_types[230]
#define SWIGTYPE_p_mfem__Quadratic3DFiniteElement swig_types[231]
#define SWIGTYPE_p_mfem__QuadratureFunctionCoefficient swig_types[232]
#define SWIGTYPE_p_mfem__RAPOperator swig_types[233]
#define SWIGTYPE_p_mfem__RT0HexFiniteElement swig_types[234]
#define SWIGTYPE_p_mfem__RT0PyrFiniteElement swig_types[235]
#define SWIGTYPE_p_mfem__RT0QuadFiniteElement swig_types[236]
#define SWIGTYPE_p_mfem__RT0TetFiniteElement swig_types[237]
#define SWIGTYPE_p_mfem__RT0TriangleFiniteElement swig_types[238]
#define SWIGTYPE_p_mfem__RT0WdgFiniteElement swig_types[239]
#define SWIGTYPE_p_mfem__RT1HexFiniteElement swig_types[240]
#define SWIGTYPE_p_mfem__RT1QuadFiniteElement swig_types[241]
#define SWIGTYPE_p_mfem__RT1TriangleFiniteElement swig_types[242]
#define SWIGTYPE_p_mfem__RT2QuadFiniteElement swig_types[243]
#define SWIGTYPE_p_mfem__RT2TriangleFiniteElement swig_types[244]
#define SWIGTYPE_p_mfem__RT_HexahedronElement swig_types[245]
#define SWIGTYPE_p_mfem__RT_QuadrilateralElement swig_types[246]
#define SWIGTYPE_p_mfem__RT_R1D_SegmentElement swig_types[247]
#define SWIGTYPE_p_mfem__RT_R2D_FiniteElement swig_types[248]
#define SWIGTYPE_p_mfem__RT_R2D_QuadrilateralElement swig_types[249]
#define SWIGTYPE_p_mfem__RT_R2D_SegmentElement swig_types[250]
#define SWIGTYPE_p_mfem__RT_R2D_TriangleElement swig_types[251]
#define SWIGTYPE_p_mfem__RT_TetrahedronElement swig_types[252]
#define SWIGTYPE_p_mfem__RT_TriangleElement swig_types[253]
#define SWIGTYPE_p_mfem__RT_WedgeElement swig_types[254]
#define SWIGTYPE_p_mfem__RatioCoefficient swig_types[255]
#define SWIGTYPE_p_mfem__RectangularConstrainedOperator swig_types[256]
#define SWIGTYPE_p_mfem__RefinedBiLinear2DFiniteElement swig_types[257]
#define SWIGTYPE_p_mfem__RefinedLinear1DFiniteElement swig_types[258]
#define SWIGTYPE_p_mfem__RefinedLinear2DFiniteElement swig_types[259]
#define SWIGTYPE_p_mfem__RefinedLinear3DFiniteElement swig_types[260]
#define SWIGTYPE_p_mfem__RefinedTriLinear3DFiniteElement swig_types[261]
#define SWIGTYPE_p_mfem__Refinement swig_types[262]
#define SWIGTYPE_p_mfem__RestrictedCoefficient swig_types[263]
#define SWIGTYPE_p_mfem__RotTriLinearHexFiniteElement swig_types[264]
#define SWIGTYPE_p_mfem__ScalarCrossProductInterpolator swig_types[265]
#define SWIGTYPE_p_mfem__ScalarFiniteElement swig_types[266]
#define SWIGTYPE_p_mfem__ScalarMatrixProductCoefficient swig_types[267]
#define SWIGTYPE_p_mfem__ScalarProductInterpolator swig_types[268]
#define SWIGTYPE_p_mfem__ScalarVectorProductCoefficient swig_types[269]
#define SWIGTYPE_p_mfem__ScalarVectorProductInterpolator swig_types[270]
#define SWIGTYPE_p_mfem__ScaledOperator swig_types[271]
#define SWIGTYPE_p_mfem__SecondOrderTimeDependentOperator swig_types[272]
#define SWIGTYPE_p_mfem__SkewSymmetricVectorConvectionNLFIntegrator swig_types[273]
#define SWIGTYPE_p_mfem__Solver swig_types[274]
#define SWIGTYPE_p_mfem__SparseMatrix swig_types[275]
#define SWIGTYPE_p_mfem__SumCoefficient swig_types[276]
#define SWIGTYPE_p_mfem__SumIntegrator swig_types[277]
#define SWIGTYPE_p_mfem__SymmetricMatrixCoefficient swig_types[278]
#define SWIGTYPE_p_mfem__SymmetricMatrixConstantCoefficient swig_types[279]
#define SWIGTYPE_p_mfem__SymmetricMatrixFunctionCoefficient swig_types[280]
#define SWIGTYPE_p_mfem__TimeDependentAdjointOperator swig_types[281]
#define SWIGTYPE_p_mfem__TimeDependentOperator swig_types[282]
#define SWIGTYPE_p_mfem__TraceJumpIntegrator swig_types[283]
#define SWIGTYPE_p_mfem__TransformedCoefficient swig_types[284]
#define SWIGTYPE_p_mfem__TransposeIntegrator swig_types[285]
#define SWIGTYPE_p_mfem__TransposeMatrixCoefficient swig_types[286]
#define SWIGTYPE_p_mfem__TransposeOperator swig_types[287]
#define SWIGTYPE_p_mfem__TriLinear3DFiniteElement swig_types[288]
#define SWIGTYPE_p_mfem__TripleProductOperator swig_types[289]
#define SWIGTYPE_p_mfem__Vector swig_types[290]
#define SWIGTYPE_p_mfem__VectorArrayCoefficient swig_types[291]
#define SWIGTYPE_p_mfem__VectorCoefficient swig_types[292]
#define SWIGTYPE_p_mfem__VectorConstantCoefficient swig_types[293]
#define SWIGTYPE_p_mfem__VectorConvectionNLFIntegrator swig_types[294]
#define SWIGTYPE_p_mfem__VectorCrossProductCoefficient swig_types[295]
#define SWIGTYPE_p_mfem__VectorCrossProductInterpolator swig_types[296]
#define SWIGTYPE_p_mfem__VectorCurlCurlIntegrator swig_types[297]
#define SWIGTYPE_p_mfem__VectorDeltaCoefficient swig_types[298]
#define SWIGTYPE_p_mfem__VectorDiffusionIntegrator swig_types[299]
#define SWIGTYPE_p_mfem__VectorDivergenceIntegrator swig_types[300]
#define SWIGTYPE_p_mfem__VectorFECurlIntegrator swig_types[301]
#define SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator swig_types[302]
#define SWIGTYPE_p_mfem__VectorFEMassIntegrator swig_types[303]
#define SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator swig_types[304]
#define SWIGTYPE_p_mfem__VectorFiniteElement swig_types[305]
#define SWIGTYPE_p_mfem__VectorFunctionCoefficient swig_types[306]
#define SWIGTYPE_p_mfem__VectorGridFunctionCoefficient swig_types[307]
#define SWIGTYPE_p_mfem__VectorInnerProductInterpolator swig_types[308]
#define SWIGTYPE_p_mfem__VectorMassIntegrator swig_types[309]
#define SWIGTYPE_p_mfem__VectorPyCoefficientBase swig_types[310]
#define SWIGTYPE_p_mfem__VectorQuadratureFunctionCoefficient swig_types[311]
#define SWIGTYPE_p_mfem__VectorRestrictedCoefficient swig_types[312]
#define SWIGTYPE_p_mfem__VectorRotProductCoefficient swig_types[313]
#define SWIGTYPE_p_mfem__VectorScalarProductInterpolator swig_types[314]
#define SWIGTYPE_p_mfem__VectorSumCoefficient swig_types[315]
#define SWIGTYPE_p_mfem__VectorTensorFiniteElement swig_types[316]
#define SWIGTYPE_p_p_mfem__AbstractSparseMatrix swig_types[317]
#define SWIGTYPE_p_p_mfem__CoefficientVector swig_types[318]
#define SWIGTYPE_p_p_mfem__ConstrainedOperator swig_types[319]
#define SWIGTYPE_p_p_mfem__DenseMatrix swig_types[320]
#define SWIGTYPE_p_p_mfem__DenseMatrixInverse swig_types[321]
#define SWIGTYPE_p_p_mfem__DenseSymmetricMatrix swig_types[322]
#define SWIGTYPE_p_p_mfem__ElementRestriction swig_types[323]
#define SWIGTYPE_p_p_mfem__ElementRestrictionOperator swig_types[324]
#define SWIGTYPE_p_p_mfem__FaceRestriction swig_types[325]
#define SWIGTYPE_p_p_mfem__FiniteElementSpace swig_types[326]
#define SWIGTYPE_p_p_mfem__GridFunction swig_types[327]
#define SWIGTYPE_p_p_mfem__H1FaceRestriction swig_types[328]
#define SWIGTYPE_p_p_mfem__IdentityOperator swig_types[329]
#define SWIGTYPE_p_p_mfem__IntegrationRule swig_types[330]
#define SWIGTYPE_p_p_mfem__L2ElementRestriction swig_types[331]
#define SWIGTYPE_p_p_mfem__L2FaceRestriction swig_types[332]
#define SWIGTYPE_p_p_mfem__LinearForm swig_types[333]
#define SWIGTYPE_p_p_mfem__Matrix swig_types[334]
#define SWIGTYPE_p_p_mfem__MatrixInverse swig_types[335]
#define SWIGTYPE_p_p_mfem__NCL2FaceRestriction swig_types[336]
#define SWIGTYPE_p_p_mfem__Operator swig_types[337]
#define SWIGTYPE_p_p_mfem__ProductOperator swig_types[338]
#define SWIGTYPE_p_p_mfem__PyOperatorBase swig_types[339]
#define SWIGTYPE_p_p_mfem__PyTimeDependentOperatorBase swig_types[340]
#define SWIGTYPE_p_p_mfem__RAPOperator swig_types[341]
#define SWIGTYPE_p_p_mfem__RectangularConstrainedOperator swig_types[342]
#define SWIGTYPE_p_p_mfem__ScaledOperator swig_types[343]
#define SWIGTYPE_p_p_mfem__SecondOrderTimeDependentOperator swig_types[344]
#define SWIGTYPE_p_p_mfem__Solver swig_types[345]
#define SWIGTYPE_p_p_mfem__SparseMatrix swig_types[346]
#define SWIGTYPE_p_p_mfem__TimeDependentAdjointOperator swig_types[347]
#define SWIGTYPE_p_p_mfem__TimeDependentOperator swig_types[348]
#define SWIGTYPE_p_p_mfem__TransposeOperator swig_types[349]
#define SWIGTYPE_p_p_mfem__TripleProductOperator swig_types[350]
#define SWIGTYPE_p_p_mfem__Vector swig_types[351]
#define SWIGTYPE_p_pri_t swig_types[352]
#define SWIGTYPE_p_pyr_t swig_types[353]
#define SWIGTYPE_p_quad_t swig_types[354]
#define SWIGTYPE_p_seg_t swig_types[355]
#define SWIGTYPE_p_size_type swig_types[356]
#define SWIGTYPE_p_tet_t swig_types[357]
#define SWIGTYPE_p_tri_t swig_types[358]
#define SWIGTYPE_p_value_type swig_types[359]
static swig_type_info *swig_types[361];
static swig_module_info swig_module = {swig_types, 360, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _bilininteg.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__bilininteg

#else
#  define SWIG_init    init_bilininteg

#endif
#define SWIG_name    "_bilininteg"

#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
    void reset(T *p) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = p; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
  static void reset(SwigValueWrapper& t, T *p) { t.pointer.reset(p); }
};

/*
 * SwigValueInit() is a generic initialisation solution as the following approach:
 * 
 *       T c_result = T();
 * 
 * doesn't compile for all types for example:
 * 
 *       unsigned int c_result = unsigned int();
 */
template <typename T> T SwigValueInit() {
  return T();
}

#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "mfem.hpp"
#include "pyoperator.hpp"    
#include "../common/pycoefficient.hpp"
#include "numpy/arrayobject.h"
  //using namespace mfem;


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "bilininteg_wrap.h"

SwigDirector_BilinearFormIntegrator::SwigDirector_BilinearFormIntegrator(PyObject *self,mfem::IntegrationRule const *ir): mfem::BilinearFormIntegrator(ir), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((mfem::BilinearFormIntegrator *)this, this); 
}




void SwigDirector_BilinearFormIntegrator::SetIntRule(mfem::IntegrationRule const *ir) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(ir), SWIGTYPE_p_mfem__IntegrationRule,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char *const swig_method_name = "SetIntRule";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("SetIntRule");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleElementVector(mfem::FiniteElement const &el,mfem::ElementTransformation &Tr,mfem::Vector const &elfun,mfem::Vector &elvect) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Tr), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&elfun), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elvect), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char *const swig_method_name = "AssembleElementVector";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleElementVector");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleFaceVector(mfem::FiniteElement const &el1,mfem::FiniteElement const &el2,mfem::FaceElementTransformations &Tr,mfem::Vector const &elfun,mfem::Vector &elvect) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el1), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&el2), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&Tr), SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elfun), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj4;
  obj4 = SWIG_NewPointerObj(SWIG_as_voidptr(&elvect), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char *const swig_method_name = "AssembleFaceVector";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleFaceVector");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleElementGrad(mfem::FiniteElement const &el,mfem::ElementTransformation &Tr,mfem::Vector const &elfun,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Tr), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&elfun), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char *const swig_method_name = "AssembleElementGrad";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleElementGrad");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleFaceGrad(mfem::FiniteElement const &el1,mfem::FiniteElement const &el2,mfem::FaceElementTransformations &Tr,mfem::Vector const &elfun,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el1), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&el2), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&Tr), SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elfun), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj4;
  obj4 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char *const swig_method_name = "AssembleFaceGrad";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleFaceGrad");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


double SwigDirector_BilinearFormIntegrator::GetElementEnergy(mfem::FiniteElement const &el,mfem::ElementTransformation &Tr,mfem::Vector const &elfun) {
  double c_result = SwigValueInit< double >() ;
  
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Tr), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&elfun), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char *const swig_method_name = "GetElementEnergy";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("GetElementEnergy");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
  double swig_val;
  int swig_res = SWIG_AsVal_double(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""double""'");
  }
  c_result = static_cast< double >(swig_val);
  return (double) c_result;
}


void SwigDirector_BilinearFormIntegrator::AssemblePA(mfem::FiniteElementSpace const &fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char *const swig_method_name = "AssemblePA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssemblePA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssemblePA(mfem::FiniteElementSpace const &trial_fes,mfem::FiniteElementSpace const &test_fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&trial_fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&test_fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char *const swig_method_name = "AssemblePA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssemblePA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleGradPA(mfem::Vector const &x,mfem::FiniteElementSpace const &fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char *const swig_method_name = "AssembleGradPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleGradPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


double SwigDirector_BilinearFormIntegrator::GetLocalStateEnergyPA(mfem::Vector const &x) const {
  double c_result = SwigValueInit< double >() ;
  
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char *const swig_method_name = "GetLocalStateEnergyPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("GetLocalStateEnergyPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
  double swig_val;
  int swig_res = SWIG_AsVal_double(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""double""'");
  }
  c_result = static_cast< double >(swig_val);
  return (double) c_result;
}


void SwigDirector_BilinearFormIntegrator::AddMultPA(mfem::Vector const &x,mfem::Vector &y) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&y), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char *const swig_method_name = "AddMultPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AddMultPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AddMultGradPA(mfem::Vector const &x,mfem::Vector &y) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&y), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char *const swig_method_name = "AddMultGradPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AddMultGradPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleGradDiagonalPA(mfem::Vector &diag) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&diag), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char *const swig_method_name = "AssembleGradDiagonalPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleGradDiagonalPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


bool SwigDirector_BilinearFormIntegrator::SupportsCeed() const {
  bool c_result = SwigValueInit< bool >() ;
  
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char *const swig_method_name = "SupportsCeed";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject args = PyTuple_New(0);
  swig::SwigVar_PyObject result = PyObject_Call(method, (PyObject *) args, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("SupportsCeed");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


void SwigDirector_BilinearFormIntegrator::AssembleMF(mfem::FiniteElementSpace const &fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char *const swig_method_name = "AssembleMF";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleMF");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AddMultMF(mfem::Vector const &x,mfem::Vector &y) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&y), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char *const swig_method_name = "AddMultMF";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AddMultMF");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


SwigDirector_BilinearFormIntegrator::~SwigDirector_BilinearFormIntegrator() {
}

void SwigDirector_BilinearFormIntegrator::AssemblePAInteriorFaces(mfem::FiniteElementSpace const &fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char *const swig_method_name = "AssemblePAInteriorFaces";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssemblePAInteriorFaces");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssemblePABoundaryFaces(mfem::FiniteElementSpace const &fes) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char *const swig_method_name = "AssemblePABoundaryFaces";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssemblePABoundaryFaces");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleDiagonalPA(mfem::Vector &diag) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&diag), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char *const swig_method_name = "AssembleDiagonalPA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleDiagonalPA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleDiagonalPA_ADAt(mfem::Vector const &D,mfem::Vector &diag) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&D), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&diag), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 19;
  const char *const swig_method_name = "AssembleDiagonalPA_ADAt";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleDiagonalPA_ADAt");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AddMultTransposePA(mfem::Vector const &x,mfem::Vector &y) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&y), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 20;
  const char *const swig_method_name = "AddMultTransposePA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AddMultTransposePA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleEA(mfem::FiniteElementSpace const &fes,mfem::Vector &emat,bool const add) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&emat), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_From_bool(static_cast< bool >(add));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 21;
  const char *const swig_method_name = "AssembleEA";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleEA");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AddMultTransposeMF(mfem::Vector const &x,mfem::Vector &y) const {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&x), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&y), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 22;
  const char *const swig_method_name = "AddMultTransposeMF";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AddMultTransposeMF");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleDiagonalMF(mfem::Vector &diag) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&diag), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 23;
  const char *const swig_method_name = "AssembleDiagonalMF";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleDiagonalMF");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleEAInteriorFaces(mfem::FiniteElementSpace const &fes,mfem::Vector &ea_data_int,mfem::Vector &ea_data_ext,bool const add) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&ea_data_int), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&ea_data_ext), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_From_bool(static_cast< bool >(add));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 24;
  const char *const swig_method_name = "AssembleEAInteriorFaces";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleEAInteriorFaces");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleEABoundaryFaces(mfem::FiniteElementSpace const &fes,mfem::Vector &ea_data_bdr,bool const add) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fes), SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&ea_data_bdr), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_From_bool(static_cast< bool >(add));
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 25;
  const char *const swig_method_name = "AssembleEABoundaryFaces";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleEABoundaryFaces");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleElementMatrix(mfem::FiniteElement const &el,mfem::ElementTransformation &Trans,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 26;
  const char *const swig_method_name = "AssembleElementMatrix";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleElementMatrix");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleElementMatrix2(mfem::FiniteElement const &trial_fe,mfem::FiniteElement const &test_fe,mfem::ElementTransformation &Trans,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&trial_fe), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&test_fe), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 27;
  const char *const swig_method_name = "AssembleElementMatrix2";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleElementMatrix2");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &el1,mfem::FiniteElement const &el2,mfem::FaceElementTransformations &Trans,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el1), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&el2), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 28;
  const char *const swig_method_name = "AssembleFaceMatrix";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleFaceMatrix");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &trial_face_fe,mfem::FiniteElement const &test_fe1,mfem::FiniteElement const &test_fe2,mfem::FaceElementTransformations &Trans,mfem::DenseMatrix &elmat) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&trial_face_fe), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&test_fe1), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&test_fe2), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  swig::SwigVar_PyObject obj4;
  obj4 = SWIG_NewPointerObj(SWIG_as_voidptr(&elmat), SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 29;
  const char *const swig_method_name = "AssembleFaceMatrix";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("AssembleFaceMatrix");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


void SwigDirector_BilinearFormIntegrator::ComputeElementFlux(mfem::FiniteElement const &el,mfem::ElementTransformation &Trans,mfem::Vector &u,mfem::FiniteElement const &fluxelem,mfem::Vector &flux,bool with_coef,mfem::IntegrationRule const *ir) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&el), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&u), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(&fluxelem), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj4;
  obj4 = SWIG_NewPointerObj(SWIG_as_voidptr(&flux), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj5;
  obj5 = SWIG_From_bool(static_cast< bool >(with_coef));
  swig::SwigVar_PyObject obj6;
  obj6 = SWIG_NewPointerObj(SWIG_as_voidptr(ir), SWIGTYPE_p_mfem__IntegrationRule,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 30;
  const char *const swig_method_name = "ComputeElementFlux";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4,(PyObject *)obj5,(PyObject *)obj6, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("ComputeElementFlux");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3,(PyObject *)obj4,(PyObject *)obj5,(PyObject *)obj6, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
}


double SwigDirector_BilinearFormIntegrator::ComputeFluxEnergy(mfem::FiniteElement const &fluxelem,mfem::ElementTransformation &Trans,mfem::Vector &flux,mfem::Vector *d_energy) {
  double c_result = SwigValueInit< double >() ;
  
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&fluxelem), SWIGTYPE_p_mfem__FiniteElement,  0 );
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&Trans), SWIGTYPE_p_mfem__ElementTransformation,  0 );
  swig::SwigVar_PyObject obj2;
  obj2 = SWIG_NewPointerObj(SWIG_as_voidptr(&flux), SWIGTYPE_p_mfem__Vector,  0 );
  swig::SwigVar_PyObject obj3;
  obj3 = SWIG_NewPointerObj(SWIG_as_voidptr(d_energy), SWIGTYPE_p_mfem__Vector,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call BilinearFormIntegrator.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 31;
  const char *const swig_method_name = "ComputeFluxEnergy";
  PyObject *method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunctionObjArgs(method ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#else
  swig::SwigVar_PyObject swig_method_name = SWIG_Python_str_FromChar("ComputeFluxEnergy");
  swig::SwigVar_PyObject result = PyObject_CallMethodObjArgs(swig_get_self(), (PyObject *) swig_method_name ,(PyObject *)obj0,(PyObject *)obj1,(PyObject *)obj2,(PyObject *)obj3, NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if (error != NULL) {
        throw Swig::DirectorMethodException();
      }
    }
  }
  double swig_val;
  int swig_res = SWIG_AsVal_double(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""double""'");
  }
  c_result = static_cast< double >(swig_val);
  return (double) c_result;
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN int Swig_var_HCURL_MAX_D1D_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable HCURL_MAX_D1D is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_HCURL_MAX_D1D_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(mfem::HCURL_MAX_D1D));
  return pyobj;
}


SWIGINTERN int Swig_var_HCURL_MAX_Q1D_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable HCURL_MAX_Q1D is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_HCURL_MAX_Q1D_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(mfem::HCURL_MAX_Q1D));
  return pyobj;
}


SWIGINTERN int Swig_var_HDIV_MAX_D1D_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable HDIV_MAX_D1D is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_HDIV_MAX_D1D_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(mfem::HDIV_MAX_D1D));
  return pyobj;
}


SWIGINTERN int Swig_var_HDIV_MAX_Q1D_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable HDIV_MAX_Q1D is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_HDIV_MAX_Q1D_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(mfem::HDIV_MAX_Q1D));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_new_BilinearFormIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"_self",  (char *)"ir",  NULL 
  };
  mfem::BilinearFormIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_BilinearFormIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  arg1 = obj0;
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BilinearFormIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      if ( arg1 != Py_None ) {
        /* subclassed */
        result = (mfem::BilinearFormIntegrator *)new SwigDirector_BilinearFormIntegrator(arg1,(mfem::IntegrationRule const *)arg2); 
      } else {
        SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
        SWIG_fail;
      }
      
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__BilinearFormIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssemblePA((mfem::FiniteElementSpace const &)*arg2);
        } else {
          (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssemblePA__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
        } else {
          (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BilinearFormIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BilinearFormIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_BilinearFormIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BilinearFormIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BilinearFormIntegrator_AssemblePA__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BilinearFormIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::BilinearFormIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::BilinearFormIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssemblePAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:BilinearFormIntegrator_AssemblePAInteriorFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssemblePAInteriorFaces" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssemblePAInteriorFaces((mfem::FiniteElementSpace const &)*arg2);
        } else {
          (arg1)->AssemblePAInteriorFaces((mfem::FiniteElementSpace const &)*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssemblePABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:BilinearFormIntegrator_AssemblePABoundaryFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssemblePABoundaryFaces" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssemblePABoundaryFaces((mfem::FiniteElementSpace const &)*arg2);
        } else {
          (arg1)->AssemblePABoundaryFaces((mfem::FiniteElementSpace const &)*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:BilinearFormIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleDiagonalPA(*arg2);
        } else {
          (arg1)->AssembleDiagonalPA(*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleDiagonalPA_ADAt(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"D",  (char *)"diag",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:BilinearFormIntegrator_AssembleDiagonalPA_ADAt", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleDiagonalPA_ADAt" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleDiagonalPA_ADAt" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleDiagonalPA_ADAt" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleDiagonalPA_ADAt" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleDiagonalPA_ADAt" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleDiagonalPA_ADAt((mfem::Vector const &)*arg2,*arg3);
        } else {
          (arg1)->AssembleDiagonalPA_ADAt((mfem::Vector const &)*arg2,*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:BilinearFormIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          ((mfem::BilinearFormIntegrator const *)arg1)->mfem::BilinearFormIntegrator::AddMultPA((mfem::Vector const &)*arg2,*arg3);
        } else {
          ((mfem::BilinearFormIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:BilinearFormIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          ((mfem::BilinearFormIntegrator const *)arg1)->mfem::BilinearFormIntegrator::AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
        } else {
          ((mfem::BilinearFormIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 = (bool) (bool)true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:BilinearFormIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  if (obj3) {
    ecode4 = SWIG_AsVal_bool(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BilinearFormIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
        } else {
          (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:BilinearFormIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleMF((mfem::FiniteElementSpace const &)*arg2);
        } else {
          (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:BilinearFormIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          ((mfem::BilinearFormIntegrator const *)arg1)->mfem::BilinearFormIntegrator::AddMultMF((mfem::Vector const &)*arg2,*arg3);
        } else {
          ((mfem::BilinearFormIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AddMultTransposeMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:BilinearFormIntegrator_AddMultTransposeMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AddMultTransposeMF" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AddMultTransposeMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultTransposeMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AddMultTransposeMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AddMultTransposeMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          ((mfem::BilinearFormIntegrator const *)arg1)->mfem::BilinearFormIntegrator::AddMultTransposeMF((mfem::Vector const &)*arg2,*arg3);
        } else {
          ((mfem::BilinearFormIntegrator const *)arg1)->AddMultTransposeMF((mfem::Vector const &)*arg2,*arg3);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:BilinearFormIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleDiagonalMF(*arg2);
        } else {
          (arg1)->AssembleDiagonalMF(*arg2);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleEAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  bool arg5 = (bool) (bool)true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_int",  (char *)"ea_data_ext",  (char *)"add",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO|O:BilinearFormIntegrator_AssembleEAInteriorFaces", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  if (obj4) {
    ecode5 = SWIG_AsVal_bool(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BilinearFormIntegrator_AssembleEAInteriorFaces" "', argument " "5"" of type '" "bool""'");
    } 
    arg5 = static_cast< bool >(val5);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleEAInteriorFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,*arg4,arg5);
        } else {
          (arg1)->AssembleEAInteriorFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,*arg4,arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleEABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 = (bool) (bool)true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_bdr",  (char *)"add",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO|O:BilinearFormIntegrator_AssembleEABoundaryFaces", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  if (obj3) {
    ecode4 = SWIG_AsVal_bool(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BilinearFormIntegrator_AssembleEABoundaryFaces" "', argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleEABoundaryFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
        } else {
          (arg1)->AssembleEABoundaryFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:BilinearFormIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
        } else {
          (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:BilinearFormIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
        } else {
          (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleFaceMatrix__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
        } else {
          (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==swig_obj[0]));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
        } else {
          (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BilinearFormIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BilinearFormIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_BilinearFormIntegrator_AssembleFaceMatrix__SWIG_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BilinearFormIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_BilinearFormIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BilinearFormIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::BilinearFormIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::BilinearFormIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleElementVector(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Tr",  (char *)"elfun",  (char *)"elvect",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:BilinearFormIntegrator_AssembleElementVector", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleElementVector((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
        } else {
          (arg1)->AssembleElementVector((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleFaceVector(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::Vector *arg5 = 0 ;
  mfem::Vector *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el1",  (char *)"el2",  (char *)"Tr",  (char *)"elfun",  (char *)"elvect",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOO:BilinearFormIntegrator_AssembleFaceVector", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "5"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "5"" of type '" "mfem::Vector const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceVector" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  arg6 = reinterpret_cast< mfem::Vector * >(argp6);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleFaceVector((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,(mfem::Vector const &)*arg5,*arg6);
        } else {
          (arg1)->AssembleFaceVector((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,(mfem::Vector const &)*arg5,*arg6);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleElementGrad(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Tr",  (char *)"elfun",  (char *)"elmat",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:BilinearFormIntegrator_AssembleElementGrad", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleElementGrad" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleElementGrad((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
        } else {
          (arg1)->AssembleElementGrad((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_AssembleFaceGrad(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::Vector *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el1",  (char *)"el2",  (char *)"Tr",  (char *)"elfun",  (char *)"elmat",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOO:BilinearFormIntegrator_AssembleFaceGrad", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "5"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "5"" of type '" "mfem::Vector const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_AssembleFaceGrad" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::AssembleFaceGrad((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,(mfem::Vector const &)*arg5,*arg6);
        } else {
          (arg1)->AssembleFaceGrad((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,(mfem::Vector const &)*arg5,*arg6);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_ComputeElementFlux(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::FiniteElement *arg5 = 0 ;
  mfem::Vector *arg6 = 0 ;
  bool arg7 = (bool) true ;
  mfem::IntegrationRule *arg8 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"u",  (char *)"fluxelem",  (char *)"flux",  (char *)"with_coef",  (char *)"ir",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOO|OO:BilinearFormIntegrator_ComputeElementFlux", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5, &obj6, &obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FiniteElement * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  arg6 = reinterpret_cast< mfem::Vector * >(argp6);
  if (obj6) {
    ecode7 = SWIG_AsVal_bool(obj6, &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
  }
  if (obj7) {
    res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "BilinearFormIntegrator_ComputeElementFlux" "', argument " "8"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg8 = reinterpret_cast< mfem::IntegrationRule * >(argp8);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          (arg1)->mfem::BilinearFormIntegrator::ComputeElementFlux((mfem::FiniteElement const &)*arg2,*arg3,*arg4,(mfem::FiniteElement const &)*arg5,*arg6,arg7,(mfem::IntegrationRule const *)arg8);
        } else {
          (arg1)->ComputeElementFlux((mfem::FiniteElement const &)*arg2,*arg3,*arg4,(mfem::FiniteElement const &)*arg5,*arg6,arg7,(mfem::IntegrationRule const *)arg8);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BilinearFormIntegrator_ComputeFluxEnergy(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = (mfem::Vector *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fluxelem",  (char *)"Trans",  (char *)"flux",  (char *)"d_energy",  NULL 
  };
  Swig::Director *director = 0;
  bool upcall = false;
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO|O:BilinearFormIntegrator_ComputeFluxEnergy", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mfem__Vector, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BilinearFormIntegrator_ComputeFluxEnergy" "', argument " "5"" of type '" "mfem::Vector *""'"); 
    }
    arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  }
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    {
      try {
        if (upcall) {
          result = (double)(arg1)->mfem::BilinearFormIntegrator::ComputeFluxEnergy((mfem::FiniteElement const &)*arg2,*arg3,*arg4,arg5);
        } else {
          result = (double)(arg1)->ComputeFluxEnergy((mfem::FiniteElement const &)*arg2,*arg3,*arg4,arg5);
        }
      }
#ifdef  MFEM_USE_EXCEPTIONS
      catch (mfem::ErrorException &_e) {
        std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
        s = s + s2;    
        SWIG_exception(SWIG_RuntimeError, s.c_str());
      }
#endif
      
      catch (Swig::DirectorException &e){
        SWIG_fail;
      }    
      catch (...) {
        SWIG_exception(SWIG_RuntimeError, "unknown exception");
      }	 
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BilinearFormIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BilinearFormIntegrator" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_BilinearFormIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"_self",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:disown_BilinearFormIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_BilinearFormIntegrator" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BilinearFormIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__BilinearFormIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BilinearFormIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TransposeIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  int arg2 = (int) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"bfi_",  (char *)"own_bfi_",  NULL 
  };
  mfem::TransposeIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_TransposeIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TransposeIntegrator" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  if (obj1) {
    {
      if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(obj1);
    }
  }
  {
    try {
      result = (mfem::TransposeIntegrator *)new mfem::TransposeIntegrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__TransposeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_SetIntRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:TransposeIntegrator_SetIntRule", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_SetIntRule" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_SetIntRule" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      (arg1)->SetIntRule((mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:TransposeIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:TransposeIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TransposeIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TransposeIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_TransposeIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TransposeIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_TransposeIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TransposeIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::TransposeIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::TransposeIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TransposeIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TransposeIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_TransposeIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TransposeIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_TransposeIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TransposeIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::TransposeIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::TransposeIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssemblePAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:TransposeIntegrator_AssemblePAInteriorFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssemblePAInteriorFaces" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePAInteriorFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssemblePABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:TransposeIntegrator_AssemblePABoundaryFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssemblePABoundaryFaces" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePABoundaryFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:TransposeIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::TransposeIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::TransposeIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:TransposeIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::TransposeIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::TransposeIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:TransposeIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TransposeIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleEAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_int",  (char *)"ea_data_ext",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:TransposeIntegrator_AssembleEAInteriorFaces", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "TransposeIntegrator_AssembleEAInteriorFaces" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      (arg1)->AssembleEAInteriorFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransposeIntegrator_AssembleEABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_bdr",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:TransposeIntegrator_AssembleEABoundaryFaces", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "TransposeIntegrator_AssembleEABoundaryFaces" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEABoundaryFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TransposeIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::TransposeIntegrator *arg1 = (mfem::TransposeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TransposeIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TransposeIntegrator" "', argument " "1"" of type '" "mfem::TransposeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TransposeIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TransposeIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__TransposeIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TransposeIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_LumpedIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  int arg2 = (int) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"bfi_",  (char *)"own_bfi_",  NULL 
  };
  mfem::LumpedIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_LumpedIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LumpedIntegrator" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  if (obj1) {
    {
      if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(obj1);
    }
  }
  {
    try {
      result = (mfem::LumpedIntegrator *)new mfem::LumpedIntegrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__LumpedIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LumpedIntegrator_SetIntRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::LumpedIntegrator *arg1 = (mfem::LumpedIntegrator *) 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:LumpedIntegrator_SetIntRule", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__LumpedIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LumpedIntegrator_SetIntRule" "', argument " "1"" of type '" "mfem::LumpedIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::LumpedIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LumpedIntegrator_SetIntRule" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      (arg1)->SetIntRule((mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LumpedIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::LumpedIntegrator *arg1 = (mfem::LumpedIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:LumpedIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__LumpedIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::LumpedIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::LumpedIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LumpedIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LumpedIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::LumpedIntegrator *arg1 = (mfem::LumpedIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__LumpedIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LumpedIntegrator" "', argument " "1"" of type '" "mfem::LumpedIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::LumpedIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LumpedIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__LumpedIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LumpedIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_InverseIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::BilinearFormIntegrator *arg1 = (mfem::BilinearFormIntegrator *) 0 ;
  int arg2 = (int) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"integ",  (char *)"own_integ",  NULL 
  };
  mfem::InverseIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_InverseIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InverseIntegrator" "', argument " "1"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp1);
  if (obj1) {
    {
      if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(obj1);
    }
  }
  {
    try {
      result = (mfem::InverseIntegrator *)new mfem::InverseIntegrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__InverseIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InverseIntegrator_SetIntRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::InverseIntegrator *arg1 = (mfem::InverseIntegrator *) 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:InverseIntegrator_SetIntRule", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__InverseIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InverseIntegrator_SetIntRule" "', argument " "1"" of type '" "mfem::InverseIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::InverseIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InverseIntegrator_SetIntRule" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      (arg1)->SetIntRule((mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InverseIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::InverseIntegrator *arg1 = (mfem::InverseIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:InverseIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__InverseIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::InverseIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::InverseIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "InverseIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_InverseIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::InverseIntegrator *arg1 = (mfem::InverseIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__InverseIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_InverseIntegrator" "', argument " "1"" of type '" "mfem::InverseIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::InverseIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *InverseIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__InverseIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *InverseIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SumIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"own_integs",  NULL 
  };
  mfem::SumIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "|O:new_SumIntegrator", kwnames, &obj0)) SWIG_fail;
  if (obj0) {
    {
      if ((PyArray_PyIntAsInt(obj0) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg1 = PyArray_PyIntAsInt(obj0);
    }
  }
  {
    try {
      result = (mfem::SumIntegrator *)new mfem::SumIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__SumIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_SetIntRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_SetIntRule", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_SetIntRule" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_SetIntRule" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      (arg1)->SetIntRule((mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AddIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::BilinearFormIntegrator *arg2 = (mfem::BilinearFormIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"integ",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AddIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AddIntegrator" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_mfem__BilinearFormIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AddIntegrator" "', argument " "2"" of type '" "mfem::BilinearFormIntegrator *""'"); 
  }
  arg2 = reinterpret_cast< mfem::BilinearFormIntegrator * >(argp2);
  {
    try {
      (arg1)->AddIntegrator(arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:SumIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:SumIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleFaceMatrix__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SumIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__SumIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_SumIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__SumIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_SumIntegrator_AssembleFaceMatrix__SWIG_2(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SumIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::SumIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::SumIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SumIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__SumIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SumIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__SumIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SumIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SumIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::SumIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::SumIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssemblePAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AssemblePAInteriorFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssemblePAInteriorFaces" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePAInteriorFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssemblePABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AssemblePABoundaryFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssemblePABoundaryFaces" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePABoundaryFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:SumIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::SumIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::SumIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:SumIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::SumIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::SumIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:SumIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::SumIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::SumIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AddMultTransposeMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:SumIntegrator_AddMultTransposeMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AddMultTransposeMF" "', argument " "1"" of type '" "mfem::SumIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AddMultTransposeMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultTransposeMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AddMultTransposeMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AddMultTransposeMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::SumIntegrator const *)arg1)->AddMultTransposeMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:SumIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:SumIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SumIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleEAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_int",  (char *)"ea_data_ext",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:SumIntegrator_AssembleEAInteriorFaces", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SumIntegrator_AssembleEAInteriorFaces" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      (arg1)->AssembleEAInteriorFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumIntegrator_AssembleEABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_bdr",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:SumIntegrator_AssembleEABoundaryFaces", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__SumIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SumIntegrator_AssembleEABoundaryFaces" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEABoundaryFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SumIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::SumIntegrator *arg1 = (mfem::SumIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__SumIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SumIntegrator" "', argument " "1"" of type '" "mfem::SumIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::SumIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SumIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__SumIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SumIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_MixedScalarIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarIntegrator *arg1 = (mfem::MixedScalarIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:MixedScalarIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::MixedScalarIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarIntegrator *arg1 = (mfem::MixedScalarIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::MixedScalarIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarIntegrator *arg1 = (mfem::MixedScalarIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MixedVectorIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedVectorIntegrator *arg1 = (mfem::MixedVectorIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:MixedVectorIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedVectorIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::MixedVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedVectorIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedVectorIntegrator *arg1 = (mfem::MixedVectorIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedVectorIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedVectorIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::MixedVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedVectorIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorIntegrator *arg1 = (mfem::MixedVectorIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarVectorIntegrator *arg1 = (mfem::MixedScalarVectorIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:MixedScalarVectorIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarVectorIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::MixedScalarVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarVectorIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarVectorIntegrator *arg1 = (mfem::MixedScalarVectorIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarVectorIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarVectorIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::MixedScalarVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarVectorIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarVectorIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarVectorIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarVectorIntegrator *arg1 = (mfem::MixedScalarVectorIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarVectorIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarVectorIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarVectorIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarVectorIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarVectorIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarVectorIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MixedScalarMassIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarMassIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarMassIntegrator *)new mfem::MixedScalarMassIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarMassIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarMassIntegrator *)new mfem::MixedScalarMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarMassIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarMassIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarMassIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarMassIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarMassIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarMassIntegrator::MixedScalarMassIntegrator()\n"
    "    mfem::MixedScalarMassIntegrator::MixedScalarMassIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarMassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarMassIntegrator *arg1 = (mfem::MixedScalarMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarMassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarMassIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarMassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarMassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarMassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarMassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorProductIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedVectorProductIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedVectorProductIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorProductIntegrator *)new mfem::MixedVectorProductIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorProductIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorProductIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorProductIntegrator *arg1 = (mfem::MixedVectorProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorProductIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorProductIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorProductIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorProductIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorProductIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorProductIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarDerivativeIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarDerivativeIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarDerivativeIntegrator *)new mfem::MixedScalarDerivativeIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarDerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarDerivativeIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarDerivativeIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarDerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarDerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarDerivativeIntegrator *)new mfem::MixedScalarDerivativeIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarDerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarDerivativeIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarDerivativeIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarDerivativeIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarDerivativeIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarDerivativeIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarDerivativeIntegrator::MixedScalarDerivativeIntegrator()\n"
    "    mfem::MixedScalarDerivativeIntegrator::MixedScalarDerivativeIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarDerivativeIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarDerivativeIntegrator *arg1 = (mfem::MixedScalarDerivativeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarDerivativeIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarDerivativeIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarDerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarDerivativeIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarDerivativeIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarDerivativeIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarDerivativeIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakDerivativeIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDerivativeIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarWeakDerivativeIntegrator *)new mfem::MixedScalarWeakDerivativeIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakDerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakDerivativeIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarWeakDerivativeIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakDerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakDerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakDerivativeIntegrator *)new mfem::MixedScalarWeakDerivativeIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakDerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakDerivativeIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarWeakDerivativeIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarWeakDerivativeIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarWeakDerivativeIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarWeakDerivativeIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarWeakDerivativeIntegrator::MixedScalarWeakDerivativeIntegrator()\n"
    "    mfem::MixedScalarWeakDerivativeIntegrator::MixedScalarWeakDerivativeIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakDerivativeIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDerivativeIntegrator *arg1 = (mfem::MixedScalarWeakDerivativeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDerivativeIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakDerivativeIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakDerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDerivativeIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakDerivativeIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakDerivativeIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakDerivativeIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarDivergenceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarDivergenceIntegrator *)new mfem::MixedScalarDivergenceIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarDivergenceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarDivergenceIntegrator *)new mfem::MixedScalarDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarDivergenceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarDivergenceIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarDivergenceIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarDivergenceIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarDivergenceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarDivergenceIntegrator::MixedScalarDivergenceIntegrator()\n"
    "    mfem::MixedScalarDivergenceIntegrator::MixedScalarDivergenceIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarDivergenceIntegrator *arg1 = (mfem::MixedScalarDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorDivergenceIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedVectorDivergenceIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedVectorDivergenceIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorDivergenceIntegrator *)new mfem::MixedVectorDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorDivergenceIntegrator *arg1 = (mfem::MixedVectorDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakGradientIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakGradientIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarWeakGradientIntegrator *)new mfem::MixedScalarWeakGradientIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakGradientIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarWeakGradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakGradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakGradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakGradientIntegrator *)new mfem::MixedScalarWeakGradientIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakGradientIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarWeakGradientIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarWeakGradientIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarWeakGradientIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarWeakGradientIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarWeakGradientIntegrator::MixedScalarWeakGradientIntegrator()\n"
    "    mfem::MixedScalarWeakGradientIntegrator::MixedScalarWeakGradientIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakGradientIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakGradientIntegrator *arg1 = (mfem::MixedScalarWeakGradientIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakGradientIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakGradientIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakGradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakGradientIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakGradientIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakGradientIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakGradientIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarCurlIntegrator *)new mfem::MixedScalarCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarCurlIntegrator *)new mfem::MixedScalarCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarCurlIntegrator::MixedScalarCurlIntegrator()\n"
    "    mfem::MixedScalarCurlIntegrator::MixedScalarCurlIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCurlIntegrator *arg1 = (mfem::MixedScalarCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedScalarWeakCurlIntegrator *)new mfem::MixedScalarWeakCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedScalarWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakCurlIntegrator *)new mfem::MixedScalarWeakCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedScalarWeakCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedScalarWeakCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedScalarWeakCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedScalarWeakCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedScalarWeakCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedScalarWeakCurlIntegrator::MixedScalarWeakCurlIntegrator()\n"
    "    mfem::MixedScalarWeakCurlIntegrator::MixedScalarWeakCurlIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlIntegrator *arg1 = (mfem::MixedScalarWeakCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorMassIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedVectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedVectorMassIntegrator *)new mfem::MixedVectorMassIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorMassIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorMassIntegrator *)new mfem::MixedVectorMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorMassIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorMassIntegrator *)new mfem::MixedVectorMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorMassIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorMassIntegrator *)new mfem::MixedVectorMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorMassIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedVectorMassIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedVectorMassIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorMassIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorMassIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorMassIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedVectorMassIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedVectorMassIntegrator::MixedVectorMassIntegrator()\n"
    "    mfem::MixedVectorMassIntegrator::MixedVectorMassIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedVectorMassIntegrator::MixedVectorMassIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedVectorMassIntegrator::MixedVectorMassIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorMassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorMassIntegrator *arg1 = (mfem::MixedVectorMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorMassIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorMassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorMassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorMassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorMassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossProductIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossProductIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossProductIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossProductIntegrator *)new mfem::MixedCrossProductIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossProductIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossProductIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossProductIntegrator *arg1 = (mfem::MixedCrossProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossProductIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossProductIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossProductIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossProductIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossProductIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossProductIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedDotProductIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedDotProductIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedDotProductIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedDotProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedDotProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedDotProductIntegrator *)new mfem::MixedDotProductIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedDotProductIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDotProductIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDotProductIntegrator *arg1 = (mfem::MixedDotProductIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedDotProductIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDotProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDotProductIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedDotProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDotProductIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDotProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDotProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDotProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDotProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedDotProductIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDotProductIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDotProductIntegrator *arg1 = (mfem::MixedDotProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDotProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDotProductIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedDotProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDotProductIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedDotProductIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedDotProductIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDotProductIntegrator *arg1 = (mfem::MixedDotProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDotProductIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedDotProductIntegrator" "', argument " "1"" of type '" "mfem::MixedDotProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDotProductIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedDotProductIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedDotProductIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedDotProductIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedWeakGradDotIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedWeakGradDotIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedWeakGradDotIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedWeakGradDotIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedWeakGradDotIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedWeakGradDotIntegrator *)new mfem::MixedWeakGradDotIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakGradDotIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakGradDotIntegrator *arg1 = (mfem::MixedWeakGradDotIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedWeakGradDotIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedWeakGradDotIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakGradDotIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedWeakGradDotIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakGradDotIntegrator *arg1 = (mfem::MixedWeakGradDotIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedWeakGradDotIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakGradDotIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedWeakGradDotIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakGradDotIntegrator_GetIntegrationOrder(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakGradDotIntegrator *arg1 = (mfem::MixedWeakGradDotIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedWeakGradDotIntegrator_GetIntegrationOrder", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "1"" of type '" "mfem::MixedWeakGradDotIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakGradDotIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_GetIntegrationOrder" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  {
    try {
      result = (int)(arg1)->GetIntegrationOrder((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakGradDotIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakGradDotIntegrator *arg1 = (mfem::MixedWeakGradDotIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedWeakGradDotIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedWeakGradDotIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakGradDotIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakGradDotIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedWeakGradDotIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakGradDotIntegrator *arg1 = (mfem::MixedWeakGradDotIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedWeakGradDotIntegrator" "', argument " "1"" of type '" "mfem::MixedWeakGradDotIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakGradDotIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedWeakGradDotIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedWeakGradDotIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedWeakGradDotIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedWeakDivCrossIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedWeakDivCrossIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedWeakDivCrossIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedWeakDivCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedWeakDivCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedWeakDivCrossIntegrator *)new mfem::MixedWeakDivCrossIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakDivCrossIntegrator *arg1 = (mfem::MixedWeakDivCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedWeakDivCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakDivCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedWeakDivCrossIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakDivCrossIntegrator *arg1 = (mfem::MixedWeakDivCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedWeakDivCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakDivCrossIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedWeakDivCrossIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakDivCrossIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakDivCrossIntegrator *arg1 = (mfem::MixedWeakDivCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedWeakDivCrossIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakDivCrossIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedWeakDivCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakDivCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakDivCrossIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakDivCrossIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakDivCrossIntegrator *arg1 = (mfem::MixedWeakDivCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedWeakDivCrossIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedWeakDivCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakDivCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakDivCrossIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedWeakDivCrossIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakDivCrossIntegrator *arg1 = (mfem::MixedWeakDivCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedWeakDivCrossIntegrator" "', argument " "1"" of type '" "mfem::MixedWeakDivCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakDivCrossIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedWeakDivCrossIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedWeakDivCrossIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedWeakDivCrossIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedGradGradIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedGradGradIntegrator *)new mfem::MixedGradGradIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedGradGradIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedGradGradIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedGradGradIntegrator *)new mfem::MixedGradGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedGradGradIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedGradGradIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedGradGradIntegrator *)new mfem::MixedGradGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedGradGradIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedGradGradIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedGradGradIntegrator *)new mfem::MixedGradGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedGradGradIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedGradGradIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedGradGradIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedGradGradIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedGradGradIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedGradGradIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedGradGradIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedGradGradIntegrator::MixedGradGradIntegrator()\n"
    "    mfem::MixedGradGradIntegrator::MixedGradGradIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedGradGradIntegrator::MixedGradGradIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedGradGradIntegrator::MixedGradGradIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedGradGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedGradGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedGradGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_GetIntegrationOrder(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedGradGradIntegrator_GetIntegrationOrder", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_GetIntegrationOrder" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  {
    try {
      result = (int)(arg1)->GetIntegrationOrder((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedGradGradIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedGradGradIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedGradGradIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradGradIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedGradGradIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedGradGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedGradGradIntegrator *arg1 = (mfem::MixedGradGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedGradGradIntegrator" "', argument " "1"" of type '" "mfem::MixedGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedGradGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedGradGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedGradGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossGradGradIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossGradGradIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossGradGradIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossGradGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossGradGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossGradGradIntegrator *)new mfem::MixedCrossGradGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossGradGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossGradGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossGradGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossGradGradIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradGradIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossGradGradIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradGradIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradGradIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossGradGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradGradIntegrator *arg1 = (mfem::MixedCrossGradGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossGradGradIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossGradGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossGradGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossGradGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossGradGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCurlCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedCurlCurlIntegrator *)new mfem::MixedCurlCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCurlCurlIntegrator *)new mfem::MixedCurlCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlCurlIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCurlCurlIntegrator *)new mfem::MixedCurlCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlCurlIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCurlCurlIntegrator *)new mfem::MixedCurlCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedCurlCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedCurlCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedCurlCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedCurlCurlIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedCurlCurlIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedCurlCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedCurlCurlIntegrator::MixedCurlCurlIntegrator()\n"
    "    mfem::MixedCurlCurlIntegrator::MixedCurlCurlIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedCurlCurlIntegrator::MixedCurlCurlIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedCurlCurlIntegrator::MixedCurlCurlIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCurlCurlIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCurlCurlIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCurlCurlIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCurlCurlIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCurlCurlIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCurlCurlIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCurlCurlIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCurlCurlIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCurlCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCurlCurlIntegrator *arg1 = (mfem::MixedCurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCurlCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCurlCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCurlCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossCurlCurlIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossCurlCurlIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossCurlCurlIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossCurlCurlIntegrator *)new mfem::MixedCrossCurlCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossCurlCurlIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossCurlCurlIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossCurlCurlIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossCurlCurlIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossCurlCurlIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlCurlIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossCurlCurlIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossCurlCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlCurlIntegrator *arg1 = (mfem::MixedCrossCurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossCurlCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossCurlCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossCurlCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossCurlGradIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossCurlGradIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossCurlGradIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossCurlGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossCurlGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossCurlGradIntegrator *)new mfem::MixedCrossCurlGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossCurlGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossCurlGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossCurlGradIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossCurlGradIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossCurlGradIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlGradIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossCurlGradIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossCurlGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlGradIntegrator *arg1 = (mfem::MixedCrossCurlGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossCurlGradIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossCurlGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossCurlGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossCurlGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossCurlGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossGradCurlIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossGradCurlIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossGradCurlIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossGradCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossGradCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossGradCurlIntegrator *)new mfem::MixedCrossGradCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossGradCurlIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossGradCurlIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossGradCurlIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradCurlIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossGradCurlIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradCurlIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradCurlIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradCurlIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossGradCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradCurlIntegrator *arg1 = (mfem::MixedCrossGradCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossGradCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossGradCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossGradCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossGradCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossGradCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedWeakCurlCrossIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedWeakCurlCrossIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedWeakCurlCrossIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedWeakCurlCrossIntegrator *)new mfem::MixedWeakCurlCrossIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakCurlCrossIntegrator *arg1 = (mfem::MixedWeakCurlCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedWeakCurlCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakCurlCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedWeakCurlCrossIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakCurlCrossIntegrator *arg1 = (mfem::MixedWeakCurlCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedWeakCurlCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakCurlCrossIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedWeakCurlCrossIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakCurlCrossIntegrator_GetTestVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakCurlCrossIntegrator *arg1 = (mfem::MixedWeakCurlCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedWeakCurlCrossIntegrator_GetTestVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakCurlCrossIntegrator_GetTestVDim" "', argument " "1"" of type '" "mfem::MixedWeakCurlCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakCurlCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakCurlCrossIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_GetTestVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTestVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedWeakCurlCrossIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedWeakCurlCrossIntegrator *arg1 = (mfem::MixedWeakCurlCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedWeakCurlCrossIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedWeakCurlCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakCurlCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedWeakCurlCrossIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedWeakCurlCrossIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedWeakCurlCrossIntegrator *arg1 = (mfem::MixedWeakCurlCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::MixedWeakCurlCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedWeakCurlCrossIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedWeakCurlCrossIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedWeakCurlCrossIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedWeakCurlCrossIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakCurlCrossIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarWeakCurlCrossIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarWeakCurlCrossIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakCurlCrossIntegrator *)new mfem::MixedScalarWeakCurlCrossIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlCrossIntegrator *arg1 = (mfem::MixedScalarWeakCurlCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarWeakCurlCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCurlCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarWeakCurlCrossIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlCrossIntegrator *arg1 = (mfem::MixedScalarWeakCurlCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarWeakCurlCrossIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCurlCrossIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarWeakCurlCrossIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCurlCrossIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlCrossIntegrator *arg1 = (mfem::MixedScalarWeakCurlCrossIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarWeakCurlCrossIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedScalarWeakCurlCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCurlCrossIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCurlCrossIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakCurlCrossIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCurlCrossIntegrator *arg1 = (mfem::MixedScalarWeakCurlCrossIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakCurlCrossIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakCurlCrossIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCurlCrossIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakCurlCrossIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakCurlCrossIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakCurlCrossIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossGradIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossGradIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossGradIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossGradIntegrator *)new mfem::MixedCrossGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossGradIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossGradIntegrator_CalcTestShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"test_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossGradIntegrator_CalcTestShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossGradIntegrator_CalcTestShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTestShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossGradIntegrator *arg1 = (mfem::MixedCrossGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossGradIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCrossCurlIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedCrossCurlIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedCrossCurlIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCrossCurlIntegrator *)new mfem::MixedCrossCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlIntegrator *arg1 = (mfem::MixedCrossCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedCrossCurlIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedCrossCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedCrossCurlIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlIntegrator *arg1 = (mfem::MixedCrossCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedCrossCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedCrossCurlIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlIntegrator_GetTrialVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlIntegrator *arg1 = (mfem::MixedCrossCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedCrossCurlIntegrator_GetTrialVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlIntegrator_GetTrialVDim" "', argument " "1"" of type '" "mfem::MixedCrossCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_GetTrialVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetTrialVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedCrossCurlIntegrator_CalcTrialShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlIntegrator *arg1 = (mfem::MixedCrossCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedCrossCurlIntegrator_CalcTrialShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "1"" of type '" "mfem::MixedCrossCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCrossCurlIntegrator_CalcTrialShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcTrialShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCrossCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCrossCurlIntegrator *arg1 = (mfem::MixedCrossCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedCrossCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCrossCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCrossCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCrossCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCrossCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarCrossCurlIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarCrossCurlIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarCrossCurlIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarCrossCurlIntegrator *)new mfem::MixedScalarCrossCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossCurlIntegrator *arg1 = (mfem::MixedScalarCrossCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarCrossCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarCrossCurlIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossCurlIntegrator *arg1 = (mfem::MixedScalarCrossCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarCrossCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossCurlIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarCrossCurlIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossCurlIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossCurlIntegrator *arg1 = (mfem::MixedScalarCrossCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarCrossCurlIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedScalarCrossCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossCurlIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarCrossCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossCurlIntegrator *arg1 = (mfem::MixedScalarCrossCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarCrossCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarCrossCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarCrossCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarCrossCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarCrossCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarCrossGradIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarCrossGradIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarCrossGradIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarCrossGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarCrossGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarCrossGradIntegrator *)new mfem::MixedScalarCrossGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossGradIntegrator *arg1 = (mfem::MixedScalarCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarCrossGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarCrossGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossGradIntegrator *arg1 = (mfem::MixedScalarCrossGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarCrossGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarCrossGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossGradIntegrator_GetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossGradIntegrator *arg1 = (mfem::MixedScalarCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedScalarCrossGradIntegrator_GetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossGradIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::MixedScalarCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossGradIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossGradIntegrator_CalcVShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossGradIntegrator *arg1 = (mfem::MixedScalarCrossGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarCrossGradIntegrator_CalcVShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "1"" of type '" "mfem::MixedScalarCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossGradIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcVShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarCrossGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossGradIntegrator *arg1 = (mfem::MixedScalarCrossGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarCrossGradIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarCrossGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarCrossGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarCrossGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarCrossGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarCrossProductIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarCrossProductIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarCrossProductIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarCrossProductIntegrator *)new mfem::MixedScalarCrossProductIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossProductIntegrator *arg1 = (mfem::MixedScalarCrossProductIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarCrossProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossProductIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarCrossProductIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossProductIntegrator *arg1 = (mfem::MixedScalarCrossProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarCrossProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossProductIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarCrossProductIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarCrossProductIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarCrossProductIntegrator *arg1 = (mfem::MixedScalarCrossProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarCrossProductIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarCrossProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarCrossProductIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarCrossProductIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarCrossProductIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarCrossProductIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakCrossProductIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarWeakCrossProductIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarWeakCrossProductIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakCrossProductIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakCrossProductIntegrator *)new mfem::MixedScalarWeakCrossProductIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCrossProductIntegrator *arg1 = (mfem::MixedScalarWeakCrossProductIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarWeakCrossProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCrossProductIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarWeakCrossProductIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCrossProductIntegrator *arg1 = (mfem::MixedScalarWeakCrossProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarWeakCrossProductIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCrossProductIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarWeakCrossProductIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakCrossProductIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCrossProductIntegrator *arg1 = (mfem::MixedScalarWeakCrossProductIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarWeakCrossProductIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedScalarWeakCrossProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCrossProductIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakCrossProductIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakCrossProductIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakCrossProductIntegrator *arg1 = (mfem::MixedScalarWeakCrossProductIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakCrossProductIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakCrossProductIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakCrossProductIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakCrossProductIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakCrossProductIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakCrossProductIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedDirectionalDerivativeIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedDirectionalDerivativeIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedDirectionalDerivativeIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedDirectionalDerivativeIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedDirectionalDerivativeIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedDirectionalDerivativeIntegrator *)new mfem::MixedDirectionalDerivativeIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDirectionalDerivativeIntegrator *arg1 = (mfem::MixedDirectionalDerivativeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedDirectionalDerivativeIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDirectionalDerivativeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedDirectionalDerivativeIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDirectionalDerivativeIntegrator *arg1 = (mfem::MixedDirectionalDerivativeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedDirectionalDerivativeIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDirectionalDerivativeIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedDirectionalDerivativeIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDirectionalDerivativeIntegrator_GetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDirectionalDerivativeIntegrator *arg1 = (mfem::MixedDirectionalDerivativeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedDirectionalDerivativeIntegrator_GetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDirectionalDerivativeIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::MixedDirectionalDerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDirectionalDerivativeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDirectionalDerivativeIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDirectionalDerivativeIntegrator_CalcVShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDirectionalDerivativeIntegrator *arg1 = (mfem::MixedDirectionalDerivativeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedDirectionalDerivativeIntegrator_CalcVShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "1"" of type '" "mfem::MixedDirectionalDerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDirectionalDerivativeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDirectionalDerivativeIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcVShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedDirectionalDerivativeIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDirectionalDerivativeIntegrator *arg1 = (mfem::MixedDirectionalDerivativeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedDirectionalDerivativeIntegrator" "', argument " "1"" of type '" "mfem::MixedDirectionalDerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDirectionalDerivativeIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedDirectionalDerivativeIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedDirectionalDerivativeIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedDirectionalDerivativeIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedGradDivIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedGradDivIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedGradDivIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedGradDivIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedGradDivIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedGradDivIntegrator *)new mfem::MixedGradDivIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedGradDivIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradDivIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedGradDivIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradDivIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradDivIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradDivIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedGradDivIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradDivIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradDivIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedGradDivIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradDivIntegrator_GetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedGradDivIntegrator_GetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradDivIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradDivIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradDivIntegrator_CalcVShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedGradDivIntegrator_CalcVShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcVShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedGradDivIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedGradDivIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedGradDivIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedGradDivIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedGradDivIntegrator *arg1 = (mfem::MixedGradDivIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedGradDivIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedGradDivIntegrator" "', argument " "1"" of type '" "mfem::MixedGradDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedGradDivIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedGradDivIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedGradDivIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedGradDivIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedDivGradIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedDivGradIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedDivGradIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedDivGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedDivGradIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedDivGradIntegrator *)new mfem::MixedDivGradIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedDivGradIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDivGradIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedDivGradIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDivGradIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDivGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDivGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedDivGradIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDivGradIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDivGradIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedDivGradIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDivGradIntegrator_GetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedDivGradIntegrator_GetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDivGradIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDivGradIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDivGradIntegrator_CalcVShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedDivGradIntegrator_CalcVShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcVShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedDivGradIntegrator_CalcShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"scalar_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedDivGradIntegrator_CalcShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedDivGradIntegrator_CalcShape" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      (arg1)->CalcShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedDivGradIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedDivGradIntegrator *arg1 = (mfem::MixedDivGradIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedDivGradIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedDivGradIntegrator" "', argument " "1"" of type '" "mfem::MixedDivGradIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedDivGradIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedDivGradIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedDivGradIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedDivGradIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedScalarWeakDivergenceIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vq",  NULL 
  };
  mfem::MixedScalarWeakDivergenceIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_MixedScalarWeakDivergenceIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedScalarWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedScalarWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedScalarWeakDivergenceIntegrator *)new mfem::MixedScalarWeakDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDivergenceIntegrator *arg1 = (mfem::MixedScalarWeakDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes" "', argument " "1"" of type '" "mfem::MixedScalarWeakDivergenceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  {
    try {
      result = (bool)((mfem::MixedScalarWeakDivergenceIntegrator const *)arg1)->VerifyFiniteElementTypes((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDivergenceIntegrator *arg1 = (mfem::MixedScalarWeakDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage" "', argument " "1"" of type '" "mfem::MixedScalarWeakDivergenceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDivergenceIntegrator * >(argp1);
  {
    try {
      result = (char *)((mfem::MixedScalarWeakDivergenceIntegrator const *)arg1)->FiniteElementTypeFailureMessage();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakDivergenceIntegrator_GetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDivergenceIntegrator *arg1 = (mfem::MixedScalarWeakDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  NULL 
  };
  int result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MixedScalarWeakDivergenceIntegrator_GetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakDivergenceIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::MixedScalarWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakDivergenceIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_GetVDim" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (int)(arg1)->GetVDim((mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MixedScalarWeakDivergenceIntegrator_CalcVShape(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDivergenceIntegrator *arg1 = (mfem::MixedScalarWeakDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vector_fe",  (char *)"Trans",  (char *)"shape",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MixedScalarWeakDivergenceIntegrator_CalcVShape", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "1"" of type '" "mfem::MixedScalarWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedScalarWeakDivergenceIntegrator_CalcVShape" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->CalcVShape((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedScalarWeakDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedScalarWeakDivergenceIntegrator *arg1 = (mfem::MixedScalarWeakDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedScalarWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MixedScalarWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedScalarWeakDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedScalarWeakDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedScalarWeakDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedScalarWeakDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorGradientIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedVectorGradientIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedVectorGradientIntegrator *)new mfem::MixedVectorGradientIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorGradientIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorGradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorGradientIntegrator *)new mfem::MixedVectorGradientIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorGradientIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorGradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorGradientIntegrator *)new mfem::MixedVectorGradientIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorGradientIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorGradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorGradientIntegrator *)new mfem::MixedVectorGradientIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorGradientIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedVectorGradientIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedVectorGradientIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorGradientIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorGradientIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorGradientIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedVectorGradientIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedVectorGradientIntegrator::MixedVectorGradientIntegrator()\n"
    "    mfem::MixedVectorGradientIntegrator::MixedVectorGradientIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedVectorGradientIntegrator::MixedVectorGradientIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedVectorGradientIntegrator::MixedVectorGradientIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorGradientIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorGradientIntegrator *arg1 = (mfem::MixedVectorGradientIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorGradientIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorGradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorGradientIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorGradientIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorGradientIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorGradientIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedVectorCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedVectorCurlIntegrator *)new mfem::MixedVectorCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorCurlIntegrator *)new mfem::MixedVectorCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorCurlIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorCurlIntegrator *)new mfem::MixedVectorCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorCurlIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorCurlIntegrator *)new mfem::MixedVectorCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedVectorCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedVectorCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorCurlIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorCurlIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedVectorCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedVectorCurlIntegrator::MixedVectorCurlIntegrator()\n"
    "    mfem::MixedVectorCurlIntegrator::MixedVectorCurlIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedVectorCurlIntegrator::MixedVectorCurlIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedVectorCurlIntegrator::MixedVectorCurlIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorCurlIntegrator *arg1 = (mfem::MixedVectorCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorWeakCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedVectorWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedVectorWeakCurlIntegrator *)new mfem::MixedVectorWeakCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakCurlIntegrator *)new mfem::MixedVectorWeakCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakCurlIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakCurlIntegrator *)new mfem::MixedVectorWeakCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakCurlIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakCurlIntegrator *)new mfem::MixedVectorWeakCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedVectorWeakCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedVectorWeakCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakCurlIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakCurlIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedVectorWeakCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedVectorWeakCurlIntegrator::MixedVectorWeakCurlIntegrator()\n"
    "    mfem::MixedVectorWeakCurlIntegrator::MixedVectorWeakCurlIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedVectorWeakCurlIntegrator::MixedVectorWeakCurlIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedVectorWeakCurlIntegrator::MixedVectorWeakCurlIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorWeakCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorWeakCurlIntegrator *arg1 = (mfem::MixedVectorWeakCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorWeakCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorWeakCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorWeakCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorWeakCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorWeakCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorWeakCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedVectorWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedVectorWeakDivergenceIntegrator *)new mfem::MixedVectorWeakDivergenceIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakDivergenceIntegrator *)new mfem::MixedVectorWeakDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakDivergenceIntegrator *)new mfem::MixedVectorWeakDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedVectorWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::MixedVectorWeakDivergenceIntegrator *)new mfem::MixedVectorWeakDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedVectorWeakDivergenceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedVectorWeakDivergenceIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedVectorWeakDivergenceIntegrator__SWIG_3(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedVectorWeakDivergenceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedVectorWeakDivergenceIntegrator::MixedVectorWeakDivergenceIntegrator()\n"
    "    mfem::MixedVectorWeakDivergenceIntegrator::MixedVectorWeakDivergenceIntegrator(mfem::Coefficient &)\n"
    "    mfem::MixedVectorWeakDivergenceIntegrator::MixedVectorWeakDivergenceIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::MixedVectorWeakDivergenceIntegrator::MixedVectorWeakDivergenceIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MixedVectorWeakDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedVectorWeakDivergenceIntegrator *arg1 = (mfem::MixedVectorWeakDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedVectorWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::MixedVectorWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedVectorWeakDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedVectorWeakDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedVectorWeakDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedVectorWeakDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GradientIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::GradientIntegrator *)new mfem::GradientIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__GradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GradientIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = (mfem::Coefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::GradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::GradientIntegrator *)new mfem::GradientIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__GradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GradientIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::GradientIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GradientIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::GradientIntegrator *)new mfem::GradientIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__GradientIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_GradientIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_GradientIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_GradientIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_GradientIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_GradientIntegrator__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_GradientIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::GradientIntegrator::GradientIntegrator()\n"
    "    mfem::GradientIntegrator::GradientIntegrator(mfem::Coefficient *)\n"
    "    mfem::GradientIntegrator::GradientIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:GradientIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::GradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::GradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::GradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "GradientIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__GradientIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GradientIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__GradientIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_GradientIntegrator_AssemblePA__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'GradientIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::GradientIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::GradientIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:GradientIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::GradientIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::GradientIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:GradientIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::GradientIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::GradientIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientIntegrator_GetRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  NULL 
  };
  mfem::IntegrationRule *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:GradientIntegrator_GetRule", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::GradientIntegrator::GetRule((mfem::FiniteElement const &)*arg1,(mfem::FiniteElement const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GradientIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::GradientIntegrator *arg1 = (mfem::GradientIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GradientIntegrator" "', argument " "1"" of type '" "mfem::GradientIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GradientIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__GradientIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GradientIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DiffusionIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::IntegrationRule *arg1 = (mfem::IntegrationRule *) nullptr ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::DiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 1)) SWIG_fail;
  if (swig_obj[0]) {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg1 = reinterpret_cast< mfem::IntegrationRule * >(argp1);
  }
  {
    try {
      result = (mfem::DiffusionIntegrator *)new mfem::DiffusionIntegrator((mfem::IntegrationRule const *)arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiffusionIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) nullptr ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::DiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiffusionIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::DiffusionIntegrator *)new mfem::DiffusionIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiffusionIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) nullptr ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::DiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiffusionIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::DiffusionIntegrator *)new mfem::DiffusionIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiffusionIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) nullptr ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::DiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DiffusionIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::DiffusionIntegrator *)new mfem::DiffusionIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DiffusionIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DiffusionIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 1)) {
    int _v = 0;
    if (argc <= 0) {
      return _wrap_new_DiffusionIntegrator__SWIG_0(self, argc, argv);
    }
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_DiffusionIntegrator__SWIG_0(self, argc, argv);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DiffusionIntegrator__SWIG_1(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DiffusionIntegrator__SWIG_1(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DiffusionIntegrator__SWIG_2(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DiffusionIntegrator__SWIG_2(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DiffusionIntegrator__SWIG_3(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DiffusionIntegrator__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DiffusionIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::IntegrationRule const *)\n"
    "    mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::VectorCoefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::MatrixCoefficient &,mfem::IntegrationRule const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:DiffusionIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DiffusionIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleElementVector(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Tr",  (char *)"elfun",  (char *)"elvect",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DiffusionIntegrator_AssembleElementVector", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  {
    try {
      (arg1)->AssembleElementVector((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_ComputeElementFlux(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::FiniteElement *arg5 = 0 ;
  mfem::Vector *arg6 = 0 ;
  bool arg7 = (bool) true ;
  mfem::IntegrationRule *arg8 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"u",  (char *)"fluxelem",  (char *)"flux",  (char *)"with_coef",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOO|OO:DiffusionIntegrator_ComputeElementFlux", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5, &obj6, &obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FiniteElement * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  arg6 = reinterpret_cast< mfem::Vector * >(argp6);
  if (obj6) {
    ecode7 = SWIG_AsVal_bool(obj6, &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
  }
  if (obj7) {
    res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "DiffusionIntegrator_ComputeElementFlux" "', argument " "8"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg8 = reinterpret_cast< mfem::IntegrationRule * >(argp8);
  }
  {
    try {
      (arg1)->ComputeElementFlux((mfem::FiniteElement const &)*arg2,*arg3,*arg4,(mfem::FiniteElement const &)*arg5,*arg6,arg7,(mfem::IntegrationRule const *)arg8);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_ComputeFluxEnergy(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = (mfem::Vector *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fluxelem",  (char *)"Trans",  (char *)"flux",  (char *)"d_energy",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO|O:DiffusionIntegrator_ComputeFluxEnergy", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mfem__Vector, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DiffusionIntegrator_ComputeFluxEnergy" "', argument " "5"" of type '" "mfem::Vector *""'"); 
    }
    arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  }
  {
    try {
      result = (double)(arg1)->ComputeFluxEnergy((mfem::FiniteElement const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DiffusionIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DiffusionIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DiffusionIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DiffusionIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DiffusionIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DiffusionIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::DiffusionIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:DiffusionIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DiffusionIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DiffusionIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DiffusionIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DiffusionIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::DiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::DiffusionIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DiffusionIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::DiffusionIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DiffusionIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::DiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DiffusionIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::DiffusionIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_GetRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"trial_fe",  (char *)"test_fe",  NULL 
  };
  mfem::IntegrationRule *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DiffusionIntegrator_GetRule", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DiffusionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DiffusionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::DiffusionIntegrator::GetRule((mfem::FiniteElement const &)*arg1,(mfem::FiniteElement const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_SupportsCeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_SupportsCeed" "', argument " "1"" of type '" "mfem::DiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  {
    try {
      result = (bool)((mfem::DiffusionIntegrator const *)arg1)->SupportsCeed();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DiffusionIntegrator_GetCoefficient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  mfem::Coefficient *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DiffusionIntegrator_GetCoefficient" "', argument " "1"" of type '" "mfem::DiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  {
    try {
      result = (mfem::Coefficient *)((mfem::DiffusionIntegrator const *)arg1)->GetCoefficient();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DiffusionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DiffusionIntegrator *arg1 = (mfem::DiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DiffusionIntegrator" "', argument " "1"" of type '" "mfem::DiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiffusionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DiffusionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DiffusionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DiffusionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MassIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::IntegrationRule *arg1 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MassIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 1)) SWIG_fail;
  if (swig_obj[0]) {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MassIntegrator" "', argument " "1"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg1 = reinterpret_cast< mfem::IntegrationRule * >(argp1);
  }
  {
    try {
      result = (mfem::MassIntegrator *)new mfem::MassIntegrator((mfem::IntegrationRule const *)arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MassIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::MassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MassIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::MassIntegrator *)new mfem::MassIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MassIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MassIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 1)) {
    int _v = 0;
    if (argc <= 0) {
      return _wrap_new_MassIntegrator__SWIG_0(self, argc, argv);
    }
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MassIntegrator__SWIG_0(self, argc, argv);
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_MassIntegrator__SWIG_1(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MassIntegrator__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MassIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MassIntegrator::MassIntegrator(mfem::IntegrationRule const *)\n"
    "    mfem::MassIntegrator::MassIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MassIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:MassIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MassIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MassIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_MassIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MassIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MassIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MassIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::MassIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:MassIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MassIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MassIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:MassIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MassIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::MassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::MassIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MassIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::MassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::MassIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MassIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::MassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::MassIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_GetRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  NULL 
  };
  mfem::IntegrationRule *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:MassIntegrator_GetRule", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MassIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MassIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MassIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::MassIntegrator::GetRule((mfem::FiniteElement const &)*arg1,(mfem::FiniteElement const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_SupportsCeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_SupportsCeed" "', argument " "1"" of type '" "mfem::MassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  {
    try {
      result = (bool)((mfem::MassIntegrator const *)arg1)->SupportsCeed();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MassIntegrator_GetCoefficient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  mfem::Coefficient *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MassIntegrator_GetCoefficient" "', argument " "1"" of type '" "mfem::MassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  {
    try {
      result = (mfem::Coefficient *)((mfem::MassIntegrator const *)arg1)->GetCoefficient();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MassIntegrator *arg1 = (mfem::MassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MassIntegrator" "', argument " "1"" of type '" "mfem::MassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BoundaryMassIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"q",  NULL 
  };
  mfem::BoundaryMassIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_BoundaryMassIntegrator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BoundaryMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BoundaryMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::BoundaryMassIntegrator *)new mfem::BoundaryMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__BoundaryMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BoundaryMassIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BoundaryMassIntegrator *arg1 = (mfem::BoundaryMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BoundaryMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::BoundaryMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BoundaryMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BoundaryMassIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::BoundaryMassIntegrator *arg1 = (mfem::BoundaryMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BoundaryMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::BoundaryMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BoundaryMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BoundaryMassIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BoundaryMassIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BoundaryMassIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BoundaryMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_BoundaryMassIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__BoundaryMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_BoundaryMassIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BoundaryMassIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::BoundaryMassIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::BoundaryMassIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BoundaryMassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::BoundaryMassIntegrator *arg1 = (mfem::BoundaryMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__BoundaryMassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BoundaryMassIntegrator" "', argument " "1"" of type '" "mfem::BoundaryMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::BoundaryMassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BoundaryMassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__BoundaryMassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BoundaryMassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ConvectionIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"q",  (char *)"a",  NULL 
  };
  mfem::ConvectionIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_ConvectionIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ConvectionIntegrator" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  {
    try {
      result = (mfem::ConvectionIntegrator *)new mfem::ConvectionIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ConvectionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  (char *)"arg4",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:ConvectionIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:ConvectionIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ConvectionIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__ConvectionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ConvectionIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__ConvectionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ConvectionIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ConvectionIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::ConvectionIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::ConvectionIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssembleEA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"emat",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:ConvectionIntegrator_AssembleEA", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvectionIntegrator_AssembleEA" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEA((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:ConvectionIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:ConvectionIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:ConvectionIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::ConvectionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::ConvectionIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:ConvectionIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::ConvectionIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:ConvectionIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::ConvectionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::ConvectionIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_GetRule__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::ElementTransformation *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::IntegrationRule *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg2 = reinterpret_cast< mfem::ElementTransformation * >(argp2);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::ConvectionIntegrator::GetRule((mfem::FiniteElement const &)*arg1,*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_GetRule__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  mfem::IntegrationRule *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvectionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ConvectionIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConvectionIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::ConvectionIntegrator::GetRule((mfem::FiniteElement const &)*arg1,(mfem::FiniteElement const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_GetRule(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ConvectionIntegrator_GetRule", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__ElementTransformation, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ConvectionIntegrator_GetRule__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_mfem__ElementTransformation, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ConvectionIntegrator_GetRule__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ConvectionIntegrator_GetRule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::ConvectionIntegrator::GetRule(mfem::FiniteElement const &,mfem::ElementTransformation &)\n"
    "    mfem::ConvectionIntegrator::GetRule(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::ElementTransformation &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ConvectionIntegrator_SupportsCeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvectionIntegrator_SupportsCeed" "', argument " "1"" of type '" "mfem::ConvectionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  {
    try {
      result = (bool)((mfem::ConvectionIntegrator const *)arg1)->SupportsCeed();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ConvectionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ConvectionIntegrator *arg1 = (mfem::ConvectionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ConvectionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ConvectionIntegrator" "', argument " "1"" of type '" "mfem::ConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConvectionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ConvectionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ConvectionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ConvectionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ConservativeConvectionIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"q",  (char *)"a",  NULL 
  };
  mfem::ConservativeConvectionIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_ConservativeConvectionIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ConservativeConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ConservativeConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ConservativeConvectionIntegrator" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  {
    try {
      result = (mfem::ConservativeConvectionIntegrator *)new mfem::ConservativeConvectionIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ConservativeConvectionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ConservativeConvectionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ConservativeConvectionIntegrator *arg1 = (mfem::ConservativeConvectionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ConservativeConvectionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ConservativeConvectionIntegrator" "', argument " "1"" of type '" "mfem::ConservativeConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ConservativeConvectionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ConservativeConvectionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ConservativeConvectionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ConservativeConvectionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GroupConvectionIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"q",  (char *)"a",  NULL 
  };
  mfem::GroupConvectionIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O|O:new_GroupConvectionIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_GroupConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_GroupConvectionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_double(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_GroupConvectionIntegrator" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  {
    try {
      result = (mfem::GroupConvectionIntegrator *)new mfem::GroupConvectionIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__GroupConvectionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroupConvectionIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GroupConvectionIntegrator *arg1 = (mfem::GroupConvectionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  (char *)"arg4",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:GroupConvectionIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GroupConvectionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::GroupConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GroupConvectionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GroupConvectionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GroupConvectionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::GroupConvectionIntegrator *arg1 = (mfem::GroupConvectionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GroupConvectionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GroupConvectionIntegrator" "', argument " "1"" of type '" "mfem::GroupConvectionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GroupConvectionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GroupConvectionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__GroupConvectionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GroupConvectionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorMassIntegrator *)new mfem::VectorMassIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  if (swig_obj[1]) {
    {
      if ((PyArray_PyIntAsInt(swig_obj[1]) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(swig_obj[1]);
    }
  }
  {
    try {
      result = (mfem::VectorMassIntegrator *)new mfem::VectorMassIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::VectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VectorMassIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      result = (mfem::VectorMassIntegrator *)new mfem::VectorMassIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  if (swig_obj[1]) {
    {
      if ((PyArray_PyIntAsInt(swig_obj[1]) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(swig_obj[1]);
    }
  }
  {
    try {
      result = (mfem::VectorMassIntegrator *)new mfem::VectorMassIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  if (swig_obj[1]) {
    {
      if ((PyArray_PyIntAsInt(swig_obj[1]) == -1) && PyErr_Occurred()) {
        SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
      };  
      arg2 = PyArray_PyIntAsInt(swig_obj[1]);
    }
  }
  {
    try {
      result = (mfem::VectorMassIntegrator *)new mfem::VectorMassIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorMassIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorMassIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorMassIntegrator__SWIG_0(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_VectorMassIntegrator__SWIG_1(self, argc, argv);
      }
      {
        if ((PyArray_PyIntAsInt(argv[1]) == -1) && PyErr_Occurred()) {
          PyErr_Clear();
          _v = 0;
        } else {
          _v = 1;    
        }
      }
      if (_v) {
        return _wrap_new_VectorMassIntegrator__SWIG_1(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_VectorMassIntegrator__SWIG_3(self, argc, argv);
      }
      {
        if ((PyArray_PyIntAsInt(argv[1]) == -1) && PyErr_Occurred()) {
          PyErr_Clear();
          _v = 0;
        } else {
          _v = 1;    
        }
      }
      if (_v) {
        return _wrap_new_VectorMassIntegrator__SWIG_3(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_VectorMassIntegrator__SWIG_4(self, argc, argv);
      }
      {
        if ((PyArray_PyIntAsInt(argv[1]) == -1) && PyErr_Occurred()) {
          PyErr_Clear();
          _v = 0;
        } else {
          _v = 1;    
        }
      }
      if (_v) {
        return _wrap_new_VectorMassIntegrator__SWIG_4(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VectorMassIntegrator__SWIG_2(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorMassIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorMassIntegrator::VectorMassIntegrator()\n"
    "    mfem::VectorMassIntegrator::VectorMassIntegrator(mfem::Coefficient &,int)\n"
    "    mfem::VectorMassIntegrator::VectorMassIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::VectorMassIntegrator::VectorMassIntegrator(mfem::VectorCoefficient &,int)\n"
    "    mfem::VectorMassIntegrator::VectorMassIntegrator(mfem::MatrixCoefficient &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_GetVDim(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_GetVDim" "', argument " "1"" of type '" "mfem::VectorMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  {
    try {
      result = (int)((mfem::VectorMassIntegrator const *)arg1)->GetVDim();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_SetVDim(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"vdim_",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorMassIntegrator_SetVDim", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_SetVDim" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  {
    if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
      SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
    };  
    arg2 = PyArray_PyIntAsInt(obj1);
  }
  {
    try {
      (arg1)->SetVDim(arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorMassIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorMassIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorMassIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorMassIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VectorMassIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorMassIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorMassIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::VectorMassIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorMassIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorMassIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorMassIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorMassIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::VectorMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorMassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorMassIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorMassIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::VectorMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorMassIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorMassIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorMassIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorMassIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorMassIntegrator_SupportsCeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorMassIntegrator_SupportsCeed" "', argument " "1"" of type '" "mfem::VectorMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  {
    try {
      result = (bool)((mfem::VectorMassIntegrator const *)arg1)->SupportsCeed();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorMassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorMassIntegrator *arg1 = (mfem::VectorMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorMassIntegrator" "', argument " "1"" of type '" "mfem::VectorMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorMassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorMassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorMassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorMassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorFEDivergenceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorFEDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorFEDivergenceIntegrator *)new mfem::VectorFEDivergenceIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEDivergenceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFEDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEDivergenceIntegrator *)new mfem::VectorFEDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEDivergenceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorFEDivergenceIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorFEDivergenceIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEDivergenceIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorFEDivergenceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorFEDivergenceIntegrator::VectorFEDivergenceIntegrator()\n"
    "    mfem::VectorFEDivergenceIntegrator::VectorFEDivergenceIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEDivergenceIntegrator *arg1 = (mfem::VectorFEDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorFEDivergenceIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorFEDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEDivergenceIntegrator *arg1 = (mfem::VectorFEDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorFEDivergenceIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorFEDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEDivergenceIntegrator *arg1 = (mfem::VectorFEDivergenceIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"D",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt" "', argument " "1"" of type '" "mfem::VectorFEDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      (arg1)->AssembleDiagonalPA_ADAt((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorFEDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorFEDivergenceIntegrator *arg1 = (mfem::VectorFEDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorFEDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorFEDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorFEDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorFEDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorFEDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorFEWeakDivergenceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorFEWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorFEWeakDivergenceIntegrator *)new mfem::VectorFEWeakDivergenceIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEWeakDivergenceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEWeakDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFEWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEWeakDivergenceIntegrator *)new mfem::VectorFEWeakDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEWeakDivergenceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorFEWeakDivergenceIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorFEWeakDivergenceIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEWeakDivergenceIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorFEWeakDivergenceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorFEWeakDivergenceIntegrator::VectorFEWeakDivergenceIntegrator()\n"
    "    mfem::VectorFEWeakDivergenceIntegrator::VectorFEWeakDivergenceIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEWeakDivergenceIntegrator *arg1 = (mfem::VectorFEWeakDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorFEWeakDivergenceIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorFEWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEWeakDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEWeakDivergenceIntegrator *arg1 = (mfem::VectorFEWeakDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorFEWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEWeakDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorFEWeakDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorFEWeakDivergenceIntegrator *arg1 = (mfem::VectorFEWeakDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorFEWeakDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorFEWeakDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEWeakDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorFEWeakDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorFEWeakDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorFEWeakDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorFECurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorFECurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorFECurlIntegrator *)new mfem::VectorFECurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFECurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFECurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFECurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFECurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFECurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFECurlIntegrator *)new mfem::VectorFECurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFECurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFECurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorFECurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorFECurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFECurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorFECurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorFECurlIntegrator::VectorFECurlIntegrator()\n"
    "    mfem::VectorFECurlIntegrator::VectorFECurlIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorFECurlIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFECurlIntegrator *arg1 = (mfem::VectorFECurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorFECurlIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFECurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorFECurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFECurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFECurlIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFECurlIntegrator *arg1 = (mfem::VectorFECurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorFECurlIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFECurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorFECurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFECurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFECurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorFECurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorFECurlIntegrator *arg1 = (mfem::VectorFECurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFECurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorFECurlIntegrator" "', argument " "1"" of type '" "mfem::VectorFECurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFECurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorFECurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorFECurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorFECurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DerivativeIntegrator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"q",  (char *)"i",  NULL 
  };
  mfem::DerivativeIntegrator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:new_DerivativeIntegrator", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DerivativeIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
      SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
    };  
    arg2 = PyArray_PyIntAsInt(obj1);
  }
  {
    try {
      result = (mfem::DerivativeIntegrator *)new mfem::DerivativeIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DerivativeIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DerivativeIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DerivativeIntegrator *arg1 = (mfem::DerivativeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:DerivativeIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::DerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DerivativeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DerivativeIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DerivativeIntegrator *arg1 = (mfem::DerivativeIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DerivativeIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DerivativeIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::DerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DerivativeIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DerivativeIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DerivativeIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DerivativeIntegrator *arg1 = (mfem::DerivativeIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DerivativeIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DerivativeIntegrator" "', argument " "1"" of type '" "mfem::DerivativeIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DerivativeIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DerivativeIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DerivativeIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DerivativeIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_CurlCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::CurlCurlIntegrator *)new mfem::CurlCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurlCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::CurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlCurlIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::CurlCurlIntegrator *)new mfem::CurlCurlIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurlCurlIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::CurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlCurlIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::CurlCurlIntegrator *)new mfem::CurlCurlIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurlCurlIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::CurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CurlCurlIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::CurlCurlIntegrator *)new mfem::CurlCurlIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurlCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_CurlCurlIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_CurlCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_CurlCurlIntegrator__SWIG_1(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CurlCurlIntegrator__SWIG_1(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_CurlCurlIntegrator__SWIG_2(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CurlCurlIntegrator__SWIG_2(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_CurlCurlIntegrator__SWIG_3(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CurlCurlIntegrator__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_CurlCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::CurlCurlIntegrator::CurlCurlIntegrator()\n"
    "    mfem::CurlCurlIntegrator::CurlCurlIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::CurlCurlIntegrator::CurlCurlIntegrator(mfem::DiagonalMatrixCoefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::CurlCurlIntegrator::CurlCurlIntegrator(mfem::MatrixCoefficient &,mfem::IntegrationRule const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:CurlCurlIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:CurlCurlIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_ComputeElementFlux(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::FiniteElement *arg5 = 0 ;
  mfem::Vector *arg6 = 0 ;
  bool arg7 ;
  mfem::IntegrationRule *arg8 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"u",  (char *)"fluxelem",  (char *)"flux",  (char *)"with_coef",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOOO|O:CurlCurlIntegrator_ComputeElementFlux", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5, &obj6, &obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FiniteElement * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  arg6 = reinterpret_cast< mfem::Vector * >(argp6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  if (obj7) {
    res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "CurlCurlIntegrator_ComputeElementFlux" "', argument " "8"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg8 = reinterpret_cast< mfem::IntegrationRule * >(argp8);
  }
  {
    try {
      (arg1)->ComputeElementFlux((mfem::FiniteElement const &)*arg2,*arg3,*arg4,(mfem::FiniteElement const &)*arg5,*arg6,arg7,(mfem::IntegrationRule const *)arg8);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_ComputeFluxEnergy(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = (mfem::Vector *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fluxelem",  (char *)"Trans",  (char *)"flux",  (char *)"d_energy",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO|O:CurlCurlIntegrator_ComputeFluxEnergy", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mfem__Vector, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CurlCurlIntegrator_ComputeFluxEnergy" "', argument " "5"" of type '" "mfem::Vector *""'"); 
    }
    arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  }
  {
    try {
      result = (double)(arg1)->ComputeFluxEnergy((mfem::FiniteElement const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "CurlCurlIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__CurlCurlIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_CurlCurlIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__CurlCurlIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CurlCurlIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'CurlCurlIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::CurlCurlIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::CurlCurlIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:CurlCurlIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlCurlIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::CurlCurlIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:CurlCurlIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlCurlIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlCurlIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CurlCurlIntegrator_GetCoefficient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  mfem::Coefficient *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlCurlIntegrator_GetCoefficient" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  {
    try {
      result = (mfem::Coefficient *)((mfem::CurlCurlIntegrator const *)arg1)->GetCoefficient();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CurlCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::CurlCurlIntegrator *arg1 = (mfem::CurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CurlCurlIntegrator" "', argument " "1"" of type '" "mfem::CurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CurlCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__CurlCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CurlCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorCurlCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorCurlCurlIntegrator *)new mfem::VectorCurlCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorCurlCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorCurlCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorCurlCurlIntegrator *)new mfem::VectorCurlCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorCurlCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorCurlCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorCurlCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorCurlCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorCurlCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorCurlCurlIntegrator::VectorCurlCurlIntegrator()\n"
    "    mfem::VectorCurlCurlIntegrator::VectorCurlCurlIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorCurlCurlIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCurlCurlIntegrator *arg1 = (mfem::VectorCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorCurlCurlIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorCurlCurlIntegrator_GetElementEnergy(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCurlCurlIntegrator *arg1 = (mfem::VectorCurlCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Tr",  (char *)"elfun",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorCurlCurlIntegrator_GetElementEnergy", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "1"" of type '" "mfem::VectorCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCurlCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCurlCurlIntegrator_GetElementEnergy" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  {
    try {
      result = (double)(arg1)->GetElementEnergy((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorCurlCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorCurlCurlIntegrator *arg1 = (mfem::VectorCurlCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorCurlCurlIntegrator" "', argument " "1"" of type '" "mfem::VectorCurlCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCurlCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorCurlCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorCurlCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorCurlCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MixedCurlIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::MixedCurlIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::MixedCurlIntegrator *)new mfem::MixedCurlIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = (mfem::Coefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCurlIntegrator *)new mfem::MixedCurlIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::MixedCurlIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MixedCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MixedCurlIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::MixedCurlIntegrator *)new mfem::MixedCurlIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__MixedCurlIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MixedCurlIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MixedCurlIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_MixedCurlIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedCurlIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MixedCurlIntegrator__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MixedCurlIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::MixedCurlIntegrator::MixedCurlIntegrator()\n"
    "    mfem::MixedCurlIntegrator::MixedCurlIntegrator(mfem::Coefficient *)\n"
    "    mfem::MixedCurlIntegrator::MixedCurlIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MixedCurlIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::MixedCurlIntegrator *arg1 = (mfem::MixedCurlIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:MixedCurlIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__MixedCurlIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::MixedCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MixedCurlIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MixedCurlIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::MixedCurlIntegrator *arg1 = (mfem::MixedCurlIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MixedCurlIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MixedCurlIntegrator" "', argument " "1"" of type '" "mfem::MixedCurlIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MixedCurlIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MixedCurlIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__MixedCurlIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MixedCurlIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = (mfem::Coefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = (mfem::DiagonalMatrixCoefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorCoefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DiagonalMatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::DiagonalMatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiagonalMatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = (mfem::MatrixCoefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__MatrixCoefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorFEMassIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorFEMassIntegrator *)new mfem::VectorFEMassIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorFEMassIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorFEMassIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorFEMassIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_3(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_5(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorFEMassIntegrator__SWIG_6(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorFEMassIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator()\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::Coefficient *)\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::Coefficient &)\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::DiagonalMatrixCoefficient *)\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::DiagonalMatrixCoefficient &)\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::MatrixCoefficient *)\n"
    "    mfem::VectorFEMassIntegrator::VectorFEMassIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorFEMassIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorFEMassIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssemblePA__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorFEMassIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorFEMassIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VectorFEMassIntegrator_AssemblePA__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorFEMassIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorFEMassIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::VectorFEMassIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorFEMassIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEMassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorFEMassIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorFEMassIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorFEMassIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorFEMassIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorFEMassIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorFEMassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorFEMassIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorFEMassIntegrator_GetCoefficient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  mfem::Coefficient *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorFEMassIntegrator_GetCoefficient" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  {
    try {
      result = (mfem::Coefficient *)((mfem::VectorFEMassIntegrator const *)arg1)->GetCoefficient();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorFEMassIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorFEMassIntegrator *arg1 = (mfem::VectorFEMassIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorFEMassIntegrator" "', argument " "1"" of type '" "mfem::VectorFEMassIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorFEMassIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorFEMassIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorFEMassIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorFEMassIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorDivergenceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorDivergenceIntegrator *)new mfem::VectorDivergenceIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDivergenceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = (mfem::Coefficient *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient *""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorDivergenceIntegrator *)new mfem::VectorDivergenceIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDivergenceIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDivergenceIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorDivergenceIntegrator *)new mfem::VectorDivergenceIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDivergenceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDivergenceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorDivergenceIntegrator", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorDivergenceIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorDivergenceIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorDivergenceIntegrator__SWIG_2(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorDivergenceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorDivergenceIntegrator::VectorDivergenceIntegrator()\n"
    "    mfem::VectorDivergenceIntegrator::VectorDivergenceIntegrator(mfem::Coefficient *)\n"
    "    mfem::VectorDivergenceIntegrator::VectorDivergenceIntegrator(mfem::Coefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorDivergenceIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorDivergenceIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorDivergenceIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VectorDivergenceIntegrator_AssemblePA__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorDivergenceIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorDivergenceIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::VectorDivergenceIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorDivergenceIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDivergenceIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorDivergenceIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorDivergenceIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDivergenceIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorDivergenceIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDivergenceIntegrator_GetRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::FiniteElement *arg1 = 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  NULL 
  };
  mfem::IntegrationRule *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorDivergenceIntegrator_GetRule", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "1"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElement * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDivergenceIntegrator_GetRule" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::VectorDivergenceIntegrator::GetRule((mfem::FiniteElement const &)*arg1,(mfem::FiniteElement const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorDivergenceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorDivergenceIntegrator *arg1 = (mfem::VectorDivergenceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDivergenceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorDivergenceIntegrator" "', argument " "1"" of type '" "mfem::VectorDivergenceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDivergenceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorDivergenceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorDivergenceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorDivergenceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DivDivIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::DivDivIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::DivDivIntegrator *)new mfem::DivDivIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DivDivIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DivDivIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::DivDivIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DivDivIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DivDivIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DivDivIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  }
  {
    try {
      result = (mfem::DivDivIntegrator *)new mfem::DivDivIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DivDivIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DivDivIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DivDivIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_DivDivIntegrator__SWIG_0(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DivDivIntegrator__SWIG_1(self, argc, argv);
      }
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_DivDivIntegrator__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DivDivIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DivDivIntegrator::DivDivIntegrator()\n"
    "    mfem::DivDivIntegrator::DivDivIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DivDivIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DivDivIntegrator *arg1 = (mfem::DivDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:DivDivIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DivDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::DivDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DivDivIntegrator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DivDivIntegrator *arg1 = (mfem::DivDivIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"trial_fe",  (char *)"test_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DivDivIntegrator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DivDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::DivDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivDivIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivDivIntegrator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DivDivIntegrator_GetCoefficient(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DivDivIntegrator *arg1 = (mfem::DivDivIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  mfem::Coefficient *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DivDivIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DivDivIntegrator_GetCoefficient" "', argument " "1"" of type '" "mfem::DivDivIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivDivIntegrator * >(argp1);
  {
    try {
      result = (mfem::Coefficient *)((mfem::DivDivIntegrator const *)arg1)->GetCoefficient();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__Coefficient, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DivDivIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DivDivIntegrator *arg1 = (mfem::DivDivIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DivDivIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DivDivIntegrator" "', argument " "1"" of type '" "mfem::DivDivIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivDivIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DivDivIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DivDivIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DivDivIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    if ((PyArray_PyIntAsInt(swig_obj[0]) == -1) && PyErr_Occurred()) {
      SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
    };  
    arg1 = PyArray_PyIntAsInt(swig_obj[0]);
  }
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_3(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::IntegrationRule *arg2 = (mfem::IntegrationRule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VectorDiffusionIntegrator" "', argument " "2"" of type '" "mfem::IntegrationRule const *""'"); 
  }
  arg2 = reinterpret_cast< mfem::IntegrationRule * >(argp2);
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(*arg1,(mfem::IntegrationRule const *)arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_4(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    if ((PyArray_PyIntAsInt(swig_obj[1]) == -1) && PyErr_Occurred()) {
      SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
    };  
    arg2 = PyArray_PyIntAsInt(swig_obj[1]);
  }
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_5(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator__SWIG_6(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  mfem::VectorDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorDiffusionIntegrator *)new mfem::VectorDiffusionIntegrator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VectorDiffusionIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_VectorDiffusionIntegrator", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_VectorDiffusionIntegrator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorDiffusionIntegrator__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorDiffusionIntegrator__SWIG_5(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_VectorDiffusionIntegrator__SWIG_6(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v = 0;
    {
      if ((PyArray_PyIntAsInt(argv[0]) == -1) && PyErr_Occurred()) {
        PyErr_Clear();
        _v = 0;
      } else {
        _v = 1;    
      }
    }
    if (_v) {
      return _wrap_new_VectorDiffusionIntegrator__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__IntegrationRule, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_VectorDiffusionIntegrator__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if ((PyArray_PyIntAsInt(argv[1]) == -1) && PyErr_Occurred()) {
          PyErr_Clear();
          _v = 0;
        } else {
          _v = 1;    
        }
      }
      if (_v) {
        return _wrap_new_VectorDiffusionIntegrator__SWIG_4(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_VectorDiffusionIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator()\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(int)\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(mfem::Coefficient &)\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(mfem::Coefficient &,mfem::IntegrationRule const *)\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(mfem::Coefficient &,int)\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(mfem::VectorCoefficient &)\n"
    "    mfem::VectorDiffusionIntegrator::VectorDiffusionIntegrator(mfem::MatrixCoefficient &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:VectorDiffusionIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssembleElementVector(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Tr",  (char *)"elfun",  (char *)"elvect",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorDiffusionIntegrator_AssembleElementVector", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "4"" of type '" "mfem::Vector const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleElementVector" "', argument " "5"" of type '" "mfem::Vector &""'"); 
  }
  arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  {
    try {
      (arg1)->AssembleElementVector((mfem::FiniteElement const &)*arg2,*arg3,(mfem::Vector const &)*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VectorDiffusionIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_VectorDiffusionIntegrator_AssemblePA__SWIG_1(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_VectorDiffusionIntegrator_AssemblePA__SWIG_0_0(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VectorDiffusionIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::VectorDiffusionIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n"
    "    mfem::VectorDiffusionIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssembleMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorDiffusionIntegrator_AssembleMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssembleMF" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleMF" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssembleMF((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssembleDiagonalPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorDiffusionIntegrator_AssembleDiagonalPA", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssembleDiagonalPA" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleDiagonalPA" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalPA(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AssembleDiagonalMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"diag",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:VectorDiffusionIntegrator_AssembleDiagonalMF", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AssembleDiagonalMF" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AssembleDiagonalMF" "', argument " "2"" of type '" "mfem::Vector &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  {
    try {
      (arg1)->AssembleDiagonalMF(*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorDiffusionIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDiffusionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorDiffusionIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_AddMultMF(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:VectorDiffusionIntegrator_AddMultMF", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_AddMultMF" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorDiffusionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AddMultMF" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorDiffusionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorDiffusionIntegrator_AddMultMF" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::VectorDiffusionIntegrator const *)arg1)->AddMultMF((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorDiffusionIntegrator_SupportsCeed(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorDiffusionIntegrator_SupportsCeed" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  {
    try {
      result = (bool)((mfem::VectorDiffusionIntegrator const *)arg1)->SupportsCeed();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorDiffusionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorDiffusionIntegrator *arg1 = (mfem::VectorDiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorDiffusionIntegrator" "', argument " "1"" of type '" "mfem::VectorDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorDiffusionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorDiffusionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorDiffusionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorDiffusionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ElasticityIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::Coefficient *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  mfem::ElasticityIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ElasticityIntegrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ElasticityIntegrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Coefficient * >(argp2);
  {
    try {
      result = (mfem::ElasticityIntegrator *)new mfem::ElasticityIntegrator(*arg1,*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ElasticityIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ElasticityIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::ElasticityIntegrator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ElasticityIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ElasticityIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (mfem::ElasticityIntegrator *)new mfem::ElasticityIntegrator(*arg1,arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ElasticityIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ElasticityIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ElasticityIntegrator", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ElasticityIntegrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_ElasticityIntegrator__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ElasticityIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::ElasticityIntegrator::ElasticityIntegrator(mfem::Coefficient &,mfem::Coefficient &)\n"
    "    mfem::ElasticityIntegrator::ElasticityIntegrator(mfem::Coefficient &,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ElasticityIntegrator_AssembleElementMatrix(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ElasticityIntegrator *arg1 = (mfem::ElasticityIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::DenseMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  (char *)"arg4",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:ElasticityIntegrator_AssembleElementMatrix", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ElasticityIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "1"" of type '" "mfem::ElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ElasticityIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_AssembleElementMatrix" "', argument " "4"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg4 = reinterpret_cast< mfem::DenseMatrix * >(argp4);
  {
    try {
      (arg1)->AssembleElementMatrix((mfem::FiniteElement const &)*arg2,*arg3,*arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ElasticityIntegrator_ComputeElementFlux(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ElasticityIntegrator *arg1 = (mfem::ElasticityIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::FiniteElement *arg5 = 0 ;
  mfem::Vector *arg6 = 0 ;
  bool arg7 = (bool) true ;
  mfem::IntegrationRule *arg8 = (mfem::IntegrationRule *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"el",  (char *)"Trans",  (char *)"u",  (char *)"fluxelem",  (char *)"flux",  (char *)"with_coef",  (char *)"ir",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOOO|OO:ElasticityIntegrator_ComputeElementFlux", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4, &obj5, &obj6, &obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ElasticityIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "1"" of type '" "mfem::ElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ElasticityIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "5"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FiniteElement * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "6"" of type '" "mfem::Vector &""'"); 
  }
  arg6 = reinterpret_cast< mfem::Vector * >(argp6);
  if (obj6) {
    ecode7 = SWIG_AsVal_bool(obj6, &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "7"" of type '" "bool""'");
    } 
    arg7 = static_cast< bool >(val7);
  }
  if (obj7) {
    res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "ElasticityIntegrator_ComputeElementFlux" "', argument " "8"" of type '" "mfem::IntegrationRule const *""'"); 
    }
    arg8 = reinterpret_cast< mfem::IntegrationRule * >(argp8);
  }
  {
    try {
      (arg1)->ComputeElementFlux((mfem::FiniteElement const &)*arg2,*arg3,*arg4,(mfem::FiniteElement const &)*arg5,*arg6,arg7,(mfem::IntegrationRule const *)arg8);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ElasticityIntegrator_ComputeFluxEnergy(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ElasticityIntegrator *arg1 = (mfem::ElasticityIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::ElementTransformation *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  mfem::Vector *arg5 = (mfem::Vector *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fluxelem",  (char *)"Trans",  (char *)"flux",  (char *)"d_energy",  NULL 
  };
  double result;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO|O:ElasticityIntegrator_ComputeFluxEnergy", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ElasticityIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "1"" of type '" "mfem::ElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ElasticityIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "3"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg3 = reinterpret_cast< mfem::ElementTransformation * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_mfem__Vector, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ElasticityIntegrator_ComputeFluxEnergy" "', argument " "5"" of type '" "mfem::Vector *""'"); 
    }
    arg5 = reinterpret_cast< mfem::Vector * >(argp5);
  }
  {
    try {
      result = (double)(arg1)->ComputeFluxEnergy((mfem::FiniteElement const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ElasticityIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ElasticityIntegrator *arg1 = (mfem::ElasticityIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ElasticityIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ElasticityIntegrator" "', argument " "1"" of type '" "mfem::ElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ElasticityIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ElasticityIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ElasticityIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ElasticityIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DGTraceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::DGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGTraceIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (mfem::DGTraceIntegrator *)new mfem::DGTraceIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGTraceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::DGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGTraceIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGTraceIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (mfem::DGTraceIntegrator *)new mfem::DGTraceIntegrator(*arg1,arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGTraceIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::VectorCoefficient *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  mfem::DGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DGTraceIntegrator" "', argument " "2"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGTraceIntegrator" "', argument " "2"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg2 = reinterpret_cast< mfem::VectorCoefficient * >(argp2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGTraceIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DGTraceIntegrator" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (mfem::DGTraceIntegrator *)new mfem::DGTraceIntegrator(*arg1,*arg2,arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGTraceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DGTraceIntegrator", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_DGTraceIntegrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_DGTraceIntegrator__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          {
            if (PyFloat_Check(argv[3])){
              _v = 1;
            } else {
              _v = 0;
            }
          }
          if (_v) {
            return _wrap_new_DGTraceIntegrator__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DGTraceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGTraceIntegrator::DGTraceIntegrator(mfem::VectorCoefficient &,double)\n"
    "    mfem::DGTraceIntegrator::DGTraceIntegrator(mfem::VectorCoefficient &,double,double)\n"
    "    mfem::DGTraceIntegrator::DGTraceIntegrator(mfem::Coefficient &,mfem::VectorCoefficient &,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DGTraceIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGTraceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_DGTraceIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGTraceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_DGTraceIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DGTraceIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGTraceIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::DGTraceIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssemblePA_SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssemblePA_SWIG_0_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DGTraceIntegrator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGTraceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_DGTraceIntegrator_AssemblePA_SWIG_0_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGTraceIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_DGTraceIntegrator_AssemblePA_SWIG_0_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DGTraceIntegrator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGTraceIntegrator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::DGTraceIntegrator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssemblePAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DGTraceIntegrator_AssemblePAInteriorFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssemblePAInteriorFaces" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssemblePAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePAInteriorFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssemblePABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO:DGTraceIntegrator_AssemblePABoundaryFaces", kwnames, &obj0, &obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssemblePABoundaryFaces" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssemblePABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePABoundaryFaces((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DGTraceIntegrator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::DGTraceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::DGTraceIntegrator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"arg2",  (char *)"arg3",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DGTraceIntegrator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AddMultPA" "', argument " "1"" of type '" "mfem::DGTraceIntegrator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::DGTraceIntegrator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssembleEAInteriorFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  mfem::Vector *arg4 = 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_int",  (char *)"ea_data_ext",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DGTraceIntegrator_AssembleEAInteriorFaces", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "4"" of type '" "mfem::Vector &""'"); 
  }
  arg4 = reinterpret_cast< mfem::Vector * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DGTraceIntegrator_AssembleEAInteriorFaces" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      (arg1)->AssembleEAInteriorFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,*arg4,arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_AssembleEABoundaryFaces(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"fes",  (char *)"ea_data_bdr",  (char *)"add",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOO:DGTraceIntegrator_AssembleEABoundaryFaces", kwnames, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DGTraceIntegrator_AssembleEABoundaryFaces" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->AssembleEABoundaryFaces((mfem::FiniteElementSpace const &)*arg2,*arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGTraceIntegrator_GetRule(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::Geometry::Type arg1 ;
  int arg2 ;
  mfem::FaceElementTransformations *arg3 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"geom",  (char *)"order",  (char *)"T",  NULL 
  };
  mfem::IntegrationRule *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:DGTraceIntegrator_GetRule", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DGTraceIntegrator_GetRule" "', argument " "1"" of type '" "mfem::Geometry::Type""'");
  } 
  arg1 = static_cast< mfem::Geometry::Type >(val1);
  {
    if ((PyArray_PyIntAsInt(obj1) == -1) && PyErr_Occurred()) {
      SWIG_exception_fail(SWIG_TypeError, "Input must be integer");
    };  
    arg2 = PyArray_PyIntAsInt(obj1);
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGTraceIntegrator_GetRule" "', argument " "3"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGTraceIntegrator_GetRule" "', argument " "3"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FaceElementTransformations * >(argp3);
  {
    try {
      result = (mfem::IntegrationRule *) &mfem::DGTraceIntegrator::GetRule(arg1,arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IntegrationRule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DGTraceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DGTraceIntegrator *arg1 = (mfem::DGTraceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGTraceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DGTraceIntegrator" "', argument " "1"" of type '" "mfem::DGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGTraceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DGTraceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DGTraceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DGTraceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NonconservativeDGTraceIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::NonconservativeDGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (mfem::NonconservativeDGTraceIntegrator *)new mfem::NonconservativeDGTraceIntegrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NonconservativeDGTraceIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::NonconservativeDGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (mfem::NonconservativeDGTraceIntegrator *)new mfem::NonconservativeDGTraceIntegrator(*arg1,arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NonconservativeDGTraceIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::VectorCoefficient *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  mfem::NonconservativeDGTraceIntegrator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "2"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "2"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg2 = reinterpret_cast< mfem::VectorCoefficient * >(argp2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_NonconservativeDGTraceIntegrator" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (mfem::NonconservativeDGTraceIntegrator *)new mfem::NonconservativeDGTraceIntegrator(*arg1,*arg2,arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NonconservativeDGTraceIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_NonconservativeDGTraceIntegrator", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_NonconservativeDGTraceIntegrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_NonconservativeDGTraceIntegrator__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__VectorCoefficient, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          {
            if (PyFloat_Check(argv[3])){
              _v = 1;
            } else {
              _v = 0;
            }
          }
          if (_v) {
            return _wrap_new_NonconservativeDGTraceIntegrator__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_NonconservativeDGTraceIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::NonconservativeDGTraceIntegrator::NonconservativeDGTraceIntegrator(mfem::VectorCoefficient &,double)\n"
    "    mfem::NonconservativeDGTraceIntegrator::NonconservativeDGTraceIntegrator(mfem::VectorCoefficient &,double,double)\n"
    "    mfem::NonconservativeDGTraceIntegrator::NonconservativeDGTraceIntegrator(mfem::Coefficient &,mfem::VectorCoefficient &,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_NonconservativeDGTraceIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::NonconservativeDGTraceIntegrator *arg1 = (mfem::NonconservativeDGTraceIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NonconservativeDGTraceIntegrator" "', argument " "1"" of type '" "mfem::NonconservativeDGTraceIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NonconservativeDGTraceIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NonconservativeDGTraceIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__NonconservativeDGTraceIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NonconservativeDGTraceIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DGDiffusionIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::DGDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DGDiffusionIntegrator" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGDiffusionIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (mfem::DGDiffusionIntegrator *)new mfem::DGDiffusionIntegrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::DGDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGDiffusionIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGDiffusionIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGDiffusionIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (mfem::DGDiffusionIntegrator *)new mfem::DGDiffusionIntegrator(*arg1,arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionIntegrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::MatrixCoefficient *arg1 = 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::DGDiffusionIntegrator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__MatrixCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGDiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGDiffusionIntegrator" "', argument " "1"" of type '" "mfem::MatrixCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::MatrixCoefficient * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGDiffusionIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGDiffusionIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (mfem::DGDiffusionIntegrator *)new mfem::DGDiffusionIntegrator(*arg1,arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DGDiffusionIntegrator", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      if (PyFloat_Check(argv[0])){
        _v = 1;
      } else {
        _v = 0;
      }
    }
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_DGDiffusionIntegrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_DGDiffusionIntegrator__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__MatrixCoefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_DGDiffusionIntegrator__SWIG_2(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DGDiffusionIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGDiffusionIntegrator::DGDiffusionIntegrator(double const,double const)\n"
    "    mfem::DGDiffusionIntegrator::DGDiffusionIntegrator(mfem::Coefficient &,double const,double const)\n"
    "    mfem::DGDiffusionIntegrator::DGDiffusionIntegrator(mfem::MatrixCoefficient &,double const,double const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGDiffusionIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionIntegrator *arg1 = (mfem::DGDiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGDiffusionIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionIntegrator *arg1 = (mfem::DGDiffusionIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGDiffusionIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DGDiffusionIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGDiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_DGDiffusionIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGDiffusionIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_DGDiffusionIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DGDiffusionIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGDiffusionIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::DGDiffusionIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DGDiffusionIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionIntegrator *arg1 = (mfem::DGDiffusionIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DGDiffusionIntegrator" "', argument " "1"" of type '" "mfem::DGDiffusionIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DGDiffusionIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DGDiffusionIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DGDiffusionIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DGDiffusionBR2Integrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::FiniteElementSpace *arg1 = 0 ;
  double arg2 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::DGDiffusionBR2Integrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::FiniteElementSpace &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::FiniteElementSpace &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElementSpace * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  {
    try {
      result = (mfem::DGDiffusionBR2Integrator *)new mfem::DGDiffusionBR2Integrator(*arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionBR2Integrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::FiniteElementSpace *arg1 = 0 ;
  mfem::Coefficient *arg2 = 0 ;
  double arg3 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  mfem::DGDiffusionBR2Integrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__FiniteElementSpace,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::FiniteElementSpace &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::FiniteElementSpace &""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElementSpace * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGDiffusionBR2Integrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Coefficient * >(argp2);
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    try {
      result = (mfem::DGDiffusionBR2Integrator *)new mfem::DGDiffusionBR2Integrator(*arg1,*arg2,arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionBR2Integrator__SWIG_2(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::FiniteElementSpace *arg1 = (mfem::FiniteElementSpace *) 0 ;
  double arg2 = (double) 1.0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::DGDiffusionBR2Integrator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__FiniteElementSpace, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::FiniteElementSpace *""'"); 
  }
  arg1 = reinterpret_cast< mfem::FiniteElementSpace * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGDiffusionBR2Integrator" "', argument " "2"" of type '" "double""'");
    } 
    arg2 = static_cast< double >(val2);
  }
  {
    try {
      result = (mfem::DGDiffusionBR2Integrator *)new mfem::DGDiffusionBR2Integrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGDiffusionBR2Integrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DGDiffusionBR2Integrator", 0, 3, argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DGDiffusionBR2Integrator__SWIG_0(self, argc, argv);
      }
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_DGDiffusionBR2Integrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__FiniteElementSpace, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      if (argc <= 1) {
        return _wrap_new_DGDiffusionBR2Integrator__SWIG_2(self, argc, argv);
      }
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_DGDiffusionBR2Integrator__SWIG_2(self, argc, argv);
      }
    }
  }
  if ((argc >= 2) && (argc <= 3)) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        if (argc <= 2) {
          return _wrap_new_DGDiffusionBR2Integrator__SWIG_1(self, argc, argv);
        }
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          return _wrap_new_DGDiffusionBR2Integrator__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DGDiffusionBR2Integrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGDiffusionBR2Integrator::DGDiffusionBR2Integrator(mfem::FiniteElementSpace &,double)\n"
    "    mfem::DGDiffusionBR2Integrator::DGDiffusionBR2Integrator(mfem::FiniteElementSpace &,mfem::Coefficient &,double)\n"
    "    mfem::DGDiffusionBR2Integrator::DGDiffusionBR2Integrator(mfem::FiniteElementSpace *,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionBR2Integrator *arg1 = (mfem::DGDiffusionBR2Integrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGDiffusionBR2Integrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionBR2Integrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionBR2Integrator *arg1 = (mfem::DGDiffusionBR2Integrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGDiffusionBR2Integrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionBR2Integrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGDiffusionBR2Integrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DGDiffusionBR2Integrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DGDiffusionBR2Integrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGDiffusionBR2Integrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::DGDiffusionBR2Integrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DGDiffusionBR2Integrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DGDiffusionBR2Integrator *arg1 = (mfem::DGDiffusionBR2Integrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DGDiffusionBR2Integrator" "', argument " "1"" of type '" "mfem::DGDiffusionBR2Integrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGDiffusionBR2Integrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DGDiffusionBR2Integrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DGDiffusionBR2Integrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DGDiffusionBR2Integrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DGElasticityIntegrator__SWIG_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  mfem::DGElasticityIntegrator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DGElasticityIntegrator" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DGElasticityIntegrator" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (mfem::DGElasticityIntegrator *)new mfem::DGElasticityIntegrator(arg1,arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGElasticityIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGElasticityIntegrator__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  mfem::Coefficient *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  mfem::DGElasticityIntegrator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DGElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGElasticityIntegrator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DGElasticityIntegrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DGElasticityIntegrator" "', argument " "2"" of type '" "mfem::Coefficient &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Coefficient * >(argp2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DGElasticityIntegrator" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_DGElasticityIntegrator" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (mfem::DGElasticityIntegrator *)new mfem::DGElasticityIntegrator(*arg1,*arg2,arg3,arg4);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DGElasticityIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DGElasticityIntegrator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DGElasticityIntegrator", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      if (PyFloat_Check(argv[0])){
        _v = 1;
      } else {
        _v = 0;
      }
    }
    if (_v) {
      {
        if (PyFloat_Check(argv[1])){
          _v = 1;
        } else {
          _v = 0;
        }
      }
      if (_v) {
        return _wrap_new_DGElasticityIntegrator__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 4) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_mfem__Coefficient, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          if (PyFloat_Check(argv[2])){
            _v = 1;
          } else {
            _v = 0;
          }
        }
        if (_v) {
          {
            if (PyFloat_Check(argv[3])){
              _v = 1;
            } else {
              _v = 0;
            }
          }
          if (_v) {
            return _wrap_new_DGElasticityIntegrator__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DGElasticityIntegrator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGElasticityIntegrator::DGElasticityIntegrator(double,double)\n"
    "    mfem::DGElasticityIntegrator::DGElasticityIntegrator(mfem::Coefficient &,mfem::Coefficient &,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DGElasticityIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGElasticityIntegrator *arg1 = (mfem::DGElasticityIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGElasticityIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGElasticityIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGElasticityIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::DGElasticityIntegrator *arg1 = (mfem::DGElasticityIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGElasticityIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::DGElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGElasticityIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DGElasticityIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DGElasticityIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DGElasticityIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGElasticityIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_DGElasticityIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__DGElasticityIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_DGElasticityIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DGElasticityIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::DGElasticityIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::DGElasticityIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DGElasticityIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DGElasticityIntegrator *arg1 = (mfem::DGElasticityIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DGElasticityIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DGElasticityIntegrator" "', argument " "1"" of type '" "mfem::DGElasticityIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DGElasticityIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DGElasticityIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DGElasticityIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DGElasticityIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TraceJumpIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::TraceJumpIntegrator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_TraceJumpIntegrator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::TraceJumpIntegrator *)new mfem::TraceJumpIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__TraceJumpIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TraceJumpIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TraceJumpIntegrator *arg1 = (mfem::TraceJumpIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TraceJumpIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::TraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TraceJumpIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TraceJumpIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::TraceJumpIntegrator *arg1 = (mfem::TraceJumpIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TraceJumpIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::TraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TraceJumpIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TraceJumpIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TraceJumpIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "TraceJumpIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TraceJumpIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_TraceJumpIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__TraceJumpIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_TraceJumpIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'TraceJumpIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::TraceJumpIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::TraceJumpIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TraceJumpIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::TraceJumpIntegrator *arg1 = (mfem::TraceJumpIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__TraceJumpIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TraceJumpIntegrator" "', argument " "1"" of type '" "mfem::TraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::TraceJumpIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TraceJumpIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__TraceJumpIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TraceJumpIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NormalTraceJumpIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::NormalTraceJumpIntegrator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_NormalTraceJumpIntegrator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::NormalTraceJumpIntegrator *)new mfem::NormalTraceJumpIntegrator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::NormalTraceJumpIntegrator *arg1 = (mfem::NormalTraceJumpIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FaceElementTransformations *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::NormalTraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NormalTraceJumpIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FaceElementTransformations * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::NormalTraceJumpIntegrator *arg1 = (mfem::NormalTraceJumpIntegrator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::FiniteElement *arg4 = 0 ;
  mfem::FaceElementTransformations *arg5 = 0 ;
  mfem::DenseMatrix *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "1"" of type '" "mfem::NormalTraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NormalTraceJumpIntegrator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "4"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg4 = reinterpret_cast< mfem::FiniteElement * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_mfem__FaceElementTransformations,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "5"" of type '" "mfem::FaceElementTransformations &""'"); 
  }
  arg5 = reinterpret_cast< mfem::FaceElementTransformations * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalTraceJumpIntegrator_AssembleFaceMatrix" "', argument " "6"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg6 = reinterpret_cast< mfem::DenseMatrix * >(argp6);
  {
    try {
      (arg1)->AssembleFaceMatrix((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,(mfem::FiniteElement const &)*arg4,*arg5,*arg6);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "NormalTraceJumpIntegrator_AssembleFaceMatrix", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix__SWIG_0_0(self, argc, argv);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_mfem__FiniteElement, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_mfem__FaceElementTransformations, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_mfem__DenseMatrix, SWIG_POINTER_NO_NULL);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'NormalTraceJumpIntegrator_AssembleFaceMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::NormalTraceJumpIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n"
    "    mfem::NormalTraceJumpIntegrator::AssembleFaceMatrix(mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FiniteElement const &,mfem::FaceElementTransformations &,mfem::DenseMatrix &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_NormalTraceJumpIntegrator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::NormalTraceJumpIntegrator *arg1 = (mfem::NormalTraceJumpIntegrator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NormalTraceJumpIntegrator" "', argument " "1"" of type '" "mfem::NormalTraceJumpIntegrator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NormalTraceJumpIntegrator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NormalTraceJumpIntegrator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__NormalTraceJumpIntegrator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NormalTraceJumpIntegrator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DiscreteInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DiscreteInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_DiscreteInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::DiscreteInterpolator *)new mfem::DiscreteInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DiscreteInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DiscreteInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DiscreteInterpolator *arg1 = (mfem::DiscreteInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DiscreteInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DiscreteInterpolator" "', argument " "1"" of type '" "mfem::DiscreteInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DiscreteInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DiscreteInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DiscreteInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DiscreteInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_GradientInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_GradientInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::GradientInterpolator *)new mfem::GradientInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__GradientInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GradientInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GradientInterpolator" "', argument " "1"" of type '" "mfem::GradientInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"h1_fe",  (char *)"nd_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:GradientInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::GradientInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientInterpolator_AssemblePA" "', argument " "1"" of type '" "mfem::GradientInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__GradientInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientInterpolator_AssemblePA" "', argument " "1"" of type '" "mfem::GradientInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientInterpolator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "GradientInterpolator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__GradientInterpolator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_GradientInterpolator_AssemblePA__SWIG_0_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__GradientInterpolator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_GradientInterpolator_AssemblePA__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'GradientInterpolator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::GradientInterpolator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::GradientInterpolator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:GradientInterpolator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientInterpolator_AddMultPA" "', argument " "1"" of type '" "mfem::GradientInterpolator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientInterpolator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientInterpolator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::GradientInterpolator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GradientInterpolator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::GradientInterpolator *arg1 = (mfem::GradientInterpolator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:GradientInterpolator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__GradientInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GradientInterpolator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::GradientInterpolator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::GradientInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GradientInterpolator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GradientInterpolator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GradientInterpolator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::GradientInterpolator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GradientInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__GradientInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *GradientInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_IdentityInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:IdentityInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::IdentityInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IdentityInterpolator_AssemblePA__SWIG_0_0(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IdentityInterpolator_AssemblePA" "', argument " "1"" of type '" "mfem::IdentityInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IdentityInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IdentityInterpolator_AssemblePA__SWIG_1(PyObject *self, Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  mfem::FiniteElementSpace *arg2 = 0 ;
  mfem::FiniteElementSpace *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IdentityInterpolator_AssemblePA" "', argument " "1"" of type '" "mfem::IdentityInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IdentityInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssemblePA" "', argument " "2"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElementSpace * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_mfem__FiniteElementSpace,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IdentityInterpolator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AssemblePA" "', argument " "3"" of type '" "mfem::FiniteElementSpace const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElementSpace * >(argp3);
  {
    try {
      (arg1)->AssemblePA((mfem::FiniteElementSpace const &)*arg2,(mfem::FiniteElementSpace const &)*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IdentityInterpolator_AssemblePA(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IdentityInterpolator_AssemblePA", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__IdentityInterpolator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_IdentityInterpolator_AssemblePA__SWIG_0_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v = 0;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_mfem__IdentityInterpolator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_mfem__FiniteElementSpace, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_IdentityInterpolator_AssemblePA__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IdentityInterpolator_AssemblePA'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    mfem::IdentityInterpolator::AssemblePA(mfem::FiniteElementSpace const &)\n"
    "    mfem::IdentityInterpolator::AssemblePA(mfem::FiniteElementSpace const &,mfem::FiniteElementSpace const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IdentityInterpolator_AddMultPA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:IdentityInterpolator_AddMultPA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IdentityInterpolator_AddMultPA" "', argument " "1"" of type '" "mfem::IdentityInterpolator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IdentityInterpolator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AddMultPA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IdentityInterpolator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AddMultPA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::IdentityInterpolator const *)arg1)->AddMultPA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IdentityInterpolator_AddMultTransposePA(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  mfem::Vector *arg2 = 0 ;
  mfem::Vector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"x",  (char *)"y",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOO:IdentityInterpolator_AddMultTransposePA", kwnames, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IdentityInterpolator_AddMultTransposePA" "', argument " "1"" of type '" "mfem::IdentityInterpolator const *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__Vector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IdentityInterpolator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AddMultTransposePA" "', argument " "2"" of type '" "mfem::Vector const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::Vector * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__Vector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IdentityInterpolator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IdentityInterpolator_AddMultTransposePA" "', argument " "3"" of type '" "mfem::Vector &""'"); 
  }
  arg3 = reinterpret_cast< mfem::Vector * >(argp3);
  {
    try {
      ((mfem::IdentityInterpolator const *)arg1)->AddMultTransposePA((mfem::Vector const &)*arg2,*arg3);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IdentityInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_IdentityInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::IdentityInterpolator *)new mfem::IdentityInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__IdentityInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IdentityInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::IdentityInterpolator *arg1 = (mfem::IdentityInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__IdentityInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IdentityInterpolator" "', argument " "1"" of type '" "mfem::IdentityInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::IdentityInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IdentityInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__IdentityInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IdentityInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_CurlInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::CurlInterpolator *arg1 = (mfem::CurlInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:CurlInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__CurlInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::CurlInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CurlInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CurlInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::CurlInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_CurlInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::CurlInterpolator *)new mfem::CurlInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__CurlInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CurlInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::CurlInterpolator *arg1 = (mfem::CurlInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__CurlInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CurlInterpolator" "', argument " "1"" of type '" "mfem::CurlInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::CurlInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CurlInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__CurlInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CurlInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_DivergenceInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::DivergenceInterpolator *arg1 = (mfem::DivergenceInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:DivergenceInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__DivergenceInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::DivergenceInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivergenceInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DivergenceInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DivergenceInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DivergenceInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_DivergenceInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::DivergenceInterpolator *)new mfem::DivergenceInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__DivergenceInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DivergenceInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::DivergenceInterpolator *arg1 = (mfem::DivergenceInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__DivergenceInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DivergenceInterpolator" "', argument " "1"" of type '" "mfem::DivergenceInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::DivergenceInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DivergenceInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__DivergenceInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DivergenceInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_NormalInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::NormalInterpolator *arg1 = (mfem::NormalInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:NormalInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__NormalInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::NormalInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NormalInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NormalInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NormalInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::NormalInterpolator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_NormalInterpolator", 0, 0, 0)) SWIG_fail;
  {
    try {
      result = (mfem::NormalInterpolator *)new mfem::NormalInterpolator();
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__NormalInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NormalInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::NormalInterpolator *arg1 = (mfem::NormalInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__NormalInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NormalInterpolator" "', argument " "1"" of type '" "mfem::NormalInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::NormalInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NormalInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__NormalInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NormalInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ScalarProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"sc",  NULL 
  };
  mfem::ScalarProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_ScalarProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ScalarProductInterpolator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScalarProductInterpolator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::ScalarProductInterpolator *)new mfem::ScalarProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ScalarProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScalarProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ScalarProductInterpolator *arg1 = (mfem::ScalarProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:ScalarProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ScalarProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::ScalarProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScalarProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ScalarProductInterpolator *arg1 = (mfem::ScalarProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ScalarProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScalarProductInterpolator" "', argument " "1"" of type '" "mfem::ScalarProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScalarProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ScalarProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ScalarProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ScalarVectorProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::Coefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"sc",  NULL 
  };
  mfem::ScalarVectorProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_ScalarVectorProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__Coefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ScalarVectorProductInterpolator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScalarVectorProductInterpolator" "', argument " "1"" of type '" "mfem::Coefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::Coefficient * >(argp1);
  {
    try {
      result = (mfem::ScalarVectorProductInterpolator *)new mfem::ScalarVectorProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ScalarVectorProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScalarVectorProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ScalarVectorProductInterpolator *arg1 = (mfem::ScalarVectorProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:ScalarVectorProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ScalarVectorProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::ScalarVectorProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarVectorProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarVectorProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScalarVectorProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ScalarVectorProductInterpolator *arg1 = (mfem::ScalarVectorProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ScalarVectorProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScalarVectorProductInterpolator" "', argument " "1"" of type '" "mfem::ScalarVectorProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarVectorProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScalarVectorProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ScalarVectorProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ScalarVectorProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorScalarProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vc",  NULL 
  };
  mfem::VectorScalarProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_VectorScalarProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorScalarProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorScalarProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorScalarProductInterpolator *)new mfem::VectorScalarProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorScalarProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorScalarProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorScalarProductInterpolator *arg1 = (mfem::VectorScalarProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"dom_fe",  (char *)"ran_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorScalarProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorScalarProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorScalarProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorScalarProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorScalarProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorScalarProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorScalarProductInterpolator *arg1 = (mfem::VectorScalarProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorScalarProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorScalarProductInterpolator" "', argument " "1"" of type '" "mfem::VectorScalarProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorScalarProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorScalarProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorScalarProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorScalarProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ScalarCrossProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vc",  NULL 
  };
  mfem::ScalarCrossProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_ScalarCrossProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ScalarCrossProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ScalarCrossProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::ScalarCrossProductInterpolator *)new mfem::ScalarCrossProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__ScalarCrossProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScalarCrossProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::ScalarCrossProductInterpolator *arg1 = (mfem::ScalarCrossProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"nd_fe",  (char *)"l2_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:ScalarCrossProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__ScalarCrossProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::ScalarCrossProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarCrossProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ScalarCrossProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScalarCrossProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::ScalarCrossProductInterpolator *arg1 = (mfem::ScalarCrossProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__ScalarCrossProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScalarCrossProductInterpolator" "', argument " "1"" of type '" "mfem::ScalarCrossProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::ScalarCrossProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScalarCrossProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__ScalarCrossProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ScalarCrossProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorCrossProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vc",  NULL 
  };
  mfem::VectorCrossProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_VectorCrossProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorCrossProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorCrossProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorCrossProductInterpolator *)new mfem::VectorCrossProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorCrossProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorCrossProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCrossProductInterpolator *arg1 = (mfem::VectorCrossProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"nd_fe",  (char *)"rt_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorCrossProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorCrossProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorCrossProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCrossProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorCrossProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorCrossProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorCrossProductInterpolator *arg1 = (mfem::VectorCrossProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorCrossProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorCrossProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCrossProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCrossProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorCrossProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorCrossProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorCrossProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VectorInnerProductInterpolator(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorCoefficient *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char * kwnames[] = {
    (char *)"vc",  NULL 
  };
  mfem::VectorInnerProductInterpolator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "O:new_VectorInnerProductInterpolator", kwnames, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_mfem__VectorCoefficient,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VectorInnerProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_VectorInnerProductInterpolator" "', argument " "1"" of type '" "mfem::VectorCoefficient &""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorCoefficient * >(argp1);
  {
    try {
      result = (mfem::VectorInnerProductInterpolator *)new mfem::VectorInnerProductInterpolator(*arg1);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_mfem__VectorInnerProductInterpolator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VectorInnerProductInterpolator_AssembleElementMatrix2(PyObject *self, PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  mfem::VectorInnerProductInterpolator *arg1 = (mfem::VectorInnerProductInterpolator *) 0 ;
  mfem::FiniteElement *arg2 = 0 ;
  mfem::FiniteElement *arg3 = 0 ;
  mfem::ElementTransformation *arg4 = 0 ;
  mfem::DenseMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char * kwnames[] = {
    (char *)"self",  (char *)"rt_fe",  (char *)"l2_fe",  (char *)"Trans",  (char *)"elmat",  NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OOOOO:VectorInnerProductInterpolator_AssembleElementMatrix2", kwnames, &obj0, &obj1, &obj2, &obj3, &obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_mfem__VectorInnerProductInterpolator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "1"" of type '" "mfem::VectorInnerProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorInnerProductInterpolator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "2"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg2 = reinterpret_cast< mfem::FiniteElement * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_mfem__FiniteElement,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "3"" of type '" "mfem::FiniteElement const &""'"); 
  }
  arg3 = reinterpret_cast< mfem::FiniteElement * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_mfem__ElementTransformation,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "4"" of type '" "mfem::ElementTransformation &""'"); 
  }
  arg4 = reinterpret_cast< mfem::ElementTransformation * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_mfem__DenseMatrix,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "VectorInnerProductInterpolator_AssembleElementMatrix2" "', argument " "5"" of type '" "mfem::DenseMatrix &""'"); 
  }
  arg5 = reinterpret_cast< mfem::DenseMatrix * >(argp5);
  {
    try {
      (arg1)->AssembleElementMatrix2((mfem::FiniteElement const &)*arg2,(mfem::FiniteElement const &)*arg3,*arg4,*arg5);
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VectorInnerProductInterpolator(PyObject *self, PyObject *args) {
  PyObject *resultobj = 0;
  mfem::VectorInnerProductInterpolator *arg1 = (mfem::VectorInnerProductInterpolator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_mfem__VectorInnerProductInterpolator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VectorInnerProductInterpolator" "', argument " "1"" of type '" "mfem::VectorInnerProductInterpolator *""'"); 
  }
  arg1 = reinterpret_cast< mfem::VectorInnerProductInterpolator * >(argp1);
  {
    try {
      delete arg1;
    }
#ifdef  MFEM_USE_EXCEPTIONS
    catch (mfem::ErrorException &_e) {
      std::string s("PyMFEM error (mfem::ErrorException): "), s2(_e.what());
      s = s + s2;    
      SWIG_exception(SWIG_RuntimeError, s.c_str());
    }
#endif
    
    catch (Swig::DirectorException &e){
      SWIG_fail;
    }    
    catch (...) {
      SWIG_exception(SWIG_RuntimeError, "unknown exception");
    }	 
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VectorInnerProductInterpolator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_mfem__VectorInnerProductInterpolator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VectorInnerProductInterpolator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "new_BilinearFormIntegrator", (PyCFunction)(void(*)(void))_wrap_new_BilinearFormIntegrator, METH_VARARGS|METH_KEYWORDS, "new_BilinearFormIntegrator(PyObject * _self, IntegrationRule ir=None) -> BilinearFormIntegrator"},
	 { "BilinearFormIntegrator_AssemblePA", _wrap_BilinearFormIntegrator_AssemblePA, METH_VARARGS, "\n"
		"BilinearFormIntegrator_AssemblePA(BilinearFormIntegrator self, FiniteElementSpace fes)\n"
		"BilinearFormIntegrator_AssemblePA(BilinearFormIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "BilinearFormIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssemblePAInteriorFaces(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssemblePABoundaryFaces(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleDiagonalPA(BilinearFormIntegrator self, Vector diag)"},
	 { "BilinearFormIntegrator_AssembleDiagonalPA_ADAt", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalPA_ADAt, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleDiagonalPA_ADAt(BilinearFormIntegrator self, Vector D, Vector diag)"},
	 { "BilinearFormIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AddMultPA(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AddMultTransposePA(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleEA(BilinearFormIntegrator self, FiniteElementSpace fes, Vector emat, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleMF(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AddMultMF(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AddMultTransposeMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultTransposeMF, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AddMultTransposeMF(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleDiagonalMF(BilinearFormIntegrator self, Vector diag)"},
	 { "BilinearFormIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleEAInteriorFaces(BilinearFormIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleEABoundaryFaces(BilinearFormIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleElementMatrix(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleElementMatrix2(BilinearFormIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleFaceMatrix", _wrap_BilinearFormIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"BilinearFormIntegrator_AssembleFaceMatrix(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"BilinearFormIntegrator_AssembleFaceMatrix(BilinearFormIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "BilinearFormIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleElementVector(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "BilinearFormIntegrator_AssembleFaceVector", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleFaceVector, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleFaceVector(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Tr, Vector elfun, Vector elvect)"},
	 { "BilinearFormIntegrator_AssembleElementGrad", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementGrad, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleElementGrad(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleFaceGrad", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleFaceGrad, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_AssembleFaceGrad(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Tr, Vector elfun, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_ComputeElementFlux(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "BilinearFormIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "BilinearFormIntegrator_ComputeFluxEnergy(BilinearFormIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "delete_BilinearFormIntegrator", _wrap_delete_BilinearFormIntegrator, METH_O, "delete_BilinearFormIntegrator(BilinearFormIntegrator self)"},
	 { "disown_BilinearFormIntegrator", (PyCFunction)(void(*)(void))_wrap_disown_BilinearFormIntegrator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "BilinearFormIntegrator_swigregister", BilinearFormIntegrator_swigregister, METH_O, NULL},
	 { "BilinearFormIntegrator_swiginit", BilinearFormIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_TransposeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_TransposeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_TransposeIntegrator(BilinearFormIntegrator bfi_, int own_bfi_=1) -> TransposeIntegrator"},
	 { "TransposeIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_SetIntRule(TransposeIntegrator self, IntegrationRule ir)"},
	 { "TransposeIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssembleElementMatrix(TransposeIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "TransposeIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssembleElementMatrix2(TransposeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "TransposeIntegrator_AssembleFaceMatrix", _wrap_TransposeIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"TransposeIntegrator_AssembleFaceMatrix(TransposeIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"TransposeIntegrator_AssembleFaceMatrix(TransposeIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "TransposeIntegrator_AssemblePA", _wrap_TransposeIntegrator_AssemblePA, METH_VARARGS, "\n"
		"TransposeIntegrator_AssemblePA(TransposeIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"TransposeIntegrator_AssemblePA(TransposeIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "TransposeIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssemblePAInteriorFaces(TransposeIntegrator self, FiniteElementSpace fes)"},
	 { "TransposeIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssemblePABoundaryFaces(TransposeIntegrator self, FiniteElementSpace fes)"},
	 { "TransposeIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AddMultTransposePA(TransposeIntegrator self, Vector x, Vector y)"},
	 { "TransposeIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AddMultPA(TransposeIntegrator self, Vector x, Vector y)"},
	 { "TransposeIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssembleEA(TransposeIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "TransposeIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssembleEAInteriorFaces(TransposeIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "TransposeIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "TransposeIntegrator_AssembleEABoundaryFaces(TransposeIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "delete_TransposeIntegrator", _wrap_delete_TransposeIntegrator, METH_O, "delete_TransposeIntegrator(TransposeIntegrator self)"},
	 { "TransposeIntegrator_swigregister", TransposeIntegrator_swigregister, METH_O, NULL},
	 { "TransposeIntegrator_swiginit", TransposeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_LumpedIntegrator", (PyCFunction)(void(*)(void))_wrap_new_LumpedIntegrator, METH_VARARGS|METH_KEYWORDS, "new_LumpedIntegrator(BilinearFormIntegrator bfi_, int own_bfi_=1) -> LumpedIntegrator"},
	 { "LumpedIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_LumpedIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "LumpedIntegrator_SetIntRule(LumpedIntegrator self, IntegrationRule ir)"},
	 { "LumpedIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_LumpedIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "LumpedIntegrator_AssembleElementMatrix(LumpedIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_LumpedIntegrator", _wrap_delete_LumpedIntegrator, METH_O, "delete_LumpedIntegrator(LumpedIntegrator self)"},
	 { "LumpedIntegrator_swigregister", LumpedIntegrator_swigregister, METH_O, NULL},
	 { "LumpedIntegrator_swiginit", LumpedIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_InverseIntegrator", (PyCFunction)(void(*)(void))_wrap_new_InverseIntegrator, METH_VARARGS|METH_KEYWORDS, "new_InverseIntegrator(BilinearFormIntegrator integ, int own_integ=1) -> InverseIntegrator"},
	 { "InverseIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_InverseIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "InverseIntegrator_SetIntRule(InverseIntegrator self, IntegrationRule ir)"},
	 { "InverseIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_InverseIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "InverseIntegrator_AssembleElementMatrix(InverseIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_InverseIntegrator", _wrap_delete_InverseIntegrator, METH_O, "delete_InverseIntegrator(InverseIntegrator self)"},
	 { "InverseIntegrator_swigregister", InverseIntegrator_swigregister, METH_O, NULL},
	 { "InverseIntegrator_swiginit", InverseIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_SumIntegrator", (PyCFunction)(void(*)(void))_wrap_new_SumIntegrator, METH_VARARGS|METH_KEYWORDS, "new_SumIntegrator(int own_integs=1) -> SumIntegrator"},
	 { "SumIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_SetIntRule(SumIntegrator self, IntegrationRule ir)"},
	 { "SumIntegrator_AddIntegrator", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddIntegrator, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AddIntegrator(SumIntegrator self, BilinearFormIntegrator integ)"},
	 { "SumIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleElementMatrix(SumIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "SumIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleElementMatrix2(SumIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "SumIntegrator_AssembleFaceMatrix", _wrap_SumIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"SumIntegrator_AssembleFaceMatrix(SumIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"SumIntegrator_AssembleFaceMatrix(SumIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "SumIntegrator_AssemblePA", _wrap_SumIntegrator_AssemblePA, METH_VARARGS, "\n"
		"SumIntegrator_AssemblePA(SumIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"SumIntegrator_AssemblePA(SumIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "SumIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleDiagonalPA(SumIntegrator self, Vector diag)"},
	 { "SumIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssemblePAInteriorFaces(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssemblePABoundaryFaces(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AddMultTransposePA(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AddMultPA(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleMF(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AddMultMF(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AddMultTransposeMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultTransposeMF, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AddMultTransposeMF(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleDiagonalMF(SumIntegrator self, Vector diag)"},
	 { "SumIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleEA(SumIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "SumIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleEAInteriorFaces(SumIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "SumIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "SumIntegrator_AssembleEABoundaryFaces(SumIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "delete_SumIntegrator", _wrap_delete_SumIntegrator, METH_O, "delete_SumIntegrator(SumIntegrator self)"},
	 { "SumIntegrator_swigregister", SumIntegrator_swigregister, METH_O, NULL},
	 { "SumIntegrator_swiginit", SumIntegrator_swiginit, METH_VARARGS, NULL},
	 { "MixedScalarIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedScalarIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "MixedScalarIntegrator_AssembleElementMatrix2(MixedScalarIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedScalarIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedScalarIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "MixedScalarIntegrator_AssembleElementMatrix(MixedScalarIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedScalarIntegrator", _wrap_delete_MixedScalarIntegrator, METH_O, "delete_MixedScalarIntegrator(MixedScalarIntegrator self)"},
	 { "MixedScalarIntegrator_swigregister", MixedScalarIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedVectorIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "MixedVectorIntegrator_AssembleElementMatrix2(MixedVectorIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedVectorIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedVectorIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "MixedVectorIntegrator_AssembleElementMatrix(MixedVectorIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedVectorIntegrator", _wrap_delete_MixedVectorIntegrator, METH_O, "delete_MixedVectorIntegrator(MixedVectorIntegrator self)"},
	 { "MixedVectorIntegrator_swigregister", MixedVectorIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarVectorIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "MixedScalarVectorIntegrator_AssembleElementMatrix2(MixedScalarVectorIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedScalarVectorIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "MixedScalarVectorIntegrator_AssembleElementMatrix(MixedScalarVectorIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedScalarVectorIntegrator", _wrap_delete_MixedScalarVectorIntegrator, METH_O, "delete_MixedScalarVectorIntegrator(MixedScalarVectorIntegrator self)"},
	 { "MixedScalarVectorIntegrator_swigregister", MixedScalarVectorIntegrator_swigregister, METH_O, NULL},
	 { "new_MixedScalarMassIntegrator", _wrap_new_MixedScalarMassIntegrator, METH_VARARGS, "\n"
		"MixedScalarMassIntegrator()\n"
		"new_MixedScalarMassIntegrator(Coefficient q) -> MixedScalarMassIntegrator\n"
		""},
	 { "delete_MixedScalarMassIntegrator", _wrap_delete_MixedScalarMassIntegrator, METH_O, "delete_MixedScalarMassIntegrator(MixedScalarMassIntegrator self)"},
	 { "MixedScalarMassIntegrator_swigregister", MixedScalarMassIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarMassIntegrator_swiginit", MixedScalarMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedVectorProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedVectorProductIntegrator(VectorCoefficient vq) -> MixedVectorProductIntegrator"},
	 { "delete_MixedVectorProductIntegrator", _wrap_delete_MixedVectorProductIntegrator, METH_O, "delete_MixedVectorProductIntegrator(MixedVectorProductIntegrator self)"},
	 { "MixedVectorProductIntegrator_swigregister", MixedVectorProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorProductIntegrator_swiginit", MixedVectorProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarDerivativeIntegrator", _wrap_new_MixedScalarDerivativeIntegrator, METH_VARARGS, "\n"
		"MixedScalarDerivativeIntegrator()\n"
		"new_MixedScalarDerivativeIntegrator(Coefficient q) -> MixedScalarDerivativeIntegrator\n"
		""},
	 { "delete_MixedScalarDerivativeIntegrator", _wrap_delete_MixedScalarDerivativeIntegrator, METH_O, "delete_MixedScalarDerivativeIntegrator(MixedScalarDerivativeIntegrator self)"},
	 { "MixedScalarDerivativeIntegrator_swigregister", MixedScalarDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarDerivativeIntegrator_swiginit", MixedScalarDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakDerivativeIntegrator", _wrap_new_MixedScalarWeakDerivativeIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakDerivativeIntegrator()\n"
		"new_MixedScalarWeakDerivativeIntegrator(Coefficient q) -> MixedScalarWeakDerivativeIntegrator\n"
		""},
	 { "delete_MixedScalarWeakDerivativeIntegrator", _wrap_delete_MixedScalarWeakDerivativeIntegrator, METH_O, "delete_MixedScalarWeakDerivativeIntegrator(MixedScalarWeakDerivativeIntegrator self)"},
	 { "MixedScalarWeakDerivativeIntegrator_swigregister", MixedScalarWeakDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakDerivativeIntegrator_swiginit", MixedScalarWeakDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarDivergenceIntegrator", _wrap_new_MixedScalarDivergenceIntegrator, METH_VARARGS, "\n"
		"MixedScalarDivergenceIntegrator()\n"
		"new_MixedScalarDivergenceIntegrator(Coefficient q) -> MixedScalarDivergenceIntegrator\n"
		""},
	 { "delete_MixedScalarDivergenceIntegrator", _wrap_delete_MixedScalarDivergenceIntegrator, METH_O, "delete_MixedScalarDivergenceIntegrator(MixedScalarDivergenceIntegrator self)"},
	 { "MixedScalarDivergenceIntegrator_swigregister", MixedScalarDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarDivergenceIntegrator_swiginit", MixedScalarDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorDivergenceIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedVectorDivergenceIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedVectorDivergenceIntegrator(VectorCoefficient vq) -> MixedVectorDivergenceIntegrator"},
	 { "delete_MixedVectorDivergenceIntegrator", _wrap_delete_MixedVectorDivergenceIntegrator, METH_O, "delete_MixedVectorDivergenceIntegrator(MixedVectorDivergenceIntegrator self)"},
	 { "MixedVectorDivergenceIntegrator_swigregister", MixedVectorDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorDivergenceIntegrator_swiginit", MixedVectorDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakGradientIntegrator", _wrap_new_MixedScalarWeakGradientIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakGradientIntegrator()\n"
		"new_MixedScalarWeakGradientIntegrator(Coefficient q) -> MixedScalarWeakGradientIntegrator\n"
		""},
	 { "delete_MixedScalarWeakGradientIntegrator", _wrap_delete_MixedScalarWeakGradientIntegrator, METH_O, "delete_MixedScalarWeakGradientIntegrator(MixedScalarWeakGradientIntegrator self)"},
	 { "MixedScalarWeakGradientIntegrator_swigregister", MixedScalarWeakGradientIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakGradientIntegrator_swiginit", MixedScalarWeakGradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCurlIntegrator", _wrap_new_MixedScalarCurlIntegrator, METH_VARARGS, "\n"
		"MixedScalarCurlIntegrator()\n"
		"new_MixedScalarCurlIntegrator(Coefficient q) -> MixedScalarCurlIntegrator\n"
		""},
	 { "delete_MixedScalarCurlIntegrator", _wrap_delete_MixedScalarCurlIntegrator, METH_O, "delete_MixedScalarCurlIntegrator(MixedScalarCurlIntegrator self)"},
	 { "MixedScalarCurlIntegrator_swigregister", MixedScalarCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCurlIntegrator_swiginit", MixedScalarCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCurlIntegrator", _wrap_new_MixedScalarWeakCurlIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakCurlIntegrator()\n"
		"new_MixedScalarWeakCurlIntegrator(Coefficient q) -> MixedScalarWeakCurlIntegrator\n"
		""},
	 { "delete_MixedScalarWeakCurlIntegrator", _wrap_delete_MixedScalarWeakCurlIntegrator, METH_O, "delete_MixedScalarWeakCurlIntegrator(MixedScalarWeakCurlIntegrator self)"},
	 { "MixedScalarWeakCurlIntegrator_swigregister", MixedScalarWeakCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCurlIntegrator_swiginit", MixedScalarWeakCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorMassIntegrator", _wrap_new_MixedVectorMassIntegrator, METH_VARARGS, "\n"
		"MixedVectorMassIntegrator()\n"
		"MixedVectorMassIntegrator(Coefficient q)\n"
		"MixedVectorMassIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorMassIntegrator(MatrixCoefficient mq) -> MixedVectorMassIntegrator\n"
		""},
	 { "delete_MixedVectorMassIntegrator", _wrap_delete_MixedVectorMassIntegrator, METH_O, "delete_MixedVectorMassIntegrator(MixedVectorMassIntegrator self)"},
	 { "MixedVectorMassIntegrator_swigregister", MixedVectorMassIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorMassIntegrator_swiginit", MixedVectorMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossProductIntegrator(VectorCoefficient vq) -> MixedCrossProductIntegrator"},
	 { "delete_MixedCrossProductIntegrator", _wrap_delete_MixedCrossProductIntegrator, METH_O, "delete_MixedCrossProductIntegrator(MixedCrossProductIntegrator self)"},
	 { "MixedCrossProductIntegrator_swigregister", MixedCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossProductIntegrator_swiginit", MixedCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDotProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDotProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDotProductIntegrator(VectorCoefficient vq) -> MixedDotProductIntegrator"},
	 { "MixedDotProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDotProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedDotProductIntegrator_VerifyFiniteElementTypes(MixedDotProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDotProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDotProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedDotProductIntegrator_FiniteElementTypeFailureMessage(MixedDotProductIntegrator self) -> char const *"},
	 { "delete_MixedDotProductIntegrator", _wrap_delete_MixedDotProductIntegrator, METH_O, "delete_MixedDotProductIntegrator(MixedDotProductIntegrator self)"},
	 { "MixedDotProductIntegrator_swigregister", MixedDotProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedDotProductIntegrator_swiginit", MixedDotProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakGradDotIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakGradDotIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakGradDotIntegrator(VectorCoefficient vq) -> MixedWeakGradDotIntegrator"},
	 { "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes(MixedWeakGradDotIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage(MixedWeakGradDotIntegrator self) -> char const *"},
	 { "MixedWeakGradDotIntegrator_GetIntegrationOrder", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_GetIntegrationOrder, METH_VARARGS|METH_KEYWORDS, "MixedWeakGradDotIntegrator_GetIntegrationOrder(MixedWeakGradDotIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> int"},
	 { "MixedWeakGradDotIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedWeakGradDotIntegrator_CalcShape(MixedWeakGradDotIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedWeakGradDotIntegrator", _wrap_delete_MixedWeakGradDotIntegrator, METH_O, "delete_MixedWeakGradDotIntegrator(MixedWeakGradDotIntegrator self)"},
	 { "MixedWeakGradDotIntegrator_swigregister", MixedWeakGradDotIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakGradDotIntegrator_swiginit", MixedWeakGradDotIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakDivCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakDivCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakDivCrossIntegrator(VectorCoefficient vq) -> MixedWeakDivCrossIntegrator"},
	 { "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes(MixedWeakDivCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage(MixedWeakDivCrossIntegrator self) -> char const *"},
	 { "MixedWeakDivCrossIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedWeakDivCrossIntegrator_GetTestVDim(MixedWeakDivCrossIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedWeakDivCrossIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedWeakDivCrossIntegrator_CalcTestShape(MixedWeakDivCrossIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedWeakDivCrossIntegrator", _wrap_delete_MixedWeakDivCrossIntegrator, METH_O, "delete_MixedWeakDivCrossIntegrator(MixedWeakDivCrossIntegrator self)"},
	 { "MixedWeakDivCrossIntegrator_swigregister", MixedWeakDivCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakDivCrossIntegrator_swiginit", MixedWeakDivCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedGradGradIntegrator", _wrap_new_MixedGradGradIntegrator, METH_VARARGS, "\n"
		"MixedGradGradIntegrator()\n"
		"MixedGradGradIntegrator(Coefficient q)\n"
		"MixedGradGradIntegrator(VectorCoefficient dq)\n"
		"new_MixedGradGradIntegrator(MatrixCoefficient mq) -> MixedGradGradIntegrator\n"
		""},
	 { "MixedGradGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_VerifyFiniteElementTypes(MixedGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedGradGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedGradGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedGradGradIntegrator_FiniteElementTypeFailureMessage(MixedGradGradIntegrator self) -> char const *"},
	 { "MixedGradGradIntegrator_GetIntegrationOrder", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetIntegrationOrder, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_GetIntegrationOrder(MixedGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> int"},
	 { "MixedGradGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_GetTrialVDim(MixedGradGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedGradGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_CalcTrialShape(MixedGradGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedGradGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_GetTestVDim(MixedGradGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedGradGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedGradGradIntegrator_CalcTestShape(MixedGradGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedGradGradIntegrator", _wrap_delete_MixedGradGradIntegrator, METH_O, "delete_MixedGradGradIntegrator(MixedGradGradIntegrator self)"},
	 { "MixedGradGradIntegrator_swigregister", MixedGradGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedGradGradIntegrator_swiginit", MixedGradGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradGradIntegrator(VectorCoefficient vq) -> MixedCrossGradGradIntegrator"},
	 { "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes(MixedCrossGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage(MixedCrossGradGradIntegrator self) -> char const *"},
	 { "MixedCrossGradGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradGradIntegrator_GetTrialVDim(MixedCrossGradGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradGradIntegrator_CalcTrialShape(MixedCrossGradGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradGradIntegrator_GetTestVDim(MixedCrossGradGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossGradGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradGradIntegrator_CalcTestShape(MixedCrossGradGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradGradIntegrator", _wrap_delete_MixedCrossGradGradIntegrator, METH_O, "delete_MixedCrossGradGradIntegrator(MixedCrossGradGradIntegrator self)"},
	 { "MixedCrossGradGradIntegrator_swigregister", MixedCrossGradGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradGradIntegrator_swiginit", MixedCrossGradGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCurlCurlIntegrator", _wrap_new_MixedCurlCurlIntegrator, METH_VARARGS, "\n"
		"MixedCurlCurlIntegrator()\n"
		"MixedCurlCurlIntegrator(Coefficient q)\n"
		"MixedCurlCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedCurlCurlIntegrator(MatrixCoefficient mq) -> MixedCurlCurlIntegrator\n"
		""},
	 { "MixedCurlCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCurlCurlIntegrator_VerifyFiniteElementTypes(MixedCurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage(MixedCurlCurlIntegrator self) -> char const *"},
	 { "MixedCurlCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCurlCurlIntegrator_GetTrialVDim(MixedCurlCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCurlCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCurlCurlIntegrator_CalcTrialShape(MixedCurlCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCurlCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedCurlCurlIntegrator_GetTestVDim(MixedCurlCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCurlCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCurlCurlIntegrator_CalcTestShape(MixedCurlCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCurlCurlIntegrator", _wrap_delete_MixedCurlCurlIntegrator, METH_O, "delete_MixedCurlCurlIntegrator(MixedCurlCurlIntegrator self)"},
	 { "MixedCurlCurlIntegrator_swigregister", MixedCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCurlCurlIntegrator_swiginit", MixedCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlCurlIntegrator(VectorCoefficient vq) -> MixedCrossCurlCurlIntegrator"},
	 { "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage(MixedCrossCurlCurlIntegrator self) -> char const *"},
	 { "MixedCrossCurlCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlCurlIntegrator_GetTrialVDim(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlCurlIntegrator_CalcTrialShape(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossCurlCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlCurlIntegrator_GetTestVDim(MixedCrossCurlCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossCurlCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlCurlIntegrator_CalcTestShape(MixedCrossCurlCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlCurlIntegrator", _wrap_delete_MixedCrossCurlCurlIntegrator, METH_O, "delete_MixedCrossCurlCurlIntegrator(MixedCrossCurlCurlIntegrator self)"},
	 { "MixedCrossCurlCurlIntegrator_swigregister", MixedCrossCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlCurlIntegrator_swiginit", MixedCrossCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlGradIntegrator(VectorCoefficient vq) -> MixedCrossCurlGradIntegrator"},
	 { "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage(MixedCrossCurlGradIntegrator self) -> char const *"},
	 { "MixedCrossCurlGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlGradIntegrator_GetTrialVDim(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlGradIntegrator_CalcTrialShape(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossCurlGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlGradIntegrator_GetTestVDim(MixedCrossCurlGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossCurlGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlGradIntegrator_CalcTestShape(MixedCrossCurlGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlGradIntegrator", _wrap_delete_MixedCrossCurlGradIntegrator, METH_O, "delete_MixedCrossCurlGradIntegrator(MixedCrossCurlGradIntegrator self)"},
	 { "MixedCrossCurlGradIntegrator_swigregister", MixedCrossCurlGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlGradIntegrator_swiginit", MixedCrossCurlGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradCurlIntegrator(VectorCoefficient vq) -> MixedCrossGradCurlIntegrator"},
	 { "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage(MixedCrossGradCurlIntegrator self) -> char const *"},
	 { "MixedCrossGradCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradCurlIntegrator_GetTrialVDim(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradCurlIntegrator_CalcTrialShape(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradCurlIntegrator_GetTestVDim(MixedCrossGradCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossGradCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradCurlIntegrator_CalcTestShape(MixedCrossGradCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradCurlIntegrator", _wrap_delete_MixedCrossGradCurlIntegrator, METH_O, "delete_MixedCrossGradCurlIntegrator(MixedCrossGradCurlIntegrator self)"},
	 { "MixedCrossGradCurlIntegrator_swigregister", MixedCrossGradCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradCurlIntegrator_swiginit", MixedCrossGradCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakCurlCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakCurlCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakCurlCrossIntegrator(VectorCoefficient vq) -> MixedWeakCurlCrossIntegrator"},
	 { "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes(MixedWeakCurlCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage(MixedWeakCurlCrossIntegrator self) -> char const *"},
	 { "MixedWeakCurlCrossIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "MixedWeakCurlCrossIntegrator_GetTestVDim(MixedWeakCurlCrossIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedWeakCurlCrossIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedWeakCurlCrossIntegrator_CalcTestShape(MixedWeakCurlCrossIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedWeakCurlCrossIntegrator", _wrap_delete_MixedWeakCurlCrossIntegrator, METH_O, "delete_MixedWeakCurlCrossIntegrator(MixedWeakCurlCrossIntegrator self)"},
	 { "MixedWeakCurlCrossIntegrator_swigregister", MixedWeakCurlCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakCurlCrossIntegrator_swiginit", MixedWeakCurlCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCurlCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakCurlCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakCurlCrossIntegrator(VectorCoefficient vq) -> MixedScalarWeakCurlCrossIntegrator"},
	 { "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes(MixedScalarWeakCurlCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage(MixedScalarWeakCurlCrossIntegrator self) -> char const *"},
	 { "MixedScalarWeakCurlCrossIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCurlCrossIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakCurlCrossIntegrator_CalcShape(MixedScalarWeakCurlCrossIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarWeakCurlCrossIntegrator", _wrap_delete_MixedScalarWeakCurlCrossIntegrator, METH_O, "delete_MixedScalarWeakCurlCrossIntegrator(MixedScalarWeakCurlCrossIntegrator self)"},
	 { "MixedScalarWeakCurlCrossIntegrator_swigregister", MixedScalarWeakCurlCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCurlCrossIntegrator_swiginit", MixedScalarWeakCurlCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradIntegrator(VectorCoefficient vq) -> MixedCrossGradIntegrator"},
	 { "MixedCrossGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradIntegrator_VerifyFiniteElementTypes(MixedCrossGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossGradIntegrator_FiniteElementTypeFailureMessage(MixedCrossGradIntegrator self) -> char const *"},
	 { "MixedCrossGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradIntegrator_GetTrialVDim(MixedCrossGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradIntegrator_CalcTrialShape(MixedCrossGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossGradIntegrator_CalcTestShape(MixedCrossGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradIntegrator", _wrap_delete_MixedCrossGradIntegrator, METH_O, "delete_MixedCrossGradIntegrator(MixedCrossGradIntegrator self)"},
	 { "MixedCrossGradIntegrator_swigregister", MixedCrossGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradIntegrator_swiginit", MixedCrossGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlIntegrator(VectorCoefficient vq) -> MixedCrossCurlIntegrator"},
	 { "MixedCrossCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlIntegrator_VerifyFiniteElementTypes(MixedCrossCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage(MixedCrossCurlIntegrator self) -> char const *"},
	 { "MixedCrossCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlIntegrator_GetTrialVDim(MixedCrossCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "MixedCrossCurlIntegrator_CalcTrialShape(MixedCrossCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlIntegrator", _wrap_delete_MixedCrossCurlIntegrator, METH_O, "delete_MixedCrossCurlIntegrator(MixedCrossCurlIntegrator self)"},
	 { "MixedCrossCurlIntegrator_swigregister", MixedCrossCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlIntegrator_swiginit", MixedCrossCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossCurlIntegrator(VectorCoefficient vq) -> MixedScalarCrossCurlIntegrator"},
	 { "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes(MixedScalarCrossCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage(MixedScalarCrossCurlIntegrator self) -> char const *"},
	 { "MixedScalarCrossCurlIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossCurlIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossCurlIntegrator_CalcShape(MixedScalarCrossCurlIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarCrossCurlIntegrator", _wrap_delete_MixedScalarCrossCurlIntegrator, METH_O, "delete_MixedScalarCrossCurlIntegrator(MixedScalarCrossCurlIntegrator self)"},
	 { "MixedScalarCrossCurlIntegrator_swigregister", MixedScalarCrossCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossCurlIntegrator_swiginit", MixedScalarCrossCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossGradIntegrator(VectorCoefficient vq) -> MixedScalarCrossGradIntegrator"},
	 { "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes(MixedScalarCrossGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage(MixedScalarCrossGradIntegrator self) -> char const *"},
	 { "MixedScalarCrossGradIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossGradIntegrator_GetVDim(MixedScalarCrossGradIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedScalarCrossGradIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossGradIntegrator_CalcVShape(MixedScalarCrossGradIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedScalarCrossGradIntegrator", _wrap_delete_MixedScalarCrossGradIntegrator, METH_O, "delete_MixedScalarCrossGradIntegrator(MixedScalarCrossGradIntegrator self)"},
	 { "MixedScalarCrossGradIntegrator_swigregister", MixedScalarCrossGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossGradIntegrator_swiginit", MixedScalarCrossGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossProductIntegrator(VectorCoefficient vq) -> MixedScalarCrossProductIntegrator"},
	 { "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes(MixedScalarCrossProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage(MixedScalarCrossProductIntegrator self) -> char const *"},
	 { "delete_MixedScalarCrossProductIntegrator", _wrap_delete_MixedScalarCrossProductIntegrator, METH_O, "delete_MixedScalarCrossProductIntegrator(MixedScalarCrossProductIntegrator self)"},
	 { "MixedScalarCrossProductIntegrator_swigregister", MixedScalarCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossProductIntegrator_swiginit", MixedScalarCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakCrossProductIntegrator(VectorCoefficient vq) -> MixedScalarWeakCrossProductIntegrator"},
	 { "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes(MixedScalarWeakCrossProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage(MixedScalarWeakCrossProductIntegrator self) -> char const *"},
	 { "MixedScalarWeakCrossProductIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCrossProductIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakCrossProductIntegrator_CalcShape(MixedScalarWeakCrossProductIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarWeakCrossProductIntegrator", _wrap_delete_MixedScalarWeakCrossProductIntegrator, METH_O, "delete_MixedScalarWeakCrossProductIntegrator(MixedScalarWeakCrossProductIntegrator self)"},
	 { "MixedScalarWeakCrossProductIntegrator_swigregister", MixedScalarWeakCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCrossProductIntegrator_swiginit", MixedScalarWeakCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDirectionalDerivativeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDirectionalDerivativeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDirectionalDerivativeIntegrator(VectorCoefficient vq) -> MixedDirectionalDerivativeIntegrator"},
	 { "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes(MixedDirectionalDerivativeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage(MixedDirectionalDerivativeIntegrator self) -> char const *"},
	 { "MixedDirectionalDerivativeIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "MixedDirectionalDerivativeIntegrator_GetVDim(MixedDirectionalDerivativeIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedDirectionalDerivativeIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "MixedDirectionalDerivativeIntegrator_CalcVShape(MixedDirectionalDerivativeIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedDirectionalDerivativeIntegrator", _wrap_delete_MixedDirectionalDerivativeIntegrator, METH_O, "delete_MixedDirectionalDerivativeIntegrator(MixedDirectionalDerivativeIntegrator self)"},
	 { "MixedDirectionalDerivativeIntegrator_swigregister", MixedDirectionalDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedDirectionalDerivativeIntegrator_swiginit", MixedDirectionalDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedGradDivIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedGradDivIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedGradDivIntegrator(VectorCoefficient vq) -> MixedGradDivIntegrator"},
	 { "MixedGradDivIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedGradDivIntegrator_VerifyFiniteElementTypes(MixedGradDivIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedGradDivIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedGradDivIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedGradDivIntegrator_FiniteElementTypeFailureMessage(MixedGradDivIntegrator self) -> char const *"},
	 { "MixedGradDivIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "MixedGradDivIntegrator_GetVDim(MixedGradDivIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedGradDivIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "MixedGradDivIntegrator_CalcVShape(MixedGradDivIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedGradDivIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedGradDivIntegrator_CalcShape(MixedGradDivIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedGradDivIntegrator", _wrap_delete_MixedGradDivIntegrator, METH_O, "delete_MixedGradDivIntegrator(MixedGradDivIntegrator self)"},
	 { "MixedGradDivIntegrator_swigregister", MixedGradDivIntegrator_swigregister, METH_O, NULL},
	 { "MixedGradDivIntegrator_swiginit", MixedGradDivIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDivGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDivGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDivGradIntegrator(VectorCoefficient vq) -> MixedDivGradIntegrator"},
	 { "MixedDivGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedDivGradIntegrator_VerifyFiniteElementTypes(MixedDivGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDivGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDivGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedDivGradIntegrator_FiniteElementTypeFailureMessage(MixedDivGradIntegrator self) -> char const *"},
	 { "MixedDivGradIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "MixedDivGradIntegrator_GetVDim(MixedDivGradIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedDivGradIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "MixedDivGradIntegrator_CalcVShape(MixedDivGradIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedDivGradIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "MixedDivGradIntegrator_CalcShape(MixedDivGradIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedDivGradIntegrator", _wrap_delete_MixedDivGradIntegrator, METH_O, "delete_MixedDivGradIntegrator(MixedDivGradIntegrator self)"},
	 { "MixedDivGradIntegrator_swigregister", MixedDivGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedDivGradIntegrator_swiginit", MixedDivGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakDivergenceIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakDivergenceIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakDivergenceIntegrator(VectorCoefficient vq) -> MixedScalarWeakDivergenceIntegrator"},
	 { "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes(MixedScalarWeakDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage, METH_O, "MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage(MixedScalarWeakDivergenceIntegrator self) -> char const *"},
	 { "MixedScalarWeakDivergenceIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakDivergenceIntegrator_GetVDim(MixedScalarWeakDivergenceIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedScalarWeakDivergenceIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "MixedScalarWeakDivergenceIntegrator_CalcVShape(MixedScalarWeakDivergenceIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedScalarWeakDivergenceIntegrator", _wrap_delete_MixedScalarWeakDivergenceIntegrator, METH_O, "delete_MixedScalarWeakDivergenceIntegrator(MixedScalarWeakDivergenceIntegrator self)"},
	 { "MixedScalarWeakDivergenceIntegrator_swigregister", MixedScalarWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakDivergenceIntegrator_swiginit", MixedScalarWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorGradientIntegrator", _wrap_new_MixedVectorGradientIntegrator, METH_VARARGS, "\n"
		"MixedVectorGradientIntegrator()\n"
		"MixedVectorGradientIntegrator(Coefficient q)\n"
		"MixedVectorGradientIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorGradientIntegrator(MatrixCoefficient mq) -> MixedVectorGradientIntegrator\n"
		""},
	 { "delete_MixedVectorGradientIntegrator", _wrap_delete_MixedVectorGradientIntegrator, METH_O, "delete_MixedVectorGradientIntegrator(MixedVectorGradientIntegrator self)"},
	 { "MixedVectorGradientIntegrator_swigregister", MixedVectorGradientIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorGradientIntegrator_swiginit", MixedVectorGradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorCurlIntegrator", _wrap_new_MixedVectorCurlIntegrator, METH_VARARGS, "\n"
		"MixedVectorCurlIntegrator()\n"
		"MixedVectorCurlIntegrator(Coefficient q)\n"
		"MixedVectorCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorCurlIntegrator(MatrixCoefficient mq) -> MixedVectorCurlIntegrator\n"
		""},
	 { "delete_MixedVectorCurlIntegrator", _wrap_delete_MixedVectorCurlIntegrator, METH_O, "delete_MixedVectorCurlIntegrator(MixedVectorCurlIntegrator self)"},
	 { "MixedVectorCurlIntegrator_swigregister", MixedVectorCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorCurlIntegrator_swiginit", MixedVectorCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorWeakCurlIntegrator", _wrap_new_MixedVectorWeakCurlIntegrator, METH_VARARGS, "\n"
		"MixedVectorWeakCurlIntegrator()\n"
		"MixedVectorWeakCurlIntegrator(Coefficient q)\n"
		"MixedVectorWeakCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorWeakCurlIntegrator(MatrixCoefficient mq) -> MixedVectorWeakCurlIntegrator\n"
		""},
	 { "delete_MixedVectorWeakCurlIntegrator", _wrap_delete_MixedVectorWeakCurlIntegrator, METH_O, "delete_MixedVectorWeakCurlIntegrator(MixedVectorWeakCurlIntegrator self)"},
	 { "MixedVectorWeakCurlIntegrator_swigregister", MixedVectorWeakCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorWeakCurlIntegrator_swiginit", MixedVectorWeakCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorWeakDivergenceIntegrator", _wrap_new_MixedVectorWeakDivergenceIntegrator, METH_VARARGS, "\n"
		"MixedVectorWeakDivergenceIntegrator()\n"
		"MixedVectorWeakDivergenceIntegrator(Coefficient q)\n"
		"MixedVectorWeakDivergenceIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorWeakDivergenceIntegrator(MatrixCoefficient mq) -> MixedVectorWeakDivergenceIntegrator\n"
		""},
	 { "delete_MixedVectorWeakDivergenceIntegrator", _wrap_delete_MixedVectorWeakDivergenceIntegrator, METH_O, "delete_MixedVectorWeakDivergenceIntegrator(MixedVectorWeakDivergenceIntegrator self)"},
	 { "MixedVectorWeakDivergenceIntegrator_swigregister", MixedVectorWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorWeakDivergenceIntegrator_swiginit", MixedVectorWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_GradientIntegrator", _wrap_new_GradientIntegrator, METH_VARARGS, "\n"
		"GradientIntegrator()\n"
		"GradientIntegrator(Coefficient q_)\n"
		"new_GradientIntegrator(Coefficient q) -> GradientIntegrator\n"
		""},
	 { "GradientIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "GradientIntegrator_AssembleElementMatrix2(GradientIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "GradientIntegrator_AssemblePA", _wrap_GradientIntegrator_AssemblePA, METH_VARARGS, "\n"
		"GradientIntegrator_AssemblePA(GradientIntegrator self, FiniteElementSpace fes)\n"
		"GradientIntegrator_AssemblePA(GradientIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "GradientIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "GradientIntegrator_AddMultPA(GradientIntegrator self, Vector x, Vector y)"},
	 { "GradientIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "GradientIntegrator_AddMultTransposePA(GradientIntegrator self, Vector x, Vector y)"},
	 { "GradientIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GradientIntegrator_GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "delete_GradientIntegrator", _wrap_delete_GradientIntegrator, METH_O, "delete_GradientIntegrator(GradientIntegrator self)"},
	 { "GradientIntegrator_swigregister", GradientIntegrator_swigregister, METH_O, NULL},
	 { "GradientIntegrator_swiginit", GradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DiffusionIntegrator", _wrap_new_DiffusionIntegrator, METH_VARARGS, "\n"
		"DiffusionIntegrator(IntegrationRule ir=None)\n"
		"DiffusionIntegrator(Coefficient q, IntegrationRule ir=None)\n"
		"DiffusionIntegrator(VectorCoefficient q, IntegrationRule ir=None)\n"
		"new_DiffusionIntegrator(MatrixCoefficient q, IntegrationRule ir=None) -> DiffusionIntegrator\n"
		""},
	 { "DiffusionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleElementMatrix(DiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DiffusionIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleElementMatrix2(DiffusionIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DiffusionIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleElementVector(DiffusionIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "DiffusionIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_ComputeElementFlux(DiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "DiffusionIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_ComputeFluxEnergy(DiffusionIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "DiffusionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleMF(DiffusionIntegrator self, FiniteElementSpace fes)"},
	 { "DiffusionIntegrator_AssemblePA", _wrap_DiffusionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"DiffusionIntegrator_AssemblePA(DiffusionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"DiffusionIntegrator_AssemblePA(DiffusionIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "DiffusionIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleEA(DiffusionIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "DiffusionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleDiagonalPA(DiffusionIntegrator self, Vector diag)"},
	 { "DiffusionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AssembleDiagonalMF(DiffusionIntegrator self, Vector diag)"},
	 { "DiffusionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AddMultMF(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AddMultPA(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_AddMultTransposePA(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "DiffusionIntegrator_GetRule(FiniteElement trial_fe, FiniteElement test_fe) -> IntegrationRule"},
	 { "DiffusionIntegrator_SupportsCeed", _wrap_DiffusionIntegrator_SupportsCeed, METH_O, "DiffusionIntegrator_SupportsCeed(DiffusionIntegrator self) -> bool"},
	 { "DiffusionIntegrator_GetCoefficient", _wrap_DiffusionIntegrator_GetCoefficient, METH_O, "DiffusionIntegrator_GetCoefficient(DiffusionIntegrator self) -> Coefficient"},
	 { "delete_DiffusionIntegrator", _wrap_delete_DiffusionIntegrator, METH_O, "delete_DiffusionIntegrator(DiffusionIntegrator self)"},
	 { "DiffusionIntegrator_swigregister", DiffusionIntegrator_swigregister, METH_O, NULL},
	 { "DiffusionIntegrator_swiginit", DiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MassIntegrator", _wrap_new_MassIntegrator, METH_VARARGS, "\n"
		"MassIntegrator(IntegrationRule ir=None)\n"
		"new_MassIntegrator(Coefficient q, IntegrationRule ir=None) -> MassIntegrator\n"
		""},
	 { "MassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleElementMatrix(MassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleElementMatrix2(MassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MassIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleMF(MassIntegrator self, FiniteElementSpace fes)"},
	 { "MassIntegrator_AssemblePA", _wrap_MassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"MassIntegrator_AssemblePA(MassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"MassIntegrator_AssemblePA(MassIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "MassIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleEA(MassIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "MassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleDiagonalPA(MassIntegrator self, Vector diag)"},
	 { "MassIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AssembleDiagonalMF(MassIntegrator self, Vector diag)"},
	 { "MassIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AddMultMF(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AddMultPA(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_AddMultTransposePA(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "MassIntegrator_GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "MassIntegrator_SupportsCeed", _wrap_MassIntegrator_SupportsCeed, METH_O, "MassIntegrator_SupportsCeed(MassIntegrator self) -> bool"},
	 { "MassIntegrator_GetCoefficient", _wrap_MassIntegrator_GetCoefficient, METH_O, "MassIntegrator_GetCoefficient(MassIntegrator self) -> Coefficient"},
	 { "delete_MassIntegrator", _wrap_delete_MassIntegrator, METH_O, "delete_MassIntegrator(MassIntegrator self)"},
	 { "MassIntegrator_swigregister", MassIntegrator_swigregister, METH_O, NULL},
	 { "MassIntegrator_swiginit", MassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_BoundaryMassIntegrator", (PyCFunction)(void(*)(void))_wrap_new_BoundaryMassIntegrator, METH_VARARGS|METH_KEYWORDS, "new_BoundaryMassIntegrator(Coefficient q) -> BoundaryMassIntegrator"},
	 { "BoundaryMassIntegrator_AssembleFaceMatrix", _wrap_BoundaryMassIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"BoundaryMassIntegrator_AssembleFaceMatrix(BoundaryMassIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"BoundaryMassIntegrator_AssembleFaceMatrix(BoundaryMassIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_BoundaryMassIntegrator", _wrap_delete_BoundaryMassIntegrator, METH_O, "delete_BoundaryMassIntegrator(BoundaryMassIntegrator self)"},
	 { "BoundaryMassIntegrator_swigregister", BoundaryMassIntegrator_swigregister, METH_O, NULL},
	 { "BoundaryMassIntegrator_swiginit", BoundaryMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_ConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_ConvectionIntegrator(VectorCoefficient q, double a=1.0) -> ConvectionIntegrator"},
	 { "ConvectionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AssembleElementMatrix(ConvectionIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "ConvectionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AssembleMF(ConvectionIntegrator self, FiniteElementSpace fes)"},
	 { "ConvectionIntegrator_AssemblePA", _wrap_ConvectionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"ConvectionIntegrator_AssemblePA(ConvectionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"ConvectionIntegrator_AssemblePA(ConvectionIntegrator self, FiniteElementSpace arg2)\n"
		""},
	 { "ConvectionIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AssembleEA(ConvectionIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "ConvectionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AssembleDiagonalPA(ConvectionIntegrator self, Vector diag)"},
	 { "ConvectionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AssembleDiagonalMF(ConvectionIntegrator self, Vector diag)"},
	 { "ConvectionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AddMultMF(ConvectionIntegrator self, Vector arg2, Vector arg3)"},
	 { "ConvectionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AddMultPA(ConvectionIntegrator self, Vector arg2, Vector arg3)"},
	 { "ConvectionIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "ConvectionIntegrator_AddMultTransposePA(ConvectionIntegrator self, Vector x, Vector y)"},
	 { "ConvectionIntegrator_GetRule", _wrap_ConvectionIntegrator_GetRule, METH_VARARGS, "\n"
		"ConvectionIntegrator_GetRule(FiniteElement el, ElementTransformation Trans) -> IntegrationRule\n"
		"ConvectionIntegrator_GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule\n"
		""},
	 { "ConvectionIntegrator_SupportsCeed", _wrap_ConvectionIntegrator_SupportsCeed, METH_O, "ConvectionIntegrator_SupportsCeed(ConvectionIntegrator self) -> bool"},
	 { "delete_ConvectionIntegrator", _wrap_delete_ConvectionIntegrator, METH_O, "delete_ConvectionIntegrator(ConvectionIntegrator self)"},
	 { "ConvectionIntegrator_swigregister", ConvectionIntegrator_swigregister, METH_O, NULL},
	 { "ConvectionIntegrator_swiginit", ConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ConservativeConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_ConservativeConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_ConservativeConvectionIntegrator(VectorCoefficient q, double a=1.0) -> ConservativeConvectionIntegrator"},
	 { "delete_ConservativeConvectionIntegrator", _wrap_delete_ConservativeConvectionIntegrator, METH_O, "delete_ConservativeConvectionIntegrator(ConservativeConvectionIntegrator self)"},
	 { "ConservativeConvectionIntegrator_swigregister", ConservativeConvectionIntegrator_swigregister, METH_O, NULL},
	 { "ConservativeConvectionIntegrator_swiginit", ConservativeConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_GroupConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_GroupConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_GroupConvectionIntegrator(VectorCoefficient q, double a=1.0) -> GroupConvectionIntegrator"},
	 { "GroupConvectionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_GroupConvectionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "GroupConvectionIntegrator_AssembleElementMatrix(GroupConvectionIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "delete_GroupConvectionIntegrator", _wrap_delete_GroupConvectionIntegrator, METH_O, "delete_GroupConvectionIntegrator(GroupConvectionIntegrator self)"},
	 { "GroupConvectionIntegrator_swigregister", GroupConvectionIntegrator_swigregister, METH_O, NULL},
	 { "GroupConvectionIntegrator_swiginit", GroupConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorMassIntegrator", _wrap_new_VectorMassIntegrator, METH_VARARGS, "\n"
		"VectorMassIntegrator()\n"
		"VectorMassIntegrator(Coefficient q, int qo=0)\n"
		"VectorMassIntegrator(Coefficient q, IntegrationRule ir)\n"
		"VectorMassIntegrator(VectorCoefficient q, int qo=0)\n"
		"new_VectorMassIntegrator(MatrixCoefficient q, int qo=0) -> VectorMassIntegrator\n"
		""},
	 { "VectorMassIntegrator_GetVDim", _wrap_VectorMassIntegrator_GetVDim, METH_O, "VectorMassIntegrator_GetVDim(VectorMassIntegrator self) -> int"},
	 { "VectorMassIntegrator_SetVDim", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_SetVDim, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_SetVDim(VectorMassIntegrator self, int vdim_)"},
	 { "VectorMassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AssembleElementMatrix(VectorMassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorMassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AssembleElementMatrix2(VectorMassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorMassIntegrator_AssemblePA", _wrap_VectorMassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"VectorMassIntegrator_AssemblePA(VectorMassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"VectorMassIntegrator_AssemblePA(VectorMassIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "VectorMassIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AssembleMF(VectorMassIntegrator self, FiniteElementSpace fes)"},
	 { "VectorMassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AssembleDiagonalPA(VectorMassIntegrator self, Vector diag)"},
	 { "VectorMassIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AssembleDiagonalMF(VectorMassIntegrator self, Vector diag)"},
	 { "VectorMassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AddMultPA(VectorMassIntegrator self, Vector x, Vector y)"},
	 { "VectorMassIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "VectorMassIntegrator_AddMultMF(VectorMassIntegrator self, Vector x, Vector y)"},
	 { "VectorMassIntegrator_SupportsCeed", _wrap_VectorMassIntegrator_SupportsCeed, METH_O, "VectorMassIntegrator_SupportsCeed(VectorMassIntegrator self) -> bool"},
	 { "delete_VectorMassIntegrator", _wrap_delete_VectorMassIntegrator, METH_O, "delete_VectorMassIntegrator(VectorMassIntegrator self)"},
	 { "VectorMassIntegrator_swigregister", VectorMassIntegrator_swigregister, METH_O, NULL},
	 { "VectorMassIntegrator_swiginit", VectorMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEDivergenceIntegrator", _wrap_new_VectorFEDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorFEDivergenceIntegrator()\n"
		"new_VectorFEDivergenceIntegrator(Coefficient q) -> VectorFEDivergenceIntegrator\n"
		""},
	 { "VectorFEDivergenceIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorFEDivergenceIntegrator_AssembleElementMatrix(VectorFEDivergenceIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorFEDivergenceIntegrator_AssembleElementMatrix2(VectorFEDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt, METH_VARARGS|METH_KEYWORDS, "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt(VectorFEDivergenceIntegrator self, Vector D, Vector diag)"},
	 { "delete_VectorFEDivergenceIntegrator", _wrap_delete_VectorFEDivergenceIntegrator, METH_O, "delete_VectorFEDivergenceIntegrator(VectorFEDivergenceIntegrator self)"},
	 { "VectorFEDivergenceIntegrator_swigregister", VectorFEDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEDivergenceIntegrator_swiginit", VectorFEDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEWeakDivergenceIntegrator", _wrap_new_VectorFEWeakDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorFEWeakDivergenceIntegrator()\n"
		"new_VectorFEWeakDivergenceIntegrator(Coefficient q) -> VectorFEWeakDivergenceIntegrator\n"
		""},
	 { "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix(VectorFEWeakDivergenceIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2(VectorFEWeakDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorFEWeakDivergenceIntegrator", _wrap_delete_VectorFEWeakDivergenceIntegrator, METH_O, "delete_VectorFEWeakDivergenceIntegrator(VectorFEWeakDivergenceIntegrator self)"},
	 { "VectorFEWeakDivergenceIntegrator_swigregister", VectorFEWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEWeakDivergenceIntegrator_swiginit", VectorFEWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFECurlIntegrator", _wrap_new_VectorFECurlIntegrator, METH_VARARGS, "\n"
		"VectorFECurlIntegrator()\n"
		"new_VectorFECurlIntegrator(Coefficient q) -> VectorFECurlIntegrator\n"
		""},
	 { "VectorFECurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFECurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorFECurlIntegrator_AssembleElementMatrix(VectorFECurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFECurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFECurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorFECurlIntegrator_AssembleElementMatrix2(VectorFECurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorFECurlIntegrator", _wrap_delete_VectorFECurlIntegrator, METH_O, "delete_VectorFECurlIntegrator(VectorFECurlIntegrator self)"},
	 { "VectorFECurlIntegrator_swigregister", VectorFECurlIntegrator_swigregister, METH_O, NULL},
	 { "VectorFECurlIntegrator_swiginit", VectorFECurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DerivativeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_DerivativeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_DerivativeIntegrator(Coefficient q, int i) -> DerivativeIntegrator"},
	 { "DerivativeIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DerivativeIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "DerivativeIntegrator_AssembleElementMatrix(DerivativeIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DerivativeIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DerivativeIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "DerivativeIntegrator_AssembleElementMatrix2(DerivativeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_DerivativeIntegrator", _wrap_delete_DerivativeIntegrator, METH_O, "delete_DerivativeIntegrator(DerivativeIntegrator self)"},
	 { "DerivativeIntegrator_swigregister", DerivativeIntegrator_swigregister, METH_O, NULL},
	 { "DerivativeIntegrator_swiginit", DerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_CurlCurlIntegrator", _wrap_new_CurlCurlIntegrator, METH_VARARGS, "\n"
		"CurlCurlIntegrator()\n"
		"CurlCurlIntegrator(Coefficient q, IntegrationRule ir=None)\n"
		"CurlCurlIntegrator(VectorCoefficient dq, IntegrationRule ir=None)\n"
		"new_CurlCurlIntegrator(MatrixCoefficient mq, IntegrationRule ir=None) -> CurlCurlIntegrator\n"
		""},
	 { "CurlCurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_AssembleElementMatrix(CurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "CurlCurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_AssembleElementMatrix2(CurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "CurlCurlIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_ComputeElementFlux(CurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef, IntegrationRule ir=None)"},
	 { "CurlCurlIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_ComputeFluxEnergy(CurlCurlIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "CurlCurlIntegrator_AssemblePA", _wrap_CurlCurlIntegrator_AssemblePA, METH_VARARGS, "\n"
		"CurlCurlIntegrator_AssemblePA(CurlCurlIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"CurlCurlIntegrator_AssemblePA(CurlCurlIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "CurlCurlIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_AddMultPA(CurlCurlIntegrator self, Vector x, Vector y)"},
	 { "CurlCurlIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "CurlCurlIntegrator_AssembleDiagonalPA(CurlCurlIntegrator self, Vector diag)"},
	 { "CurlCurlIntegrator_GetCoefficient", _wrap_CurlCurlIntegrator_GetCoefficient, METH_O, "CurlCurlIntegrator_GetCoefficient(CurlCurlIntegrator self) -> Coefficient"},
	 { "delete_CurlCurlIntegrator", _wrap_delete_CurlCurlIntegrator, METH_O, "delete_CurlCurlIntegrator(CurlCurlIntegrator self)"},
	 { "CurlCurlIntegrator_swigregister", CurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "CurlCurlIntegrator_swiginit", CurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorCurlCurlIntegrator", _wrap_new_VectorCurlCurlIntegrator, METH_VARARGS, "\n"
		"VectorCurlCurlIntegrator()\n"
		"new_VectorCurlCurlIntegrator(Coefficient q) -> VectorCurlCurlIntegrator\n"
		""},
	 { "VectorCurlCurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorCurlCurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorCurlCurlIntegrator_AssembleElementMatrix(VectorCurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorCurlCurlIntegrator_GetElementEnergy", (PyCFunction)(void(*)(void))_wrap_VectorCurlCurlIntegrator_GetElementEnergy, METH_VARARGS|METH_KEYWORDS, "VectorCurlCurlIntegrator_GetElementEnergy(VectorCurlCurlIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun) -> double"},
	 { "delete_VectorCurlCurlIntegrator", _wrap_delete_VectorCurlCurlIntegrator, METH_O, "delete_VectorCurlCurlIntegrator(VectorCurlCurlIntegrator self)"},
	 { "VectorCurlCurlIntegrator_swigregister", VectorCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "VectorCurlCurlIntegrator_swiginit", VectorCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCurlIntegrator", _wrap_new_MixedCurlIntegrator, METH_VARARGS, "\n"
		"MixedCurlIntegrator()\n"
		"MixedCurlIntegrator(Coefficient q_)\n"
		"new_MixedCurlIntegrator(Coefficient q) -> MixedCurlIntegrator\n"
		""},
	 { "MixedCurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedCurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "MixedCurlIntegrator_AssembleElementMatrix2(MixedCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedCurlIntegrator", _wrap_delete_MixedCurlIntegrator, METH_O, "delete_MixedCurlIntegrator(MixedCurlIntegrator self)"},
	 { "MixedCurlIntegrator_swigregister", MixedCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCurlIntegrator_swiginit", MixedCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEMassIntegrator", _wrap_new_VectorFEMassIntegrator, METH_VARARGS, "\n"
		"VectorFEMassIntegrator()\n"
		"VectorFEMassIntegrator(Coefficient q_)\n"
		"VectorFEMassIntegrator(Coefficient q)\n"
		"VectorFEMassIntegrator(VectorCoefficient dq_)\n"
		"VectorFEMassIntegrator(VectorCoefficient dq)\n"
		"VectorFEMassIntegrator(MatrixCoefficient mq_)\n"
		"new_VectorFEMassIntegrator(MatrixCoefficient mq) -> VectorFEMassIntegrator\n"
		""},
	 { "VectorFEMassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorFEMassIntegrator_AssembleElementMatrix(VectorFEMassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEMassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorFEMassIntegrator_AssembleElementMatrix2(VectorFEMassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEMassIntegrator_AssemblePA", _wrap_VectorFEMassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"VectorFEMassIntegrator_AssemblePA(VectorFEMassIntegrator self, FiniteElementSpace fes)\n"
		"VectorFEMassIntegrator_AssemblePA(VectorFEMassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "VectorFEMassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "VectorFEMassIntegrator_AddMultPA(VectorFEMassIntegrator self, Vector x, Vector y)"},
	 { "VectorFEMassIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "VectorFEMassIntegrator_AddMultTransposePA(VectorFEMassIntegrator self, Vector x, Vector y)"},
	 { "VectorFEMassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "VectorFEMassIntegrator_AssembleDiagonalPA(VectorFEMassIntegrator self, Vector diag)"},
	 { "VectorFEMassIntegrator_GetCoefficient", _wrap_VectorFEMassIntegrator_GetCoefficient, METH_O, "VectorFEMassIntegrator_GetCoefficient(VectorFEMassIntegrator self) -> Coefficient"},
	 { "delete_VectorFEMassIntegrator", _wrap_delete_VectorFEMassIntegrator, METH_O, "delete_VectorFEMassIntegrator(VectorFEMassIntegrator self)"},
	 { "VectorFEMassIntegrator_swigregister", VectorFEMassIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEMassIntegrator_swiginit", VectorFEMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorDivergenceIntegrator", _wrap_new_VectorDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorDivergenceIntegrator()\n"
		"VectorDivergenceIntegrator(Coefficient q_)\n"
		"new_VectorDivergenceIntegrator(Coefficient q) -> VectorDivergenceIntegrator\n"
		""},
	 { "VectorDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorDivergenceIntegrator_AssembleElementMatrix2(VectorDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorDivergenceIntegrator_AssemblePA", _wrap_VectorDivergenceIntegrator_AssemblePA, METH_VARARGS, "\n"
		"VectorDivergenceIntegrator_AssemblePA(VectorDivergenceIntegrator self, FiniteElementSpace fes)\n"
		"VectorDivergenceIntegrator_AssemblePA(VectorDivergenceIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "VectorDivergenceIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "VectorDivergenceIntegrator_AddMultPA(VectorDivergenceIntegrator self, Vector x, Vector y)"},
	 { "VectorDivergenceIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "VectorDivergenceIntegrator_AddMultTransposePA(VectorDivergenceIntegrator self, Vector x, Vector y)"},
	 { "VectorDivergenceIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "VectorDivergenceIntegrator_GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "delete_VectorDivergenceIntegrator", _wrap_delete_VectorDivergenceIntegrator, METH_O, "delete_VectorDivergenceIntegrator(VectorDivergenceIntegrator self)"},
	 { "VectorDivergenceIntegrator_swigregister", VectorDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorDivergenceIntegrator_swiginit", VectorDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DivDivIntegrator", _wrap_new_DivDivIntegrator, METH_VARARGS, "\n"
		"DivDivIntegrator()\n"
		"new_DivDivIntegrator(Coefficient q, IntegrationRule ir=None) -> DivDivIntegrator\n"
		""},
	 { "DivDivIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DivDivIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "DivDivIntegrator_AssembleElementMatrix(DivDivIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DivDivIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DivDivIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "DivDivIntegrator_AssembleElementMatrix2(DivDivIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DivDivIntegrator_GetCoefficient", _wrap_DivDivIntegrator_GetCoefficient, METH_O, "DivDivIntegrator_GetCoefficient(DivDivIntegrator self) -> Coefficient"},
	 { "delete_DivDivIntegrator", _wrap_delete_DivDivIntegrator, METH_O, "delete_DivDivIntegrator(DivDivIntegrator self)"},
	 { "DivDivIntegrator_swigregister", DivDivIntegrator_swigregister, METH_O, NULL},
	 { "DivDivIntegrator_swiginit", DivDivIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorDiffusionIntegrator", _wrap_new_VectorDiffusionIntegrator, METH_VARARGS, "\n"
		"VectorDiffusionIntegrator()\n"
		"VectorDiffusionIntegrator(int vector_dimension)\n"
		"VectorDiffusionIntegrator(Coefficient q)\n"
		"VectorDiffusionIntegrator(Coefficient q, IntegrationRule ir)\n"
		"VectorDiffusionIntegrator(Coefficient q, int vector_dimension)\n"
		"VectorDiffusionIntegrator(VectorCoefficient vq)\n"
		"new_VectorDiffusionIntegrator(MatrixCoefficient mq) -> VectorDiffusionIntegrator\n"
		""},
	 { "VectorDiffusionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AssembleElementMatrix(VectorDiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorDiffusionIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AssembleElementVector(VectorDiffusionIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "VectorDiffusionIntegrator_AssemblePA", _wrap_VectorDiffusionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"VectorDiffusionIntegrator_AssemblePA(VectorDiffusionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"VectorDiffusionIntegrator_AssemblePA(VectorDiffusionIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "VectorDiffusionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AssembleMF(VectorDiffusionIntegrator self, FiniteElementSpace fes)"},
	 { "VectorDiffusionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AssembleDiagonalPA(VectorDiffusionIntegrator self, Vector diag)"},
	 { "VectorDiffusionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AssembleDiagonalMF(VectorDiffusionIntegrator self, Vector diag)"},
	 { "VectorDiffusionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AddMultPA(VectorDiffusionIntegrator self, Vector x, Vector y)"},
	 { "VectorDiffusionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "VectorDiffusionIntegrator_AddMultMF(VectorDiffusionIntegrator self, Vector x, Vector y)"},
	 { "VectorDiffusionIntegrator_SupportsCeed", _wrap_VectorDiffusionIntegrator_SupportsCeed, METH_O, "VectorDiffusionIntegrator_SupportsCeed(VectorDiffusionIntegrator self) -> bool"},
	 { "delete_VectorDiffusionIntegrator", _wrap_delete_VectorDiffusionIntegrator, METH_O, "delete_VectorDiffusionIntegrator(VectorDiffusionIntegrator self)"},
	 { "VectorDiffusionIntegrator_swigregister", VectorDiffusionIntegrator_swigregister, METH_O, NULL},
	 { "VectorDiffusionIntegrator_swiginit", VectorDiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ElasticityIntegrator", _wrap_new_ElasticityIntegrator, METH_VARARGS, "\n"
		"ElasticityIntegrator(Coefficient l, Coefficient m)\n"
		"new_ElasticityIntegrator(Coefficient m, double q_l, double q_m) -> ElasticityIntegrator\n"
		""},
	 { "ElasticityIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "ElasticityIntegrator_AssembleElementMatrix(ElasticityIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "ElasticityIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "ElasticityIntegrator_ComputeElementFlux(ElasticityIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "ElasticityIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "ElasticityIntegrator_ComputeFluxEnergy(ElasticityIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "delete_ElasticityIntegrator", _wrap_delete_ElasticityIntegrator, METH_O, "delete_ElasticityIntegrator(ElasticityIntegrator self)"},
	 { "ElasticityIntegrator_swigregister", ElasticityIntegrator_swigregister, METH_O, NULL},
	 { "ElasticityIntegrator_swiginit", ElasticityIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGTraceIntegrator", _wrap_new_DGTraceIntegrator, METH_VARARGS, "\n"
		"DGTraceIntegrator(VectorCoefficient u_, double a)\n"
		"DGTraceIntegrator(VectorCoefficient u_, double a, double b)\n"
		"new_DGTraceIntegrator(Coefficient rho_, VectorCoefficient u_, double a, double b) -> DGTraceIntegrator\n"
		""},
	 { "DGTraceIntegrator_AssembleFaceMatrix", _wrap_DGTraceIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"DGTraceIntegrator_AssembleFaceMatrix(DGTraceIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"DGTraceIntegrator_AssembleFaceMatrix(DGTraceIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "DGTraceIntegrator_AssemblePA", _wrap_DGTraceIntegrator_AssemblePA, METH_VARARGS, "\n"
		"DGTraceIntegrator_AssemblePA(DGTraceIntegrator self, FiniteElementSpace fes)\n"
		"DGTraceIntegrator_AssemblePA(DGTraceIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "DGTraceIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AssemblePAInteriorFaces(DGTraceIntegrator self, FiniteElementSpace fes)"},
	 { "DGTraceIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AssemblePABoundaryFaces(DGTraceIntegrator self, FiniteElementSpace fes)"},
	 { "DGTraceIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AddMultTransposePA(DGTraceIntegrator self, Vector x, Vector y)"},
	 { "DGTraceIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AddMultPA(DGTraceIntegrator self, Vector arg2, Vector arg3)"},
	 { "DGTraceIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AssembleEAInteriorFaces(DGTraceIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "DGTraceIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_AssembleEABoundaryFaces(DGTraceIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "DGTraceIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "DGTraceIntegrator_GetRule(mfem::Geometry::Type geom, int order, FaceElementTransformations T) -> IntegrationRule"},
	 { "delete_DGTraceIntegrator", _wrap_delete_DGTraceIntegrator, METH_O, "delete_DGTraceIntegrator(DGTraceIntegrator self)"},
	 { "DGTraceIntegrator_swigregister", DGTraceIntegrator_swigregister, METH_O, NULL},
	 { "DGTraceIntegrator_swiginit", DGTraceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_NonconservativeDGTraceIntegrator", _wrap_new_NonconservativeDGTraceIntegrator, METH_VARARGS, "\n"
		"NonconservativeDGTraceIntegrator(VectorCoefficient u, double a)\n"
		"NonconservativeDGTraceIntegrator(VectorCoefficient u, double a, double b)\n"
		"new_NonconservativeDGTraceIntegrator(Coefficient rho, VectorCoefficient u, double a, double b) -> NonconservativeDGTraceIntegrator\n"
		""},
	 { "delete_NonconservativeDGTraceIntegrator", _wrap_delete_NonconservativeDGTraceIntegrator, METH_O, "delete_NonconservativeDGTraceIntegrator(NonconservativeDGTraceIntegrator self)"},
	 { "NonconservativeDGTraceIntegrator_swigregister", NonconservativeDGTraceIntegrator_swigregister, METH_O, NULL},
	 { "NonconservativeDGTraceIntegrator_swiginit", NonconservativeDGTraceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGDiffusionIntegrator", _wrap_new_DGDiffusionIntegrator, METH_VARARGS, "\n"
		"DGDiffusionIntegrator(double const s, double const k)\n"
		"DGDiffusionIntegrator(Coefficient q, double const s, double const k)\n"
		"new_DGDiffusionIntegrator(MatrixCoefficient q, double const s, double const k) -> DGDiffusionIntegrator\n"
		""},
	 { "DGDiffusionIntegrator_AssembleFaceMatrix", _wrap_DGDiffusionIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"DGDiffusionIntegrator_AssembleFaceMatrix(DGDiffusionIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"DGDiffusionIntegrator_AssembleFaceMatrix(DGDiffusionIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGDiffusionIntegrator", _wrap_delete_DGDiffusionIntegrator, METH_O, "delete_DGDiffusionIntegrator(DGDiffusionIntegrator self)"},
	 { "DGDiffusionIntegrator_swigregister", DGDiffusionIntegrator_swigregister, METH_O, NULL},
	 { "DGDiffusionIntegrator_swiginit", DGDiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGDiffusionBR2Integrator", _wrap_new_DGDiffusionBR2Integrator, METH_VARARGS, "\n"
		"DGDiffusionBR2Integrator(FiniteElementSpace fes, double e=1.0)\n"
		"DGDiffusionBR2Integrator(FiniteElementSpace fes, Coefficient Q_, double e=1.0)\n"
		"new_DGDiffusionBR2Integrator(FiniteElementSpace fes, double e=1.0) -> DGDiffusionBR2Integrator\n"
		""},
	 { "DGDiffusionBR2Integrator_AssembleFaceMatrix", _wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"DGDiffusionBR2Integrator_AssembleFaceMatrix(DGDiffusionBR2Integrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"DGDiffusionBR2Integrator_AssembleFaceMatrix(DGDiffusionBR2Integrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGDiffusionBR2Integrator", _wrap_delete_DGDiffusionBR2Integrator, METH_O, "delete_DGDiffusionBR2Integrator(DGDiffusionBR2Integrator self)"},
	 { "DGDiffusionBR2Integrator_swigregister", DGDiffusionBR2Integrator_swigregister, METH_O, NULL},
	 { "DGDiffusionBR2Integrator_swiginit", DGDiffusionBR2Integrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGElasticityIntegrator", _wrap_new_DGElasticityIntegrator, METH_VARARGS, "\n"
		"DGElasticityIntegrator(double alpha_, double kappa_)\n"
		"new_DGElasticityIntegrator(Coefficient lambda_, Coefficient mu_, double alpha_, double kappa_) -> DGElasticityIntegrator\n"
		""},
	 { "DGElasticityIntegrator_AssembleFaceMatrix", _wrap_DGElasticityIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"DGElasticityIntegrator_AssembleFaceMatrix(DGElasticityIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"DGElasticityIntegrator_AssembleFaceMatrix(DGElasticityIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGElasticityIntegrator", _wrap_delete_DGElasticityIntegrator, METH_O, "delete_DGElasticityIntegrator(DGElasticityIntegrator self)"},
	 { "DGElasticityIntegrator_swigregister", DGElasticityIntegrator_swigregister, METH_O, NULL},
	 { "DGElasticityIntegrator_swiginit", DGElasticityIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_TraceJumpIntegrator", _wrap_new_TraceJumpIntegrator, METH_NOARGS, "new_TraceJumpIntegrator() -> TraceJumpIntegrator"},
	 { "TraceJumpIntegrator_AssembleFaceMatrix", _wrap_TraceJumpIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"TraceJumpIntegrator_AssembleFaceMatrix(TraceJumpIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"TraceJumpIntegrator_AssembleFaceMatrix(TraceJumpIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_TraceJumpIntegrator", _wrap_delete_TraceJumpIntegrator, METH_O, "delete_TraceJumpIntegrator(TraceJumpIntegrator self)"},
	 { "TraceJumpIntegrator_swigregister", TraceJumpIntegrator_swigregister, METH_O, NULL},
	 { "TraceJumpIntegrator_swiginit", TraceJumpIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_NormalTraceJumpIntegrator", _wrap_new_NormalTraceJumpIntegrator, METH_NOARGS, "new_NormalTraceJumpIntegrator() -> NormalTraceJumpIntegrator"},
	 { "NormalTraceJumpIntegrator_AssembleFaceMatrix", _wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"NormalTraceJumpIntegrator_AssembleFaceMatrix(NormalTraceJumpIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"NormalTraceJumpIntegrator_AssembleFaceMatrix(NormalTraceJumpIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_NormalTraceJumpIntegrator", _wrap_delete_NormalTraceJumpIntegrator, METH_O, "delete_NormalTraceJumpIntegrator(NormalTraceJumpIntegrator self)"},
	 { "NormalTraceJumpIntegrator_swigregister", NormalTraceJumpIntegrator_swigregister, METH_O, NULL},
	 { "NormalTraceJumpIntegrator_swiginit", NormalTraceJumpIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DiscreteInterpolator", _wrap_new_DiscreteInterpolator, METH_NOARGS, "new_DiscreteInterpolator() -> DiscreteInterpolator"},
	 { "delete_DiscreteInterpolator", _wrap_delete_DiscreteInterpolator, METH_O, "delete_DiscreteInterpolator(DiscreteInterpolator self)"},
	 { "DiscreteInterpolator_swigregister", DiscreteInterpolator_swigregister, METH_O, NULL},
	 { "DiscreteInterpolator_swiginit", DiscreteInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_GradientInterpolator", _wrap_new_GradientInterpolator, METH_NOARGS, "new_GradientInterpolator() -> GradientInterpolator"},
	 { "delete_GradientInterpolator", _wrap_delete_GradientInterpolator, METH_O, "delete_GradientInterpolator(GradientInterpolator self)"},
	 { "GradientInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "GradientInterpolator_AssembleElementMatrix2(GradientInterpolator self, FiniteElement h1_fe, FiniteElement nd_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "GradientInterpolator_AssemblePA", _wrap_GradientInterpolator_AssemblePA, METH_VARARGS, "\n"
		"GradientInterpolator_AssemblePA(GradientInterpolator self, FiniteElementSpace fes)\n"
		"GradientInterpolator_AssemblePA(GradientInterpolator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "GradientInterpolator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "GradientInterpolator_AddMultPA(GradientInterpolator self, Vector x, Vector y)"},
	 { "GradientInterpolator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "GradientInterpolator_AddMultTransposePA(GradientInterpolator self, Vector x, Vector y)"},
	 { "GradientInterpolator_swigregister", GradientInterpolator_swigregister, METH_O, NULL},
	 { "GradientInterpolator_swiginit", GradientInterpolator_swiginit, METH_VARARGS, NULL},
	 { "IdentityInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "IdentityInterpolator_AssembleElementMatrix2(IdentityInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "IdentityInterpolator_AssemblePA", _wrap_IdentityInterpolator_AssemblePA, METH_VARARGS, "\n"
		"IdentityInterpolator_AssemblePA(IdentityInterpolator self, FiniteElementSpace fes)\n"
		"IdentityInterpolator_AssemblePA(IdentityInterpolator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "IdentityInterpolator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "IdentityInterpolator_AddMultPA(IdentityInterpolator self, Vector x, Vector y)"},
	 { "IdentityInterpolator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "IdentityInterpolator_AddMultTransposePA(IdentityInterpolator self, Vector x, Vector y)"},
	 { "new_IdentityInterpolator", _wrap_new_IdentityInterpolator, METH_NOARGS, "new_IdentityInterpolator() -> IdentityInterpolator"},
	 { "delete_IdentityInterpolator", _wrap_delete_IdentityInterpolator, METH_O, "delete_IdentityInterpolator(IdentityInterpolator self)"},
	 { "IdentityInterpolator_swigregister", IdentityInterpolator_swigregister, METH_O, NULL},
	 { "IdentityInterpolator_swiginit", IdentityInterpolator_swiginit, METH_VARARGS, NULL},
	 { "CurlInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_CurlInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "CurlInterpolator_AssembleElementMatrix2(CurlInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_CurlInterpolator", _wrap_new_CurlInterpolator, METH_NOARGS, "new_CurlInterpolator() -> CurlInterpolator"},
	 { "delete_CurlInterpolator", _wrap_delete_CurlInterpolator, METH_O, "delete_CurlInterpolator(CurlInterpolator self)"},
	 { "CurlInterpolator_swigregister", CurlInterpolator_swigregister, METH_O, NULL},
	 { "CurlInterpolator_swiginit", CurlInterpolator_swiginit, METH_VARARGS, NULL},
	 { "DivergenceInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DivergenceInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "DivergenceInterpolator_AssembleElementMatrix2(DivergenceInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_DivergenceInterpolator", _wrap_new_DivergenceInterpolator, METH_NOARGS, "new_DivergenceInterpolator() -> DivergenceInterpolator"},
	 { "delete_DivergenceInterpolator", _wrap_delete_DivergenceInterpolator, METH_O, "delete_DivergenceInterpolator(DivergenceInterpolator self)"},
	 { "DivergenceInterpolator_swigregister", DivergenceInterpolator_swigregister, METH_O, NULL},
	 { "DivergenceInterpolator_swiginit", DivergenceInterpolator_swiginit, METH_VARARGS, NULL},
	 { "NormalInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_NormalInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "NormalInterpolator_AssembleElementMatrix2(NormalInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_NormalInterpolator", _wrap_new_NormalInterpolator, METH_NOARGS, "new_NormalInterpolator() -> NormalInterpolator"},
	 { "delete_NormalInterpolator", _wrap_delete_NormalInterpolator, METH_O, "delete_NormalInterpolator(NormalInterpolator self)"},
	 { "NormalInterpolator_swigregister", NormalInterpolator_swigregister, METH_O, NULL},
	 { "NormalInterpolator_swiginit", NormalInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarProductInterpolator(Coefficient sc) -> ScalarProductInterpolator"},
	 { "ScalarProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "ScalarProductInterpolator_AssembleElementMatrix2(ScalarProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarProductInterpolator", _wrap_delete_ScalarProductInterpolator, METH_O, "delete_ScalarProductInterpolator(ScalarProductInterpolator self)"},
	 { "ScalarProductInterpolator_swigregister", ScalarProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarProductInterpolator_swiginit", ScalarProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarVectorProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarVectorProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarVectorProductInterpolator(Coefficient sc) -> ScalarVectorProductInterpolator"},
	 { "ScalarVectorProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarVectorProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "ScalarVectorProductInterpolator_AssembleElementMatrix2(ScalarVectorProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarVectorProductInterpolator", _wrap_delete_ScalarVectorProductInterpolator, METH_O, "delete_ScalarVectorProductInterpolator(ScalarVectorProductInterpolator self)"},
	 { "ScalarVectorProductInterpolator_swigregister", ScalarVectorProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarVectorProductInterpolator_swiginit", ScalarVectorProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorScalarProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorScalarProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorScalarProductInterpolator(VectorCoefficient vc) -> VectorScalarProductInterpolator"},
	 { "VectorScalarProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorScalarProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorScalarProductInterpolator_AssembleElementMatrix2(VectorScalarProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorScalarProductInterpolator", _wrap_delete_VectorScalarProductInterpolator, METH_O, "delete_VectorScalarProductInterpolator(VectorScalarProductInterpolator self)"},
	 { "VectorScalarProductInterpolator_swigregister", VectorScalarProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorScalarProductInterpolator_swiginit", VectorScalarProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarCrossProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarCrossProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarCrossProductInterpolator(VectorCoefficient vc) -> ScalarCrossProductInterpolator"},
	 { "ScalarCrossProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarCrossProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "ScalarCrossProductInterpolator_AssembleElementMatrix2(ScalarCrossProductInterpolator self, FiniteElement nd_fe, FiniteElement l2_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarCrossProductInterpolator", _wrap_delete_ScalarCrossProductInterpolator, METH_O, "delete_ScalarCrossProductInterpolator(ScalarCrossProductInterpolator self)"},
	 { "ScalarCrossProductInterpolator_swigregister", ScalarCrossProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarCrossProductInterpolator_swiginit", ScalarCrossProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorCrossProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorCrossProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorCrossProductInterpolator(VectorCoefficient vc) -> VectorCrossProductInterpolator"},
	 { "VectorCrossProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorCrossProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorCrossProductInterpolator_AssembleElementMatrix2(VectorCrossProductInterpolator self, FiniteElement nd_fe, FiniteElement rt_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorCrossProductInterpolator", _wrap_delete_VectorCrossProductInterpolator, METH_O, "delete_VectorCrossProductInterpolator(VectorCrossProductInterpolator self)"},
	 { "VectorCrossProductInterpolator_swigregister", VectorCrossProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorCrossProductInterpolator_swiginit", VectorCrossProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorInnerProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorInnerProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorInnerProductInterpolator(VectorCoefficient vc) -> VectorInnerProductInterpolator"},
	 { "VectorInnerProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorInnerProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "VectorInnerProductInterpolator_AssembleElementMatrix2(VectorInnerProductInterpolator self, FiniteElement rt_fe, FiniteElement l2_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorInnerProductInterpolator", _wrap_delete_VectorInnerProductInterpolator, METH_O, "delete_VectorInnerProductInterpolator(VectorInnerProductInterpolator self)"},
	 { "VectorInnerProductInterpolator_swigregister", VectorInnerProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorInnerProductInterpolator_swiginit", VectorInnerProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "new_BilinearFormIntegrator", (PyCFunction)(void(*)(void))_wrap_new_BilinearFormIntegrator, METH_VARARGS|METH_KEYWORDS, "new_BilinearFormIntegrator(PyObject * _self, IntegrationRule ir=None) -> BilinearFormIntegrator"},
	 { "BilinearFormIntegrator_AssemblePA", _wrap_BilinearFormIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(BilinearFormIntegrator self, FiniteElementSpace fes)\n"
		"AssemblePA(BilinearFormIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "BilinearFormIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePAInteriorFaces(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePABoundaryFaces(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(BilinearFormIntegrator self, Vector diag)"},
	 { "BilinearFormIntegrator_AssembleDiagonalPA_ADAt", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalPA_ADAt, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA_ADAt(BilinearFormIntegrator self, Vector D, Vector diag)"},
	 { "BilinearFormIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(BilinearFormIntegrator self, FiniteElementSpace fes, Vector emat, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(BilinearFormIntegrator self, FiniteElementSpace fes)"},
	 { "BilinearFormIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AddMultTransposeMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AddMultTransposeMF, METH_VARARGS|METH_KEYWORDS, "AddMultTransposeMF(BilinearFormIntegrator self, Vector x, Vector y)"},
	 { "BilinearFormIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(BilinearFormIntegrator self, Vector diag)"},
	 { "BilinearFormIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEAInteriorFaces(BilinearFormIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEABoundaryFaces(BilinearFormIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add=True)"},
	 { "BilinearFormIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(BilinearFormIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleFaceMatrix", _wrap_BilinearFormIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(BilinearFormIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "BilinearFormIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "AssembleElementVector(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "BilinearFormIntegrator_AssembleFaceVector", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleFaceVector, METH_VARARGS|METH_KEYWORDS, "AssembleFaceVector(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Tr, Vector elfun, Vector elvect)"},
	 { "BilinearFormIntegrator_AssembleElementGrad", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleElementGrad, METH_VARARGS|METH_KEYWORDS, "AssembleElementGrad(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_AssembleFaceGrad", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_AssembleFaceGrad, METH_VARARGS|METH_KEYWORDS, "AssembleFaceGrad(BilinearFormIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Tr, Vector elfun, DenseMatrix elmat)"},
	 { "BilinearFormIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "ComputeElementFlux(BilinearFormIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "BilinearFormIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_BilinearFormIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "ComputeFluxEnergy(BilinearFormIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "delete_BilinearFormIntegrator", _wrap_delete_BilinearFormIntegrator, METH_O, "delete_BilinearFormIntegrator(BilinearFormIntegrator self)"},
	 { "disown_BilinearFormIntegrator", (PyCFunction)(void(*)(void))_wrap_disown_BilinearFormIntegrator, METH_VARARGS|METH_KEYWORDS, NULL},
	 { "BilinearFormIntegrator_swigregister", BilinearFormIntegrator_swigregister, METH_O, NULL},
	 { "BilinearFormIntegrator_swiginit", BilinearFormIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_TransposeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_TransposeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_TransposeIntegrator(BilinearFormIntegrator bfi_, int own_bfi_=1) -> TransposeIntegrator"},
	 { "TransposeIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "SetIntRule(TransposeIntegrator self, IntegrationRule ir)"},
	 { "TransposeIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(TransposeIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "TransposeIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(TransposeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "TransposeIntegrator_AssembleFaceMatrix", _wrap_TransposeIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(TransposeIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(TransposeIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "TransposeIntegrator_AssemblePA", _wrap_TransposeIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(TransposeIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(TransposeIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "TransposeIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePAInteriorFaces(TransposeIntegrator self, FiniteElementSpace fes)"},
	 { "TransposeIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePABoundaryFaces(TransposeIntegrator self, FiniteElementSpace fes)"},
	 { "TransposeIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(TransposeIntegrator self, Vector x, Vector y)"},
	 { "TransposeIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(TransposeIntegrator self, Vector x, Vector y)"},
	 { "TransposeIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(TransposeIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "TransposeIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEAInteriorFaces(TransposeIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "TransposeIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_TransposeIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEABoundaryFaces(TransposeIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "delete_TransposeIntegrator", _wrap_delete_TransposeIntegrator, METH_O, "delete_TransposeIntegrator(TransposeIntegrator self)"},
	 { "TransposeIntegrator_swigregister", TransposeIntegrator_swigregister, METH_O, NULL},
	 { "TransposeIntegrator_swiginit", TransposeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_LumpedIntegrator", (PyCFunction)(void(*)(void))_wrap_new_LumpedIntegrator, METH_VARARGS|METH_KEYWORDS, "new_LumpedIntegrator(BilinearFormIntegrator bfi_, int own_bfi_=1) -> LumpedIntegrator"},
	 { "LumpedIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_LumpedIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "SetIntRule(LumpedIntegrator self, IntegrationRule ir)"},
	 { "LumpedIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_LumpedIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(LumpedIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_LumpedIntegrator", _wrap_delete_LumpedIntegrator, METH_O, "delete_LumpedIntegrator(LumpedIntegrator self)"},
	 { "LumpedIntegrator_swigregister", LumpedIntegrator_swigregister, METH_O, NULL},
	 { "LumpedIntegrator_swiginit", LumpedIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_InverseIntegrator", (PyCFunction)(void(*)(void))_wrap_new_InverseIntegrator, METH_VARARGS|METH_KEYWORDS, "new_InverseIntegrator(BilinearFormIntegrator integ, int own_integ=1) -> InverseIntegrator"},
	 { "InverseIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_InverseIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "SetIntRule(InverseIntegrator self, IntegrationRule ir)"},
	 { "InverseIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_InverseIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(InverseIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_InverseIntegrator", _wrap_delete_InverseIntegrator, METH_O, "delete_InverseIntegrator(InverseIntegrator self)"},
	 { "InverseIntegrator_swigregister", InverseIntegrator_swigregister, METH_O, NULL},
	 { "InverseIntegrator_swiginit", InverseIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_SumIntegrator", (PyCFunction)(void(*)(void))_wrap_new_SumIntegrator, METH_VARARGS|METH_KEYWORDS, "new_SumIntegrator(int own_integs=1) -> SumIntegrator"},
	 { "SumIntegrator_SetIntRule", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_SetIntRule, METH_VARARGS|METH_KEYWORDS, "SetIntRule(SumIntegrator self, IntegrationRule ir)"},
	 { "SumIntegrator_AddIntegrator", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddIntegrator, METH_VARARGS|METH_KEYWORDS, "AddIntegrator(SumIntegrator self, BilinearFormIntegrator integ)"},
	 { "SumIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(SumIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "SumIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(SumIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "SumIntegrator_AssembleFaceMatrix", _wrap_SumIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(SumIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(SumIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "SumIntegrator_AssemblePA", _wrap_SumIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(SumIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(SumIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "SumIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(SumIntegrator self, Vector diag)"},
	 { "SumIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePAInteriorFaces(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePABoundaryFaces(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(SumIntegrator self, FiniteElementSpace fes)"},
	 { "SumIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AddMultTransposeMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AddMultTransposeMF, METH_VARARGS|METH_KEYWORDS, "AddMultTransposeMF(SumIntegrator self, Vector x, Vector y)"},
	 { "SumIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(SumIntegrator self, Vector diag)"},
	 { "SumIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(SumIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "SumIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEAInteriorFaces(SumIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "SumIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_SumIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEABoundaryFaces(SumIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "delete_SumIntegrator", _wrap_delete_SumIntegrator, METH_O, "delete_SumIntegrator(SumIntegrator self)"},
	 { "SumIntegrator_swigregister", SumIntegrator_swigregister, METH_O, NULL},
	 { "SumIntegrator_swiginit", SumIntegrator_swiginit, METH_VARARGS, NULL},
	 { "MixedScalarIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedScalarIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(MixedScalarIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedScalarIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedScalarIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(MixedScalarIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedScalarIntegrator", _wrap_delete_MixedScalarIntegrator, METH_O, "delete_MixedScalarIntegrator(MixedScalarIntegrator self)"},
	 { "MixedScalarIntegrator_swigregister", MixedScalarIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedVectorIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(MixedVectorIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedVectorIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedVectorIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(MixedVectorIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedVectorIntegrator", _wrap_delete_MixedVectorIntegrator, METH_O, "delete_MixedVectorIntegrator(MixedVectorIntegrator self)"},
	 { "MixedVectorIntegrator_swigregister", MixedVectorIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarVectorIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(MixedScalarVectorIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MixedScalarVectorIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MixedScalarVectorIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(MixedScalarVectorIntegrator self, FiniteElement fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedScalarVectorIntegrator", _wrap_delete_MixedScalarVectorIntegrator, METH_O, "delete_MixedScalarVectorIntegrator(MixedScalarVectorIntegrator self)"},
	 { "MixedScalarVectorIntegrator_swigregister", MixedScalarVectorIntegrator_swigregister, METH_O, NULL},
	 { "new_MixedScalarMassIntegrator", _wrap_new_MixedScalarMassIntegrator, METH_VARARGS, "\n"
		"MixedScalarMassIntegrator()\n"
		"new_MixedScalarMassIntegrator(Coefficient q) -> MixedScalarMassIntegrator\n"
		""},
	 { "delete_MixedScalarMassIntegrator", _wrap_delete_MixedScalarMassIntegrator, METH_O, "delete_MixedScalarMassIntegrator(MixedScalarMassIntegrator self)"},
	 { "MixedScalarMassIntegrator_swigregister", MixedScalarMassIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarMassIntegrator_swiginit", MixedScalarMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedVectorProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedVectorProductIntegrator(VectorCoefficient vq) -> MixedVectorProductIntegrator"},
	 { "delete_MixedVectorProductIntegrator", _wrap_delete_MixedVectorProductIntegrator, METH_O, "delete_MixedVectorProductIntegrator(MixedVectorProductIntegrator self)"},
	 { "MixedVectorProductIntegrator_swigregister", MixedVectorProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorProductIntegrator_swiginit", MixedVectorProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarDerivativeIntegrator", _wrap_new_MixedScalarDerivativeIntegrator, METH_VARARGS, "\n"
		"MixedScalarDerivativeIntegrator()\n"
		"new_MixedScalarDerivativeIntegrator(Coefficient q) -> MixedScalarDerivativeIntegrator\n"
		""},
	 { "delete_MixedScalarDerivativeIntegrator", _wrap_delete_MixedScalarDerivativeIntegrator, METH_O, "delete_MixedScalarDerivativeIntegrator(MixedScalarDerivativeIntegrator self)"},
	 { "MixedScalarDerivativeIntegrator_swigregister", MixedScalarDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarDerivativeIntegrator_swiginit", MixedScalarDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakDerivativeIntegrator", _wrap_new_MixedScalarWeakDerivativeIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakDerivativeIntegrator()\n"
		"new_MixedScalarWeakDerivativeIntegrator(Coefficient q) -> MixedScalarWeakDerivativeIntegrator\n"
		""},
	 { "delete_MixedScalarWeakDerivativeIntegrator", _wrap_delete_MixedScalarWeakDerivativeIntegrator, METH_O, "delete_MixedScalarWeakDerivativeIntegrator(MixedScalarWeakDerivativeIntegrator self)"},
	 { "MixedScalarWeakDerivativeIntegrator_swigregister", MixedScalarWeakDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakDerivativeIntegrator_swiginit", MixedScalarWeakDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarDivergenceIntegrator", _wrap_new_MixedScalarDivergenceIntegrator, METH_VARARGS, "\n"
		"MixedScalarDivergenceIntegrator()\n"
		"new_MixedScalarDivergenceIntegrator(Coefficient q) -> MixedScalarDivergenceIntegrator\n"
		""},
	 { "delete_MixedScalarDivergenceIntegrator", _wrap_delete_MixedScalarDivergenceIntegrator, METH_O, "delete_MixedScalarDivergenceIntegrator(MixedScalarDivergenceIntegrator self)"},
	 { "MixedScalarDivergenceIntegrator_swigregister", MixedScalarDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarDivergenceIntegrator_swiginit", MixedScalarDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorDivergenceIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedVectorDivergenceIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedVectorDivergenceIntegrator(VectorCoefficient vq) -> MixedVectorDivergenceIntegrator"},
	 { "delete_MixedVectorDivergenceIntegrator", _wrap_delete_MixedVectorDivergenceIntegrator, METH_O, "delete_MixedVectorDivergenceIntegrator(MixedVectorDivergenceIntegrator self)"},
	 { "MixedVectorDivergenceIntegrator_swigregister", MixedVectorDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorDivergenceIntegrator_swiginit", MixedVectorDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakGradientIntegrator", _wrap_new_MixedScalarWeakGradientIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakGradientIntegrator()\n"
		"new_MixedScalarWeakGradientIntegrator(Coefficient q) -> MixedScalarWeakGradientIntegrator\n"
		""},
	 { "delete_MixedScalarWeakGradientIntegrator", _wrap_delete_MixedScalarWeakGradientIntegrator, METH_O, "delete_MixedScalarWeakGradientIntegrator(MixedScalarWeakGradientIntegrator self)"},
	 { "MixedScalarWeakGradientIntegrator_swigregister", MixedScalarWeakGradientIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakGradientIntegrator_swiginit", MixedScalarWeakGradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCurlIntegrator", _wrap_new_MixedScalarCurlIntegrator, METH_VARARGS, "\n"
		"MixedScalarCurlIntegrator()\n"
		"new_MixedScalarCurlIntegrator(Coefficient q) -> MixedScalarCurlIntegrator\n"
		""},
	 { "delete_MixedScalarCurlIntegrator", _wrap_delete_MixedScalarCurlIntegrator, METH_O, "delete_MixedScalarCurlIntegrator(MixedScalarCurlIntegrator self)"},
	 { "MixedScalarCurlIntegrator_swigregister", MixedScalarCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCurlIntegrator_swiginit", MixedScalarCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCurlIntegrator", _wrap_new_MixedScalarWeakCurlIntegrator, METH_VARARGS, "\n"
		"MixedScalarWeakCurlIntegrator()\n"
		"new_MixedScalarWeakCurlIntegrator(Coefficient q) -> MixedScalarWeakCurlIntegrator\n"
		""},
	 { "delete_MixedScalarWeakCurlIntegrator", _wrap_delete_MixedScalarWeakCurlIntegrator, METH_O, "delete_MixedScalarWeakCurlIntegrator(MixedScalarWeakCurlIntegrator self)"},
	 { "MixedScalarWeakCurlIntegrator_swigregister", MixedScalarWeakCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCurlIntegrator_swiginit", MixedScalarWeakCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorMassIntegrator", _wrap_new_MixedVectorMassIntegrator, METH_VARARGS, "\n"
		"MixedVectorMassIntegrator()\n"
		"MixedVectorMassIntegrator(Coefficient q)\n"
		"MixedVectorMassIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorMassIntegrator(MatrixCoefficient mq) -> MixedVectorMassIntegrator\n"
		""},
	 { "delete_MixedVectorMassIntegrator", _wrap_delete_MixedVectorMassIntegrator, METH_O, "delete_MixedVectorMassIntegrator(MixedVectorMassIntegrator self)"},
	 { "MixedVectorMassIntegrator_swigregister", MixedVectorMassIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorMassIntegrator_swiginit", MixedVectorMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossProductIntegrator(VectorCoefficient vq) -> MixedCrossProductIntegrator"},
	 { "delete_MixedCrossProductIntegrator", _wrap_delete_MixedCrossProductIntegrator, METH_O, "delete_MixedCrossProductIntegrator(MixedCrossProductIntegrator self)"},
	 { "MixedCrossProductIntegrator_swigregister", MixedCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossProductIntegrator_swiginit", MixedCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDotProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDotProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDotProductIntegrator(VectorCoefficient vq) -> MixedDotProductIntegrator"},
	 { "MixedDotProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDotProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedDotProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDotProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDotProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedDotProductIntegrator self) -> char const *"},
	 { "delete_MixedDotProductIntegrator", _wrap_delete_MixedDotProductIntegrator, METH_O, "delete_MixedDotProductIntegrator(MixedDotProductIntegrator self)"},
	 { "MixedDotProductIntegrator_swigregister", MixedDotProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedDotProductIntegrator_swiginit", MixedDotProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakGradDotIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakGradDotIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakGradDotIntegrator(VectorCoefficient vq) -> MixedWeakGradDotIntegrator"},
	 { "MixedWeakGradDotIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedWeakGradDotIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakGradDotIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedWeakGradDotIntegrator self) -> char const *"},
	 { "MixedWeakGradDotIntegrator_GetIntegrationOrder", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_GetIntegrationOrder, METH_VARARGS|METH_KEYWORDS, "GetIntegrationOrder(MixedWeakGradDotIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> int"},
	 { "MixedWeakGradDotIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakGradDotIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedWeakGradDotIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedWeakGradDotIntegrator", _wrap_delete_MixedWeakGradDotIntegrator, METH_O, "delete_MixedWeakGradDotIntegrator(MixedWeakGradDotIntegrator self)"},
	 { "MixedWeakGradDotIntegrator_swigregister", MixedWeakGradDotIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakGradDotIntegrator_swiginit", MixedWeakGradDotIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakDivCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakDivCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakDivCrossIntegrator(VectorCoefficient vq) -> MixedWeakDivCrossIntegrator"},
	 { "MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedWeakDivCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakDivCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedWeakDivCrossIntegrator self) -> char const *"},
	 { "MixedWeakDivCrossIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedWeakDivCrossIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedWeakDivCrossIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakDivCrossIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedWeakDivCrossIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedWeakDivCrossIntegrator", _wrap_delete_MixedWeakDivCrossIntegrator, METH_O, "delete_MixedWeakDivCrossIntegrator(MixedWeakDivCrossIntegrator self)"},
	 { "MixedWeakDivCrossIntegrator_swigregister", MixedWeakDivCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakDivCrossIntegrator_swiginit", MixedWeakDivCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedGradGradIntegrator", _wrap_new_MixedGradGradIntegrator, METH_VARARGS, "\n"
		"MixedGradGradIntegrator()\n"
		"MixedGradGradIntegrator(Coefficient q)\n"
		"MixedGradGradIntegrator(VectorCoefficient dq)\n"
		"new_MixedGradGradIntegrator(MatrixCoefficient mq) -> MixedGradGradIntegrator\n"
		""},
	 { "MixedGradGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedGradGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedGradGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedGradGradIntegrator self) -> char const *"},
	 { "MixedGradGradIntegrator_GetIntegrationOrder", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetIntegrationOrder, METH_VARARGS|METH_KEYWORDS, "GetIntegrationOrder(MixedGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> int"},
	 { "MixedGradGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedGradGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedGradGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedGradGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedGradGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedGradGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedGradGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedGradGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedGradGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedGradGradIntegrator", _wrap_delete_MixedGradGradIntegrator, METH_O, "delete_MixedGradGradIntegrator(MixedGradGradIntegrator self)"},
	 { "MixedGradGradIntegrator_swigregister", MixedGradGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedGradGradIntegrator_swiginit", MixedGradGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradGradIntegrator(VectorCoefficient vq) -> MixedCrossGradGradIntegrator"},
	 { "MixedCrossGradGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossGradGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossGradGradIntegrator self) -> char const *"},
	 { "MixedCrossGradGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossGradGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossGradGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedCrossGradGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossGradGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCrossGradGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradGradIntegrator", _wrap_delete_MixedCrossGradGradIntegrator, METH_O, "delete_MixedCrossGradGradIntegrator(MixedCrossGradGradIntegrator self)"},
	 { "MixedCrossGradGradIntegrator_swigregister", MixedCrossGradGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradGradIntegrator_swiginit", MixedCrossGradGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCurlCurlIntegrator", _wrap_new_MixedCurlCurlIntegrator, METH_VARARGS, "\n"
		"MixedCurlCurlIntegrator()\n"
		"MixedCurlCurlIntegrator(Coefficient q)\n"
		"MixedCurlCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedCurlCurlIntegrator(MatrixCoefficient mq) -> MixedCurlCurlIntegrator\n"
		""},
	 { "MixedCurlCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCurlCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCurlCurlIntegrator self) -> char const *"},
	 { "MixedCurlCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCurlCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCurlCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCurlCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCurlCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedCurlCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCurlCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCurlCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCurlCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCurlCurlIntegrator", _wrap_delete_MixedCurlCurlIntegrator, METH_O, "delete_MixedCurlCurlIntegrator(MixedCurlCurlIntegrator self)"},
	 { "MixedCurlCurlIntegrator_swigregister", MixedCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCurlCurlIntegrator_swiginit", MixedCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlCurlIntegrator(VectorCoefficient vq) -> MixedCrossCurlCurlIntegrator"},
	 { "MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossCurlCurlIntegrator self) -> char const *"},
	 { "MixedCrossCurlCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossCurlCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossCurlCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedCrossCurlCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossCurlCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCrossCurlCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlCurlIntegrator", _wrap_delete_MixedCrossCurlCurlIntegrator, METH_O, "delete_MixedCrossCurlCurlIntegrator(MixedCrossCurlCurlIntegrator self)"},
	 { "MixedCrossCurlCurlIntegrator_swigregister", MixedCrossCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlCurlIntegrator_swiginit", MixedCrossCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlGradIntegrator(VectorCoefficient vq) -> MixedCrossCurlGradIntegrator"},
	 { "MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossCurlGradIntegrator self) -> char const *"},
	 { "MixedCrossCurlGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossCurlGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossCurlGradIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedCrossCurlGradIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossCurlGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCrossCurlGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlGradIntegrator", _wrap_delete_MixedCrossCurlGradIntegrator, METH_O, "delete_MixedCrossCurlGradIntegrator(MixedCrossCurlGradIntegrator self)"},
	 { "MixedCrossCurlGradIntegrator_swigregister", MixedCrossCurlGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlGradIntegrator_swiginit", MixedCrossCurlGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradCurlIntegrator(VectorCoefficient vq) -> MixedCrossGradCurlIntegrator"},
	 { "MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossGradCurlIntegrator self) -> char const *"},
	 { "MixedCrossGradCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossGradCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradCurlIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedCrossGradCurlIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedCrossGradCurlIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradCurlIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCrossGradCurlIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradCurlIntegrator", _wrap_delete_MixedCrossGradCurlIntegrator, METH_O, "delete_MixedCrossGradCurlIntegrator(MixedCrossGradCurlIntegrator self)"},
	 { "MixedCrossGradCurlIntegrator_swigregister", MixedCrossGradCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradCurlIntegrator_swiginit", MixedCrossGradCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedWeakCurlCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedWeakCurlCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedWeakCurlCrossIntegrator(VectorCoefficient vq) -> MixedWeakCurlCrossIntegrator"},
	 { "MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedWeakCurlCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedWeakCurlCrossIntegrator self) -> char const *"},
	 { "MixedWeakCurlCrossIntegrator_GetTestVDim", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_GetTestVDim, METH_VARARGS|METH_KEYWORDS, "GetTestVDim(MixedWeakCurlCrossIntegrator self, FiniteElement test_fe) -> int"},
	 { "MixedWeakCurlCrossIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedWeakCurlCrossIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedWeakCurlCrossIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedWeakCurlCrossIntegrator", _wrap_delete_MixedWeakCurlCrossIntegrator, METH_O, "delete_MixedWeakCurlCrossIntegrator(MixedWeakCurlCrossIntegrator self)"},
	 { "MixedWeakCurlCrossIntegrator_swigregister", MixedWeakCurlCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedWeakCurlCrossIntegrator_swiginit", MixedWeakCurlCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCurlCrossIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakCurlCrossIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakCurlCrossIntegrator(VectorCoefficient vq) -> MixedScalarWeakCurlCrossIntegrator"},
	 { "MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCurlCrossIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarWeakCurlCrossIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakCurlCrossIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarWeakCurlCrossIntegrator self) -> char const *"},
	 { "MixedScalarWeakCurlCrossIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCurlCrossIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedScalarWeakCurlCrossIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarWeakCurlCrossIntegrator", _wrap_delete_MixedScalarWeakCurlCrossIntegrator, METH_O, "delete_MixedScalarWeakCurlCrossIntegrator(MixedScalarWeakCurlCrossIntegrator self)"},
	 { "MixedScalarWeakCurlCrossIntegrator_swigregister", MixedScalarWeakCurlCrossIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCurlCrossIntegrator_swiginit", MixedScalarWeakCurlCrossIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossGradIntegrator(VectorCoefficient vq) -> MixedCrossGradIntegrator"},
	 { "MixedCrossGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossGradIntegrator self) -> char const *"},
	 { "MixedCrossGradIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossGradIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossGradIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossGradIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedCrossGradIntegrator_CalcTestShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossGradIntegrator_CalcTestShape, METH_VARARGS|METH_KEYWORDS, "CalcTestShape(MixedCrossGradIntegrator self, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossGradIntegrator", _wrap_delete_MixedCrossGradIntegrator, METH_O, "delete_MixedCrossGradIntegrator(MixedCrossGradIntegrator self)"},
	 { "MixedCrossGradIntegrator_swigregister", MixedCrossGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossGradIntegrator_swiginit", MixedCrossGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCrossCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedCrossCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedCrossCurlIntegrator(VectorCoefficient vq) -> MixedCrossCurlIntegrator"},
	 { "MixedCrossCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedCrossCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedCrossCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedCrossCurlIntegrator self) -> char const *"},
	 { "MixedCrossCurlIntegrator_GetTrialVDim", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_GetTrialVDim, METH_VARARGS|METH_KEYWORDS, "GetTrialVDim(MixedCrossCurlIntegrator self, FiniteElement trial_fe) -> int"},
	 { "MixedCrossCurlIntegrator_CalcTrialShape", (PyCFunction)(void(*)(void))_wrap_MixedCrossCurlIntegrator_CalcTrialShape, METH_VARARGS|METH_KEYWORDS, "CalcTrialShape(MixedCrossCurlIntegrator self, FiniteElement trial_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedCrossCurlIntegrator", _wrap_delete_MixedCrossCurlIntegrator, METH_O, "delete_MixedCrossCurlIntegrator(MixedCrossCurlIntegrator self)"},
	 { "MixedCrossCurlIntegrator_swigregister", MixedCrossCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCrossCurlIntegrator_swiginit", MixedCrossCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossCurlIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossCurlIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossCurlIntegrator(VectorCoefficient vq) -> MixedScalarCrossCurlIntegrator"},
	 { "MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossCurlIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarCrossCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossCurlIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarCrossCurlIntegrator self) -> char const *"},
	 { "MixedScalarCrossCurlIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossCurlIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedScalarCrossCurlIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarCrossCurlIntegrator", _wrap_delete_MixedScalarCrossCurlIntegrator, METH_O, "delete_MixedScalarCrossCurlIntegrator(MixedScalarCrossCurlIntegrator self)"},
	 { "MixedScalarCrossCurlIntegrator_swigregister", MixedScalarCrossCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossCurlIntegrator_swiginit", MixedScalarCrossCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossGradIntegrator(VectorCoefficient vq) -> MixedScalarCrossGradIntegrator"},
	 { "MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarCrossGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarCrossGradIntegrator self) -> char const *"},
	 { "MixedScalarCrossGradIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "GetVDim(MixedScalarCrossGradIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedScalarCrossGradIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossGradIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "CalcVShape(MixedScalarCrossGradIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedScalarCrossGradIntegrator", _wrap_delete_MixedScalarCrossGradIntegrator, METH_O, "delete_MixedScalarCrossGradIntegrator(MixedScalarCrossGradIntegrator self)"},
	 { "MixedScalarCrossGradIntegrator_swigregister", MixedScalarCrossGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossGradIntegrator_swiginit", MixedScalarCrossGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarCrossProductIntegrator(VectorCoefficient vq) -> MixedScalarCrossProductIntegrator"},
	 { "MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarCrossProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarCrossProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarCrossProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarCrossProductIntegrator self) -> char const *"},
	 { "delete_MixedScalarCrossProductIntegrator", _wrap_delete_MixedScalarCrossProductIntegrator, METH_O, "delete_MixedScalarCrossProductIntegrator(MixedScalarCrossProductIntegrator self)"},
	 { "MixedScalarCrossProductIntegrator_swigregister", MixedScalarCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarCrossProductIntegrator_swiginit", MixedScalarCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakCrossProductIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakCrossProductIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakCrossProductIntegrator(VectorCoefficient vq) -> MixedScalarWeakCrossProductIntegrator"},
	 { "MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCrossProductIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarWeakCrossProductIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakCrossProductIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarWeakCrossProductIntegrator self) -> char const *"},
	 { "MixedScalarWeakCrossProductIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakCrossProductIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedScalarWeakCrossProductIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedScalarWeakCrossProductIntegrator", _wrap_delete_MixedScalarWeakCrossProductIntegrator, METH_O, "delete_MixedScalarWeakCrossProductIntegrator(MixedScalarWeakCrossProductIntegrator self)"},
	 { "MixedScalarWeakCrossProductIntegrator_swigregister", MixedScalarWeakCrossProductIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakCrossProductIntegrator_swiginit", MixedScalarWeakCrossProductIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDirectionalDerivativeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDirectionalDerivativeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDirectionalDerivativeIntegrator(VectorCoefficient vq) -> MixedDirectionalDerivativeIntegrator"},
	 { "MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedDirectionalDerivativeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDirectionalDerivativeIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedDirectionalDerivativeIntegrator self) -> char const *"},
	 { "MixedDirectionalDerivativeIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "GetVDim(MixedDirectionalDerivativeIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedDirectionalDerivativeIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedDirectionalDerivativeIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "CalcVShape(MixedDirectionalDerivativeIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedDirectionalDerivativeIntegrator", _wrap_delete_MixedDirectionalDerivativeIntegrator, METH_O, "delete_MixedDirectionalDerivativeIntegrator(MixedDirectionalDerivativeIntegrator self)"},
	 { "MixedDirectionalDerivativeIntegrator_swigregister", MixedDirectionalDerivativeIntegrator_swigregister, METH_O, NULL},
	 { "MixedDirectionalDerivativeIntegrator_swiginit", MixedDirectionalDerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedGradDivIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedGradDivIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedGradDivIntegrator(VectorCoefficient vq) -> MixedGradDivIntegrator"},
	 { "MixedGradDivIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedGradDivIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedGradDivIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedGradDivIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedGradDivIntegrator self) -> char const *"},
	 { "MixedGradDivIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "GetVDim(MixedGradDivIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedGradDivIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "CalcVShape(MixedGradDivIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedGradDivIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedGradDivIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedGradDivIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedGradDivIntegrator", _wrap_delete_MixedGradDivIntegrator, METH_O, "delete_MixedGradDivIntegrator(MixedGradDivIntegrator self)"},
	 { "MixedGradDivIntegrator_swigregister", MixedGradDivIntegrator_swigregister, METH_O, NULL},
	 { "MixedGradDivIntegrator_swiginit", MixedGradDivIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedDivGradIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedDivGradIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedDivGradIntegrator(VectorCoefficient vq) -> MixedDivGradIntegrator"},
	 { "MixedDivGradIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedDivGradIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedDivGradIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedDivGradIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedDivGradIntegrator self) -> char const *"},
	 { "MixedDivGradIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "GetVDim(MixedDivGradIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedDivGradIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "CalcVShape(MixedDivGradIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "MixedDivGradIntegrator_CalcShape", (PyCFunction)(void(*)(void))_wrap_MixedDivGradIntegrator_CalcShape, METH_VARARGS|METH_KEYWORDS, "CalcShape(MixedDivGradIntegrator self, FiniteElement scalar_fe, ElementTransformation Trans, Vector shape)"},
	 { "delete_MixedDivGradIntegrator", _wrap_delete_MixedDivGradIntegrator, METH_O, "delete_MixedDivGradIntegrator(MixedDivGradIntegrator self)"},
	 { "MixedDivGradIntegrator_swigregister", MixedDivGradIntegrator_swigregister, METH_O, NULL},
	 { "MixedDivGradIntegrator_swiginit", MixedDivGradIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedScalarWeakDivergenceIntegrator", (PyCFunction)(void(*)(void))_wrap_new_MixedScalarWeakDivergenceIntegrator, METH_VARARGS|METH_KEYWORDS, "new_MixedScalarWeakDivergenceIntegrator(VectorCoefficient vq) -> MixedScalarWeakDivergenceIntegrator"},
	 { "MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_VerifyFiniteElementTypes, METH_VARARGS|METH_KEYWORDS, "VerifyFiniteElementTypes(MixedScalarWeakDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe) -> bool"},
	 { "MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage", _wrap_MixedScalarWeakDivergenceIntegrator_FiniteElementTypeFailureMessage, METH_O, "FiniteElementTypeFailureMessage(MixedScalarWeakDivergenceIntegrator self) -> char const *"},
	 { "MixedScalarWeakDivergenceIntegrator_GetVDim", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_GetVDim, METH_VARARGS|METH_KEYWORDS, "GetVDim(MixedScalarWeakDivergenceIntegrator self, FiniteElement vector_fe) -> int"},
	 { "MixedScalarWeakDivergenceIntegrator_CalcVShape", (PyCFunction)(void(*)(void))_wrap_MixedScalarWeakDivergenceIntegrator_CalcVShape, METH_VARARGS|METH_KEYWORDS, "CalcVShape(MixedScalarWeakDivergenceIntegrator self, FiniteElement vector_fe, ElementTransformation Trans, DenseMatrix shape)"},
	 { "delete_MixedScalarWeakDivergenceIntegrator", _wrap_delete_MixedScalarWeakDivergenceIntegrator, METH_O, "delete_MixedScalarWeakDivergenceIntegrator(MixedScalarWeakDivergenceIntegrator self)"},
	 { "MixedScalarWeakDivergenceIntegrator_swigregister", MixedScalarWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedScalarWeakDivergenceIntegrator_swiginit", MixedScalarWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorGradientIntegrator", _wrap_new_MixedVectorGradientIntegrator, METH_VARARGS, "\n"
		"MixedVectorGradientIntegrator()\n"
		"MixedVectorGradientIntegrator(Coefficient q)\n"
		"MixedVectorGradientIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorGradientIntegrator(MatrixCoefficient mq) -> MixedVectorGradientIntegrator\n"
		""},
	 { "delete_MixedVectorGradientIntegrator", _wrap_delete_MixedVectorGradientIntegrator, METH_O, "delete_MixedVectorGradientIntegrator(MixedVectorGradientIntegrator self)"},
	 { "MixedVectorGradientIntegrator_swigregister", MixedVectorGradientIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorGradientIntegrator_swiginit", MixedVectorGradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorCurlIntegrator", _wrap_new_MixedVectorCurlIntegrator, METH_VARARGS, "\n"
		"MixedVectorCurlIntegrator()\n"
		"MixedVectorCurlIntegrator(Coefficient q)\n"
		"MixedVectorCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorCurlIntegrator(MatrixCoefficient mq) -> MixedVectorCurlIntegrator\n"
		""},
	 { "delete_MixedVectorCurlIntegrator", _wrap_delete_MixedVectorCurlIntegrator, METH_O, "delete_MixedVectorCurlIntegrator(MixedVectorCurlIntegrator self)"},
	 { "MixedVectorCurlIntegrator_swigregister", MixedVectorCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorCurlIntegrator_swiginit", MixedVectorCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorWeakCurlIntegrator", _wrap_new_MixedVectorWeakCurlIntegrator, METH_VARARGS, "\n"
		"MixedVectorWeakCurlIntegrator()\n"
		"MixedVectorWeakCurlIntegrator(Coefficient q)\n"
		"MixedVectorWeakCurlIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorWeakCurlIntegrator(MatrixCoefficient mq) -> MixedVectorWeakCurlIntegrator\n"
		""},
	 { "delete_MixedVectorWeakCurlIntegrator", _wrap_delete_MixedVectorWeakCurlIntegrator, METH_O, "delete_MixedVectorWeakCurlIntegrator(MixedVectorWeakCurlIntegrator self)"},
	 { "MixedVectorWeakCurlIntegrator_swigregister", MixedVectorWeakCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorWeakCurlIntegrator_swiginit", MixedVectorWeakCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedVectorWeakDivergenceIntegrator", _wrap_new_MixedVectorWeakDivergenceIntegrator, METH_VARARGS, "\n"
		"MixedVectorWeakDivergenceIntegrator()\n"
		"MixedVectorWeakDivergenceIntegrator(Coefficient q)\n"
		"MixedVectorWeakDivergenceIntegrator(VectorCoefficient dq)\n"
		"new_MixedVectorWeakDivergenceIntegrator(MatrixCoefficient mq) -> MixedVectorWeakDivergenceIntegrator\n"
		""},
	 { "delete_MixedVectorWeakDivergenceIntegrator", _wrap_delete_MixedVectorWeakDivergenceIntegrator, METH_O, "delete_MixedVectorWeakDivergenceIntegrator(MixedVectorWeakDivergenceIntegrator self)"},
	 { "MixedVectorWeakDivergenceIntegrator_swigregister", MixedVectorWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "MixedVectorWeakDivergenceIntegrator_swiginit", MixedVectorWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_GradientIntegrator", _wrap_new_GradientIntegrator, METH_VARARGS, "\n"
		"GradientIntegrator()\n"
		"GradientIntegrator(Coefficient q_)\n"
		"new_GradientIntegrator(Coefficient q) -> GradientIntegrator\n"
		""},
	 { "GradientIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(GradientIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "GradientIntegrator_AssemblePA", _wrap_GradientIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(GradientIntegrator self, FiniteElementSpace fes)\n"
		"AssemblePA(GradientIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "GradientIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(GradientIntegrator self, Vector x, Vector y)"},
	 { "GradientIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(GradientIntegrator self, Vector x, Vector y)"},
	 { "GradientIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_GradientIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "delete_GradientIntegrator", _wrap_delete_GradientIntegrator, METH_O, "delete_GradientIntegrator(GradientIntegrator self)"},
	 { "GradientIntegrator_swigregister", GradientIntegrator_swigregister, METH_O, NULL},
	 { "GradientIntegrator_swiginit", GradientIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DiffusionIntegrator", _wrap_new_DiffusionIntegrator, METH_VARARGS, "\n"
		"DiffusionIntegrator(IntegrationRule ir=None)\n"
		"DiffusionIntegrator(Coefficient q, IntegrationRule ir=None)\n"
		"DiffusionIntegrator(VectorCoefficient q, IntegrationRule ir=None)\n"
		"new_DiffusionIntegrator(MatrixCoefficient q, IntegrationRule ir=None) -> DiffusionIntegrator\n"
		""},
	 { "DiffusionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(DiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DiffusionIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(DiffusionIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DiffusionIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "AssembleElementVector(DiffusionIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "DiffusionIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "ComputeElementFlux(DiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "DiffusionIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "ComputeFluxEnergy(DiffusionIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "DiffusionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(DiffusionIntegrator self, FiniteElementSpace fes)"},
	 { "DiffusionIntegrator_AssemblePA", _wrap_DiffusionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(DiffusionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(DiffusionIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "DiffusionIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(DiffusionIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "DiffusionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(DiffusionIntegrator self, Vector diag)"},
	 { "DiffusionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(DiffusionIntegrator self, Vector diag)"},
	 { "DiffusionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(DiffusionIntegrator self, Vector arg2, Vector arg3)"},
	 { "DiffusionIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_DiffusionIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GetRule(FiniteElement trial_fe, FiniteElement test_fe) -> IntegrationRule"},
	 { "DiffusionIntegrator_SupportsCeed", _wrap_DiffusionIntegrator_SupportsCeed, METH_O, "SupportsCeed(DiffusionIntegrator self) -> bool"},
	 { "DiffusionIntegrator_GetCoefficient", _wrap_DiffusionIntegrator_GetCoefficient, METH_O, "GetCoefficient(DiffusionIntegrator self) -> Coefficient"},
	 { "delete_DiffusionIntegrator", _wrap_delete_DiffusionIntegrator, METH_O, "delete_DiffusionIntegrator(DiffusionIntegrator self)"},
	 { "DiffusionIntegrator_swigregister", DiffusionIntegrator_swigregister, METH_O, NULL},
	 { "DiffusionIntegrator_swiginit", DiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MassIntegrator", _wrap_new_MassIntegrator, METH_VARARGS, "\n"
		"MassIntegrator(IntegrationRule ir=None)\n"
		"new_MassIntegrator(Coefficient q, IntegrationRule ir=None) -> MassIntegrator\n"
		""},
	 { "MassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(MassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(MassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "MassIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(MassIntegrator self, FiniteElementSpace fes)"},
	 { "MassIntegrator_AssemblePA", _wrap_MassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(MassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(MassIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "MassIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(MassIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "MassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(MassIntegrator self, Vector diag)"},
	 { "MassIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(MassIntegrator self, Vector diag)"},
	 { "MassIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(MassIntegrator self, Vector arg2, Vector arg3)"},
	 { "MassIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_MassIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "MassIntegrator_SupportsCeed", _wrap_MassIntegrator_SupportsCeed, METH_O, "SupportsCeed(MassIntegrator self) -> bool"},
	 { "MassIntegrator_GetCoefficient", _wrap_MassIntegrator_GetCoefficient, METH_O, "GetCoefficient(MassIntegrator self) -> Coefficient"},
	 { "delete_MassIntegrator", _wrap_delete_MassIntegrator, METH_O, "delete_MassIntegrator(MassIntegrator self)"},
	 { "MassIntegrator_swigregister", MassIntegrator_swigregister, METH_O, NULL},
	 { "MassIntegrator_swiginit", MassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_BoundaryMassIntegrator", (PyCFunction)(void(*)(void))_wrap_new_BoundaryMassIntegrator, METH_VARARGS|METH_KEYWORDS, "new_BoundaryMassIntegrator(Coefficient q) -> BoundaryMassIntegrator"},
	 { "BoundaryMassIntegrator_AssembleFaceMatrix", _wrap_BoundaryMassIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(BoundaryMassIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(BoundaryMassIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_BoundaryMassIntegrator", _wrap_delete_BoundaryMassIntegrator, METH_O, "delete_BoundaryMassIntegrator(BoundaryMassIntegrator self)"},
	 { "BoundaryMassIntegrator_swigregister", BoundaryMassIntegrator_swigregister, METH_O, NULL},
	 { "BoundaryMassIntegrator_swiginit", BoundaryMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_ConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_ConvectionIntegrator(VectorCoefficient q, double a=1.0) -> ConvectionIntegrator"},
	 { "ConvectionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(ConvectionIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "ConvectionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(ConvectionIntegrator self, FiniteElementSpace fes)"},
	 { "ConvectionIntegrator_AssemblePA", _wrap_ConvectionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(ConvectionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(ConvectionIntegrator self, FiniteElementSpace arg2)\n"
		""},
	 { "ConvectionIntegrator_AssembleEA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleEA, METH_VARARGS|METH_KEYWORDS, "AssembleEA(ConvectionIntegrator self, FiniteElementSpace fes, Vector emat, bool const add)"},
	 { "ConvectionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(ConvectionIntegrator self, Vector diag)"},
	 { "ConvectionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(ConvectionIntegrator self, Vector diag)"},
	 { "ConvectionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(ConvectionIntegrator self, Vector arg2, Vector arg3)"},
	 { "ConvectionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(ConvectionIntegrator self, Vector arg2, Vector arg3)"},
	 { "ConvectionIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_ConvectionIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(ConvectionIntegrator self, Vector x, Vector y)"},
	 { "ConvectionIntegrator_GetRule", _wrap_ConvectionIntegrator_GetRule, METH_VARARGS, "\n"
		"GetRule(FiniteElement el, ElementTransformation Trans) -> IntegrationRule\n"
		"GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule\n"
		""},
	 { "ConvectionIntegrator_SupportsCeed", _wrap_ConvectionIntegrator_SupportsCeed, METH_O, "SupportsCeed(ConvectionIntegrator self) -> bool"},
	 { "delete_ConvectionIntegrator", _wrap_delete_ConvectionIntegrator, METH_O, "delete_ConvectionIntegrator(ConvectionIntegrator self)"},
	 { "ConvectionIntegrator_swigregister", ConvectionIntegrator_swigregister, METH_O, NULL},
	 { "ConvectionIntegrator_swiginit", ConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ConservativeConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_ConservativeConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_ConservativeConvectionIntegrator(VectorCoefficient q, double a=1.0) -> ConservativeConvectionIntegrator"},
	 { "delete_ConservativeConvectionIntegrator", _wrap_delete_ConservativeConvectionIntegrator, METH_O, "delete_ConservativeConvectionIntegrator(ConservativeConvectionIntegrator self)"},
	 { "ConservativeConvectionIntegrator_swigregister", ConservativeConvectionIntegrator_swigregister, METH_O, NULL},
	 { "ConservativeConvectionIntegrator_swiginit", ConservativeConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_GroupConvectionIntegrator", (PyCFunction)(void(*)(void))_wrap_new_GroupConvectionIntegrator, METH_VARARGS|METH_KEYWORDS, "new_GroupConvectionIntegrator(VectorCoefficient q, double a=1.0) -> GroupConvectionIntegrator"},
	 { "GroupConvectionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_GroupConvectionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(GroupConvectionIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "delete_GroupConvectionIntegrator", _wrap_delete_GroupConvectionIntegrator, METH_O, "delete_GroupConvectionIntegrator(GroupConvectionIntegrator self)"},
	 { "GroupConvectionIntegrator_swigregister", GroupConvectionIntegrator_swigregister, METH_O, NULL},
	 { "GroupConvectionIntegrator_swiginit", GroupConvectionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorMassIntegrator", _wrap_new_VectorMassIntegrator, METH_VARARGS, "\n"
		"VectorMassIntegrator()\n"
		"VectorMassIntegrator(Coefficient q, int qo=0)\n"
		"VectorMassIntegrator(Coefficient q, IntegrationRule ir)\n"
		"VectorMassIntegrator(VectorCoefficient q, int qo=0)\n"
		"new_VectorMassIntegrator(MatrixCoefficient q, int qo=0) -> VectorMassIntegrator\n"
		""},
	 { "VectorMassIntegrator_GetVDim", _wrap_VectorMassIntegrator_GetVDim, METH_O, "GetVDim(VectorMassIntegrator self) -> int"},
	 { "VectorMassIntegrator_SetVDim", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_SetVDim, METH_VARARGS|METH_KEYWORDS, "SetVDim(VectorMassIntegrator self, int vdim_)"},
	 { "VectorMassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorMassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorMassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorMassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorMassIntegrator_AssemblePA", _wrap_VectorMassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(VectorMassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(VectorMassIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "VectorMassIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(VectorMassIntegrator self, FiniteElementSpace fes)"},
	 { "VectorMassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(VectorMassIntegrator self, Vector diag)"},
	 { "VectorMassIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(VectorMassIntegrator self, Vector diag)"},
	 { "VectorMassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(VectorMassIntegrator self, Vector x, Vector y)"},
	 { "VectorMassIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_VectorMassIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(VectorMassIntegrator self, Vector x, Vector y)"},
	 { "VectorMassIntegrator_SupportsCeed", _wrap_VectorMassIntegrator_SupportsCeed, METH_O, "SupportsCeed(VectorMassIntegrator self) -> bool"},
	 { "delete_VectorMassIntegrator", _wrap_delete_VectorMassIntegrator, METH_O, "delete_VectorMassIntegrator(VectorMassIntegrator self)"},
	 { "VectorMassIntegrator_swigregister", VectorMassIntegrator_swigregister, METH_O, NULL},
	 { "VectorMassIntegrator_swiginit", VectorMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEDivergenceIntegrator", _wrap_new_VectorFEDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorFEDivergenceIntegrator()\n"
		"new_VectorFEDivergenceIntegrator(Coefficient q) -> VectorFEDivergenceIntegrator\n"
		""},
	 { "VectorFEDivergenceIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorFEDivergenceIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorFEDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt", (PyCFunction)(void(*)(void))_wrap_VectorFEDivergenceIntegrator_AssembleDiagonalPA_ADAt, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA_ADAt(VectorFEDivergenceIntegrator self, Vector D, Vector diag)"},
	 { "delete_VectorFEDivergenceIntegrator", _wrap_delete_VectorFEDivergenceIntegrator, METH_O, "delete_VectorFEDivergenceIntegrator(VectorFEDivergenceIntegrator self)"},
	 { "VectorFEDivergenceIntegrator_swigregister", VectorFEDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEDivergenceIntegrator_swiginit", VectorFEDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEWeakDivergenceIntegrator", _wrap_new_VectorFEWeakDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorFEWeakDivergenceIntegrator()\n"
		"new_VectorFEWeakDivergenceIntegrator(Coefficient q) -> VectorFEWeakDivergenceIntegrator\n"
		""},
	 { "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorFEWeakDivergenceIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEWeakDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorFEWeakDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorFEWeakDivergenceIntegrator", _wrap_delete_VectorFEWeakDivergenceIntegrator, METH_O, "delete_VectorFEWeakDivergenceIntegrator(VectorFEWeakDivergenceIntegrator self)"},
	 { "VectorFEWeakDivergenceIntegrator_swigregister", VectorFEWeakDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEWeakDivergenceIntegrator_swiginit", VectorFEWeakDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFECurlIntegrator", _wrap_new_VectorFECurlIntegrator, METH_VARARGS, "\n"
		"VectorFECurlIntegrator()\n"
		"new_VectorFECurlIntegrator(Coefficient q) -> VectorFECurlIntegrator\n"
		""},
	 { "VectorFECurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFECurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorFECurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFECurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFECurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorFECurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorFECurlIntegrator", _wrap_delete_VectorFECurlIntegrator, METH_O, "delete_VectorFECurlIntegrator(VectorFECurlIntegrator self)"},
	 { "VectorFECurlIntegrator_swigregister", VectorFECurlIntegrator_swigregister, METH_O, NULL},
	 { "VectorFECurlIntegrator_swiginit", VectorFECurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DerivativeIntegrator", (PyCFunction)(void(*)(void))_wrap_new_DerivativeIntegrator, METH_VARARGS|METH_KEYWORDS, "new_DerivativeIntegrator(Coefficient q, int i) -> DerivativeIntegrator"},
	 { "DerivativeIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DerivativeIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(DerivativeIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DerivativeIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DerivativeIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(DerivativeIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_DerivativeIntegrator", _wrap_delete_DerivativeIntegrator, METH_O, "delete_DerivativeIntegrator(DerivativeIntegrator self)"},
	 { "DerivativeIntegrator_swigregister", DerivativeIntegrator_swigregister, METH_O, NULL},
	 { "DerivativeIntegrator_swiginit", DerivativeIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_CurlCurlIntegrator", _wrap_new_CurlCurlIntegrator, METH_VARARGS, "\n"
		"CurlCurlIntegrator()\n"
		"CurlCurlIntegrator(Coefficient q, IntegrationRule ir=None)\n"
		"CurlCurlIntegrator(VectorCoefficient dq, IntegrationRule ir=None)\n"
		"new_CurlCurlIntegrator(MatrixCoefficient mq, IntegrationRule ir=None) -> CurlCurlIntegrator\n"
		""},
	 { "CurlCurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(CurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "CurlCurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(CurlCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "CurlCurlIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "ComputeElementFlux(CurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef, IntegrationRule ir=None)"},
	 { "CurlCurlIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "ComputeFluxEnergy(CurlCurlIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "CurlCurlIntegrator_AssemblePA", _wrap_CurlCurlIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(CurlCurlIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(CurlCurlIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "CurlCurlIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(CurlCurlIntegrator self, Vector x, Vector y)"},
	 { "CurlCurlIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_CurlCurlIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(CurlCurlIntegrator self, Vector diag)"},
	 { "CurlCurlIntegrator_GetCoefficient", _wrap_CurlCurlIntegrator_GetCoefficient, METH_O, "GetCoefficient(CurlCurlIntegrator self) -> Coefficient"},
	 { "delete_CurlCurlIntegrator", _wrap_delete_CurlCurlIntegrator, METH_O, "delete_CurlCurlIntegrator(CurlCurlIntegrator self)"},
	 { "CurlCurlIntegrator_swigregister", CurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "CurlCurlIntegrator_swiginit", CurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorCurlCurlIntegrator", _wrap_new_VectorCurlCurlIntegrator, METH_VARARGS, "\n"
		"VectorCurlCurlIntegrator()\n"
		"new_VectorCurlCurlIntegrator(Coefficient q) -> VectorCurlCurlIntegrator\n"
		""},
	 { "VectorCurlCurlIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorCurlCurlIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorCurlCurlIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorCurlCurlIntegrator_GetElementEnergy", (PyCFunction)(void(*)(void))_wrap_VectorCurlCurlIntegrator_GetElementEnergy, METH_VARARGS|METH_KEYWORDS, "GetElementEnergy(VectorCurlCurlIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun) -> double"},
	 { "delete_VectorCurlCurlIntegrator", _wrap_delete_VectorCurlCurlIntegrator, METH_O, "delete_VectorCurlCurlIntegrator(VectorCurlCurlIntegrator self)"},
	 { "VectorCurlCurlIntegrator_swigregister", VectorCurlCurlIntegrator_swigregister, METH_O, NULL},
	 { "VectorCurlCurlIntegrator_swiginit", VectorCurlCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_MixedCurlIntegrator", _wrap_new_MixedCurlIntegrator, METH_VARARGS, "\n"
		"MixedCurlIntegrator()\n"
		"MixedCurlIntegrator(Coefficient q_)\n"
		"new_MixedCurlIntegrator(Coefficient q) -> MixedCurlIntegrator\n"
		""},
	 { "MixedCurlIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_MixedCurlIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(MixedCurlIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_MixedCurlIntegrator", _wrap_delete_MixedCurlIntegrator, METH_O, "delete_MixedCurlIntegrator(MixedCurlIntegrator self)"},
	 { "MixedCurlIntegrator_swigregister", MixedCurlIntegrator_swigregister, METH_O, NULL},
	 { "MixedCurlIntegrator_swiginit", MixedCurlIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorFEMassIntegrator", _wrap_new_VectorFEMassIntegrator, METH_VARARGS, "\n"
		"VectorFEMassIntegrator()\n"
		"VectorFEMassIntegrator(Coefficient q_)\n"
		"VectorFEMassIntegrator(Coefficient q)\n"
		"VectorFEMassIntegrator(VectorCoefficient dq_)\n"
		"VectorFEMassIntegrator(VectorCoefficient dq)\n"
		"VectorFEMassIntegrator(MatrixCoefficient mq_)\n"
		"new_VectorFEMassIntegrator(MatrixCoefficient mq) -> VectorFEMassIntegrator\n"
		""},
	 { "VectorFEMassIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorFEMassIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEMassIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorFEMassIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorFEMassIntegrator_AssemblePA", _wrap_VectorFEMassIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(VectorFEMassIntegrator self, FiniteElementSpace fes)\n"
		"AssemblePA(VectorFEMassIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "VectorFEMassIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(VectorFEMassIntegrator self, Vector x, Vector y)"},
	 { "VectorFEMassIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(VectorFEMassIntegrator self, Vector x, Vector y)"},
	 { "VectorFEMassIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorFEMassIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(VectorFEMassIntegrator self, Vector diag)"},
	 { "VectorFEMassIntegrator_GetCoefficient", _wrap_VectorFEMassIntegrator_GetCoefficient, METH_O, "GetCoefficient(VectorFEMassIntegrator self) -> Coefficient"},
	 { "delete_VectorFEMassIntegrator", _wrap_delete_VectorFEMassIntegrator, METH_O, "delete_VectorFEMassIntegrator(VectorFEMassIntegrator self)"},
	 { "VectorFEMassIntegrator_swigregister", VectorFEMassIntegrator_swigregister, METH_O, NULL},
	 { "VectorFEMassIntegrator_swiginit", VectorFEMassIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorDivergenceIntegrator", _wrap_new_VectorDivergenceIntegrator, METH_VARARGS, "\n"
		"VectorDivergenceIntegrator()\n"
		"VectorDivergenceIntegrator(Coefficient q_)\n"
		"new_VectorDivergenceIntegrator(Coefficient q) -> VectorDivergenceIntegrator\n"
		""},
	 { "VectorDivergenceIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorDivergenceIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorDivergenceIntegrator_AssemblePA", _wrap_VectorDivergenceIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(VectorDivergenceIntegrator self, FiniteElementSpace fes)\n"
		"AssemblePA(VectorDivergenceIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "VectorDivergenceIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(VectorDivergenceIntegrator self, Vector x, Vector y)"},
	 { "VectorDivergenceIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(VectorDivergenceIntegrator self, Vector x, Vector y)"},
	 { "VectorDivergenceIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_VectorDivergenceIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GetRule(FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans) -> IntegrationRule"},
	 { "delete_VectorDivergenceIntegrator", _wrap_delete_VectorDivergenceIntegrator, METH_O, "delete_VectorDivergenceIntegrator(VectorDivergenceIntegrator self)"},
	 { "VectorDivergenceIntegrator_swigregister", VectorDivergenceIntegrator_swigregister, METH_O, NULL},
	 { "VectorDivergenceIntegrator_swiginit", VectorDivergenceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DivDivIntegrator", _wrap_new_DivDivIntegrator, METH_VARARGS, "\n"
		"DivDivIntegrator()\n"
		"new_DivDivIntegrator(Coefficient q, IntegrationRule ir=None) -> DivDivIntegrator\n"
		""},
	 { "DivDivIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_DivDivIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(DivDivIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DivDivIntegrator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DivDivIntegrator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(DivDivIntegrator self, FiniteElement trial_fe, FiniteElement test_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "DivDivIntegrator_GetCoefficient", _wrap_DivDivIntegrator_GetCoefficient, METH_O, "GetCoefficient(DivDivIntegrator self) -> Coefficient"},
	 { "delete_DivDivIntegrator", _wrap_delete_DivDivIntegrator, METH_O, "delete_DivDivIntegrator(DivDivIntegrator self)"},
	 { "DivDivIntegrator_swigregister", DivDivIntegrator_swigregister, METH_O, NULL},
	 { "DivDivIntegrator_swiginit", DivDivIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorDiffusionIntegrator", _wrap_new_VectorDiffusionIntegrator, METH_VARARGS, "\n"
		"VectorDiffusionIntegrator()\n"
		"VectorDiffusionIntegrator(int vector_dimension)\n"
		"VectorDiffusionIntegrator(Coefficient q)\n"
		"VectorDiffusionIntegrator(Coefficient q, IntegrationRule ir)\n"
		"VectorDiffusionIntegrator(Coefficient q, int vector_dimension)\n"
		"VectorDiffusionIntegrator(VectorCoefficient vq)\n"
		"new_VectorDiffusionIntegrator(MatrixCoefficient mq) -> VectorDiffusionIntegrator\n"
		""},
	 { "VectorDiffusionIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(VectorDiffusionIntegrator self, FiniteElement el, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "VectorDiffusionIntegrator_AssembleElementVector", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleElementVector, METH_VARARGS|METH_KEYWORDS, "AssembleElementVector(VectorDiffusionIntegrator self, FiniteElement el, ElementTransformation Tr, Vector elfun, Vector elvect)"},
	 { "VectorDiffusionIntegrator_AssemblePA", _wrap_VectorDiffusionIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(VectorDiffusionIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		"AssemblePA(VectorDiffusionIntegrator self, FiniteElementSpace fes)\n"
		""},
	 { "VectorDiffusionIntegrator_AssembleMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleMF, METH_VARARGS|METH_KEYWORDS, "AssembleMF(VectorDiffusionIntegrator self, FiniteElementSpace fes)"},
	 { "VectorDiffusionIntegrator_AssembleDiagonalPA", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleDiagonalPA, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalPA(VectorDiffusionIntegrator self, Vector diag)"},
	 { "VectorDiffusionIntegrator_AssembleDiagonalMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AssembleDiagonalMF, METH_VARARGS|METH_KEYWORDS, "AssembleDiagonalMF(VectorDiffusionIntegrator self, Vector diag)"},
	 { "VectorDiffusionIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(VectorDiffusionIntegrator self, Vector x, Vector y)"},
	 { "VectorDiffusionIntegrator_AddMultMF", (PyCFunction)(void(*)(void))_wrap_VectorDiffusionIntegrator_AddMultMF, METH_VARARGS|METH_KEYWORDS, "AddMultMF(VectorDiffusionIntegrator self, Vector x, Vector y)"},
	 { "VectorDiffusionIntegrator_SupportsCeed", _wrap_VectorDiffusionIntegrator_SupportsCeed, METH_O, "SupportsCeed(VectorDiffusionIntegrator self) -> bool"},
	 { "delete_VectorDiffusionIntegrator", _wrap_delete_VectorDiffusionIntegrator, METH_O, "delete_VectorDiffusionIntegrator(VectorDiffusionIntegrator self)"},
	 { "VectorDiffusionIntegrator_swigregister", VectorDiffusionIntegrator_swigregister, METH_O, NULL},
	 { "VectorDiffusionIntegrator_swiginit", VectorDiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_ElasticityIntegrator", _wrap_new_ElasticityIntegrator, METH_VARARGS, "\n"
		"ElasticityIntegrator(Coefficient l, Coefficient m)\n"
		"new_ElasticityIntegrator(Coefficient m, double q_l, double q_m) -> ElasticityIntegrator\n"
		""},
	 { "ElasticityIntegrator_AssembleElementMatrix", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_AssembleElementMatrix, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix(ElasticityIntegrator self, FiniteElement arg2, ElementTransformation arg3, DenseMatrix arg4)"},
	 { "ElasticityIntegrator_ComputeElementFlux", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_ComputeElementFlux, METH_VARARGS|METH_KEYWORDS, "ComputeElementFlux(ElasticityIntegrator self, FiniteElement el, ElementTransformation Trans, Vector u, FiniteElement fluxelem, Vector flux, bool with_coef=True, IntegrationRule ir=None)"},
	 { "ElasticityIntegrator_ComputeFluxEnergy", (PyCFunction)(void(*)(void))_wrap_ElasticityIntegrator_ComputeFluxEnergy, METH_VARARGS|METH_KEYWORDS, "ComputeFluxEnergy(ElasticityIntegrator self, FiniteElement fluxelem, ElementTransformation Trans, Vector flux, Vector d_energy=None) -> double"},
	 { "delete_ElasticityIntegrator", _wrap_delete_ElasticityIntegrator, METH_O, "delete_ElasticityIntegrator(ElasticityIntegrator self)"},
	 { "ElasticityIntegrator_swigregister", ElasticityIntegrator_swigregister, METH_O, NULL},
	 { "ElasticityIntegrator_swiginit", ElasticityIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGTraceIntegrator", _wrap_new_DGTraceIntegrator, METH_VARARGS, "\n"
		"DGTraceIntegrator(VectorCoefficient u_, double a)\n"
		"DGTraceIntegrator(VectorCoefficient u_, double a, double b)\n"
		"new_DGTraceIntegrator(Coefficient rho_, VectorCoefficient u_, double a, double b) -> DGTraceIntegrator\n"
		""},
	 { "DGTraceIntegrator_AssembleFaceMatrix", _wrap_DGTraceIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(DGTraceIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(DGTraceIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "DGTraceIntegrator_AssemblePA", _wrap_DGTraceIntegrator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(DGTraceIntegrator self, FiniteElementSpace fes)\n"
		"AssemblePA(DGTraceIntegrator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "DGTraceIntegrator_AssemblePAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssemblePAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePAInteriorFaces(DGTraceIntegrator self, FiniteElementSpace fes)"},
	 { "DGTraceIntegrator_AssemblePABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssemblePABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssemblePABoundaryFaces(DGTraceIntegrator self, FiniteElementSpace fes)"},
	 { "DGTraceIntegrator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(DGTraceIntegrator self, Vector x, Vector y)"},
	 { "DGTraceIntegrator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(DGTraceIntegrator self, Vector arg2, Vector arg3)"},
	 { "DGTraceIntegrator_AssembleEAInteriorFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssembleEAInteriorFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEAInteriorFaces(DGTraceIntegrator self, FiniteElementSpace fes, Vector ea_data_int, Vector ea_data_ext, bool const add)"},
	 { "DGTraceIntegrator_AssembleEABoundaryFaces", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_AssembleEABoundaryFaces, METH_VARARGS|METH_KEYWORDS, "AssembleEABoundaryFaces(DGTraceIntegrator self, FiniteElementSpace fes, Vector ea_data_bdr, bool const add)"},
	 { "DGTraceIntegrator_GetRule", (PyCFunction)(void(*)(void))_wrap_DGTraceIntegrator_GetRule, METH_VARARGS|METH_KEYWORDS, "GetRule(mfem::Geometry::Type geom, int order, FaceElementTransformations T) -> IntegrationRule"},
	 { "delete_DGTraceIntegrator", _wrap_delete_DGTraceIntegrator, METH_O, "delete_DGTraceIntegrator(DGTraceIntegrator self)"},
	 { "DGTraceIntegrator_swigregister", DGTraceIntegrator_swigregister, METH_O, NULL},
	 { "DGTraceIntegrator_swiginit", DGTraceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_NonconservativeDGTraceIntegrator", _wrap_new_NonconservativeDGTraceIntegrator, METH_VARARGS, "\n"
		"NonconservativeDGTraceIntegrator(VectorCoefficient u, double a)\n"
		"NonconservativeDGTraceIntegrator(VectorCoefficient u, double a, double b)\n"
		"new_NonconservativeDGTraceIntegrator(Coefficient rho, VectorCoefficient u, double a, double b) -> NonconservativeDGTraceIntegrator\n"
		""},
	 { "delete_NonconservativeDGTraceIntegrator", _wrap_delete_NonconservativeDGTraceIntegrator, METH_O, "delete_NonconservativeDGTraceIntegrator(NonconservativeDGTraceIntegrator self)"},
	 { "NonconservativeDGTraceIntegrator_swigregister", NonconservativeDGTraceIntegrator_swigregister, METH_O, NULL},
	 { "NonconservativeDGTraceIntegrator_swiginit", NonconservativeDGTraceIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGDiffusionIntegrator", _wrap_new_DGDiffusionIntegrator, METH_VARARGS, "\n"
		"DGDiffusionIntegrator(double const s, double const k)\n"
		"DGDiffusionIntegrator(Coefficient q, double const s, double const k)\n"
		"new_DGDiffusionIntegrator(MatrixCoefficient q, double const s, double const k) -> DGDiffusionIntegrator\n"
		""},
	 { "DGDiffusionIntegrator_AssembleFaceMatrix", _wrap_DGDiffusionIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(DGDiffusionIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(DGDiffusionIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGDiffusionIntegrator", _wrap_delete_DGDiffusionIntegrator, METH_O, "delete_DGDiffusionIntegrator(DGDiffusionIntegrator self)"},
	 { "DGDiffusionIntegrator_swigregister", DGDiffusionIntegrator_swigregister, METH_O, NULL},
	 { "DGDiffusionIntegrator_swiginit", DGDiffusionIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGDiffusionBR2Integrator", _wrap_new_DGDiffusionBR2Integrator, METH_VARARGS, "\n"
		"DGDiffusionBR2Integrator(FiniteElementSpace fes, double e=1.0)\n"
		"DGDiffusionBR2Integrator(FiniteElementSpace fes, Coefficient Q_, double e=1.0)\n"
		"new_DGDiffusionBR2Integrator(FiniteElementSpace fes, double e=1.0) -> DGDiffusionBR2Integrator\n"
		""},
	 { "DGDiffusionBR2Integrator_AssembleFaceMatrix", _wrap_DGDiffusionBR2Integrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(DGDiffusionBR2Integrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(DGDiffusionBR2Integrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGDiffusionBR2Integrator", _wrap_delete_DGDiffusionBR2Integrator, METH_O, "delete_DGDiffusionBR2Integrator(DGDiffusionBR2Integrator self)"},
	 { "DGDiffusionBR2Integrator_swigregister", DGDiffusionBR2Integrator_swigregister, METH_O, NULL},
	 { "DGDiffusionBR2Integrator_swiginit", DGDiffusionBR2Integrator_swiginit, METH_VARARGS, NULL},
	 { "new_DGElasticityIntegrator", _wrap_new_DGElasticityIntegrator, METH_VARARGS, "\n"
		"DGElasticityIntegrator(double alpha_, double kappa_)\n"
		"new_DGElasticityIntegrator(Coefficient lambda_, Coefficient mu_, double alpha_, double kappa_) -> DGElasticityIntegrator\n"
		""},
	 { "DGElasticityIntegrator_AssembleFaceMatrix", _wrap_DGElasticityIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(DGElasticityIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(DGElasticityIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_DGElasticityIntegrator", _wrap_delete_DGElasticityIntegrator, METH_O, "delete_DGElasticityIntegrator(DGElasticityIntegrator self)"},
	 { "DGElasticityIntegrator_swigregister", DGElasticityIntegrator_swigregister, METH_O, NULL},
	 { "DGElasticityIntegrator_swiginit", DGElasticityIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_TraceJumpIntegrator", _wrap_new_TraceJumpIntegrator, METH_NOARGS, "new_TraceJumpIntegrator() -> TraceJumpIntegrator"},
	 { "TraceJumpIntegrator_AssembleFaceMatrix", _wrap_TraceJumpIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(TraceJumpIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(TraceJumpIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_TraceJumpIntegrator", _wrap_delete_TraceJumpIntegrator, METH_O, "delete_TraceJumpIntegrator(TraceJumpIntegrator self)"},
	 { "TraceJumpIntegrator_swigregister", TraceJumpIntegrator_swigregister, METH_O, NULL},
	 { "TraceJumpIntegrator_swiginit", TraceJumpIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_NormalTraceJumpIntegrator", _wrap_new_NormalTraceJumpIntegrator, METH_NOARGS, "new_NormalTraceJumpIntegrator() -> NormalTraceJumpIntegrator"},
	 { "NormalTraceJumpIntegrator_AssembleFaceMatrix", _wrap_NormalTraceJumpIntegrator_AssembleFaceMatrix, METH_VARARGS, "\n"
		"AssembleFaceMatrix(NormalTraceJumpIntegrator self, FiniteElement el1, FiniteElement el2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		"AssembleFaceMatrix(NormalTraceJumpIntegrator self, FiniteElement trial_face_fe, FiniteElement test_fe1, FiniteElement test_fe2, FaceElementTransformations Trans, DenseMatrix elmat)\n"
		""},
	 { "delete_NormalTraceJumpIntegrator", _wrap_delete_NormalTraceJumpIntegrator, METH_O, "delete_NormalTraceJumpIntegrator(NormalTraceJumpIntegrator self)"},
	 { "NormalTraceJumpIntegrator_swigregister", NormalTraceJumpIntegrator_swigregister, METH_O, NULL},
	 { "NormalTraceJumpIntegrator_swiginit", NormalTraceJumpIntegrator_swiginit, METH_VARARGS, NULL},
	 { "new_DiscreteInterpolator", _wrap_new_DiscreteInterpolator, METH_NOARGS, "new_DiscreteInterpolator() -> DiscreteInterpolator"},
	 { "delete_DiscreteInterpolator", _wrap_delete_DiscreteInterpolator, METH_O, "delete_DiscreteInterpolator(DiscreteInterpolator self)"},
	 { "DiscreteInterpolator_swigregister", DiscreteInterpolator_swigregister, METH_O, NULL},
	 { "DiscreteInterpolator_swiginit", DiscreteInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_GradientInterpolator", _wrap_new_GradientInterpolator, METH_NOARGS, "new_GradientInterpolator() -> GradientInterpolator"},
	 { "delete_GradientInterpolator", _wrap_delete_GradientInterpolator, METH_O, "delete_GradientInterpolator(GradientInterpolator self)"},
	 { "GradientInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(GradientInterpolator self, FiniteElement h1_fe, FiniteElement nd_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "GradientInterpolator_AssemblePA", _wrap_GradientInterpolator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(GradientInterpolator self, FiniteElementSpace fes)\n"
		"AssemblePA(GradientInterpolator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "GradientInterpolator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(GradientInterpolator self, Vector x, Vector y)"},
	 { "GradientInterpolator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_GradientInterpolator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(GradientInterpolator self, Vector x, Vector y)"},
	 { "GradientInterpolator_swigregister", GradientInterpolator_swigregister, METH_O, NULL},
	 { "GradientInterpolator_swiginit", GradientInterpolator_swiginit, METH_VARARGS, NULL},
	 { "IdentityInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(IdentityInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "IdentityInterpolator_AssemblePA", _wrap_IdentityInterpolator_AssemblePA, METH_VARARGS, "\n"
		"AssemblePA(IdentityInterpolator self, FiniteElementSpace fes)\n"
		"AssemblePA(IdentityInterpolator self, FiniteElementSpace trial_fes, FiniteElementSpace test_fes)\n"
		""},
	 { "IdentityInterpolator_AddMultPA", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AddMultPA, METH_VARARGS|METH_KEYWORDS, "AddMultPA(IdentityInterpolator self, Vector x, Vector y)"},
	 { "IdentityInterpolator_AddMultTransposePA", (PyCFunction)(void(*)(void))_wrap_IdentityInterpolator_AddMultTransposePA, METH_VARARGS|METH_KEYWORDS, "AddMultTransposePA(IdentityInterpolator self, Vector x, Vector y)"},
	 { "new_IdentityInterpolator", _wrap_new_IdentityInterpolator, METH_NOARGS, "new_IdentityInterpolator() -> IdentityInterpolator"},
	 { "delete_IdentityInterpolator", _wrap_delete_IdentityInterpolator, METH_O, "delete_IdentityInterpolator(IdentityInterpolator self)"},
	 { "IdentityInterpolator_swigregister", IdentityInterpolator_swigregister, METH_O, NULL},
	 { "IdentityInterpolator_swiginit", IdentityInterpolator_swiginit, METH_VARARGS, NULL},
	 { "CurlInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_CurlInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(CurlInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_CurlInterpolator", _wrap_new_CurlInterpolator, METH_NOARGS, "new_CurlInterpolator() -> CurlInterpolator"},
	 { "delete_CurlInterpolator", _wrap_delete_CurlInterpolator, METH_O, "delete_CurlInterpolator(CurlInterpolator self)"},
	 { "CurlInterpolator_swigregister", CurlInterpolator_swigregister, METH_O, NULL},
	 { "CurlInterpolator_swiginit", CurlInterpolator_swiginit, METH_VARARGS, NULL},
	 { "DivergenceInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_DivergenceInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(DivergenceInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_DivergenceInterpolator", _wrap_new_DivergenceInterpolator, METH_NOARGS, "new_DivergenceInterpolator() -> DivergenceInterpolator"},
	 { "delete_DivergenceInterpolator", _wrap_delete_DivergenceInterpolator, METH_O, "delete_DivergenceInterpolator(DivergenceInterpolator self)"},
	 { "DivergenceInterpolator_swigregister", DivergenceInterpolator_swigregister, METH_O, NULL},
	 { "DivergenceInterpolator_swiginit", DivergenceInterpolator_swiginit, METH_VARARGS, NULL},
	 { "NormalInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_NormalInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(NormalInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "new_NormalInterpolator", _wrap_new_NormalInterpolator, METH_NOARGS, "new_NormalInterpolator() -> NormalInterpolator"},
	 { "delete_NormalInterpolator", _wrap_delete_NormalInterpolator, METH_O, "delete_NormalInterpolator(NormalInterpolator self)"},
	 { "NormalInterpolator_swigregister", NormalInterpolator_swigregister, METH_O, NULL},
	 { "NormalInterpolator_swiginit", NormalInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarProductInterpolator(Coefficient sc) -> ScalarProductInterpolator"},
	 { "ScalarProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(ScalarProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarProductInterpolator", _wrap_delete_ScalarProductInterpolator, METH_O, "delete_ScalarProductInterpolator(ScalarProductInterpolator self)"},
	 { "ScalarProductInterpolator_swigregister", ScalarProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarProductInterpolator_swiginit", ScalarProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarVectorProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarVectorProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarVectorProductInterpolator(Coefficient sc) -> ScalarVectorProductInterpolator"},
	 { "ScalarVectorProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarVectorProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(ScalarVectorProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarVectorProductInterpolator", _wrap_delete_ScalarVectorProductInterpolator, METH_O, "delete_ScalarVectorProductInterpolator(ScalarVectorProductInterpolator self)"},
	 { "ScalarVectorProductInterpolator_swigregister", ScalarVectorProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarVectorProductInterpolator_swiginit", ScalarVectorProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorScalarProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorScalarProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorScalarProductInterpolator(VectorCoefficient vc) -> VectorScalarProductInterpolator"},
	 { "VectorScalarProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorScalarProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorScalarProductInterpolator self, FiniteElement dom_fe, FiniteElement ran_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorScalarProductInterpolator", _wrap_delete_VectorScalarProductInterpolator, METH_O, "delete_VectorScalarProductInterpolator(VectorScalarProductInterpolator self)"},
	 { "VectorScalarProductInterpolator_swigregister", VectorScalarProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorScalarProductInterpolator_swiginit", VectorScalarProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_ScalarCrossProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_ScalarCrossProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_ScalarCrossProductInterpolator(VectorCoefficient vc) -> ScalarCrossProductInterpolator"},
	 { "ScalarCrossProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_ScalarCrossProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(ScalarCrossProductInterpolator self, FiniteElement nd_fe, FiniteElement l2_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_ScalarCrossProductInterpolator", _wrap_delete_ScalarCrossProductInterpolator, METH_O, "delete_ScalarCrossProductInterpolator(ScalarCrossProductInterpolator self)"},
	 { "ScalarCrossProductInterpolator_swigregister", ScalarCrossProductInterpolator_swigregister, METH_O, NULL},
	 { "ScalarCrossProductInterpolator_swiginit", ScalarCrossProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorCrossProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorCrossProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorCrossProductInterpolator(VectorCoefficient vc) -> VectorCrossProductInterpolator"},
	 { "VectorCrossProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorCrossProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorCrossProductInterpolator self, FiniteElement nd_fe, FiniteElement rt_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorCrossProductInterpolator", _wrap_delete_VectorCrossProductInterpolator, METH_O, "delete_VectorCrossProductInterpolator(VectorCrossProductInterpolator self)"},
	 { "VectorCrossProductInterpolator_swigregister", VectorCrossProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorCrossProductInterpolator_swiginit", VectorCrossProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { "new_VectorInnerProductInterpolator", (PyCFunction)(void(*)(void))_wrap_new_VectorInnerProductInterpolator, METH_VARARGS|METH_KEYWORDS, "new_VectorInnerProductInterpolator(VectorCoefficient vc) -> VectorInnerProductInterpolator"},
	 { "VectorInnerProductInterpolator_AssembleElementMatrix2", (PyCFunction)(void(*)(void))_wrap_VectorInnerProductInterpolator_AssembleElementMatrix2, METH_VARARGS|METH_KEYWORDS, "AssembleElementMatrix2(VectorInnerProductInterpolator self, FiniteElement rt_fe, FiniteElement l2_fe, ElementTransformation Trans, DenseMatrix elmat)"},
	 { "delete_VectorInnerProductInterpolator", _wrap_delete_VectorInnerProductInterpolator, METH_O, "delete_VectorInnerProductInterpolator(VectorInnerProductInterpolator self)"},
	 { "VectorInnerProductInterpolator_swigregister", VectorInnerProductInterpolator_swigregister, METH_O, NULL},
	 { "VectorInnerProductInterpolator_swiginit", VectorInnerProductInterpolator_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_mfem__BoundaryMassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MassIntegrator *) ((mfem::BoundaryMassIntegrator *) x));
}
static void *_p_mfem__ConservativeConvectionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::TransposeIntegrator *) ((mfem::ConservativeConvectionIntegrator *) x));
}
static void *_p_mfem__ConvectionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::ConvectionIntegrator *) x));
}
static void *_p_mfem__CurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::CurlCurlIntegrator *) x));
}
static void *_p_mfem__CurlInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::CurlInterpolator *) x));
}
static void *_p_mfem__DGDiffusionBR2IntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DGDiffusionBR2Integrator *) x));
}
static void *_p_mfem__DGDiffusionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DGDiffusionIntegrator *) x));
}
static void *_p_mfem__DGElasticityIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DGElasticityIntegrator *) x));
}
static void *_p_mfem__DGTraceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DGTraceIntegrator *) x));
}
static void *_p_mfem__DerivativeIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DerivativeIntegrator *) x));
}
static void *_p_mfem__DiffusionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DiffusionIntegrator *) x));
}
static void *_p_mfem__DiscreteInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DiscreteInterpolator *) x));
}
static void *_p_mfem__DivDivIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::DivDivIntegrator *) x));
}
static void *_p_mfem__DivergenceInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::DivergenceInterpolator *) x));
}
static void *_p_mfem__ElasticityIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::ElasticityIntegrator *) x));
}
static void *_p_mfem__GradientIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::GradientIntegrator *) x));
}
static void *_p_mfem__GradientInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::GradientInterpolator *) x));
}
static void *_p_mfem__GroupConvectionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::GroupConvectionIntegrator *) x));
}
static void *_p_mfem__IdentityInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::IdentityInterpolator *) x));
}
static void *_p_mfem__InverseIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::InverseIntegrator *) x));
}
static void *_p_mfem__LumpedIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::LumpedIntegrator *) x));
}
static void *_p_mfem__MassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::MassIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::MixedCurlIntegrator *) x));
}
static void *_p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDirectionalDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedDivGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDivGradIntegrator *) x));
}
static void *_p_mfem__MixedDotProductIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDotProductIntegrator *) x));
}
static void *_p_mfem__MixedGradDivIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedGradDivIntegrator *) x));
}
static void *_p_mfem__MixedGradGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedGradGradIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedScalarIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::MixedScalarIntegrator *) x));
}
static void *_p_mfem__MixedScalarMassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarMassIntegrator *) x));
}
static void *_p_mfem__MixedScalarVectorIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::MixedScalarVectorIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakGradientIntegrator *) x));
}
static void *_p_mfem__MixedVectorCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedVectorCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedVectorDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedVectorGradientIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedVectorGradientIntegrator *) x));
}
static void *_p_mfem__MixedVectorIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::MixedVectorIntegrator *) x));
}
static void *_p_mfem__MixedVectorMassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedVectorMassIntegrator *) x));
}
static void *_p_mfem__MixedVectorProductIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedVectorProductIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedVectorWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedVectorWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedVectorIntegrator *) ((mfem::MixedWeakDivCrossIntegrator *) x));
}
static void *_p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::MixedScalarVectorIntegrator *) ((mfem::MixedWeakGradDotIntegrator *) x));
}
static void *_p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::TransposeIntegrator *) ((mfem::NonconservativeDGTraceIntegrator *) x));
}
static void *_p_mfem__NormalInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::NormalInterpolator *) x));
}
static void *_p_mfem__NormalTraceJumpIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::NormalTraceJumpIntegrator *) x));
}
static void *_p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::ScalarCrossProductInterpolator *) x));
}
static void *_p_mfem__ScalarProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::ScalarProductInterpolator *) x));
}
static void *_p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::ScalarVectorProductInterpolator *) x));
}
static void *_p_mfem__SumIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::SumIntegrator *) x));
}
static void *_p_mfem__TraceJumpIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::TraceJumpIntegrator *) x));
}
static void *_p_mfem__TransposeIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::TransposeIntegrator *) x));
}
static void *_p_mfem__VectorCrossProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::VectorCrossProductInterpolator *) x));
}
static void *_p_mfem__VectorCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorCurlCurlIntegrator *) x));
}
static void *_p_mfem__VectorDiffusionIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorDiffusionIntegrator *) x));
}
static void *_p_mfem__VectorDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorFECurlIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorFECurlIntegrator *) x));
}
static void *_p_mfem__VectorFEDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorFEDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorFEMassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorFEMassIntegrator *) x));
}
static void *_p_mfem__VectorFEWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorFEWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorInnerProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::VectorInnerProductInterpolator *) x));
}
static void *_p_mfem__VectorMassIntegratorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *)  ((mfem::VectorMassIntegrator *) x));
}
static void *_p_mfem__VectorScalarProductInterpolatorTo_p_mfem__BilinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::BilinearFormIntegrator *) (mfem::DiscreteInterpolator *) ((mfem::VectorScalarProductInterpolator *) x));
}
static void *_p_ScalarNumbaCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *) (mfem::FunctionCoefficient *) ((ScalarNumbaCoefficient *) x));
}
static void *_p_mfem__ConstantCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::ConstantCoefficient *) x));
}
static void *_p_mfem__DeltaCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::DeltaCoefficient *) x));
}
static void *_p_mfem__DeterminantCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::DeterminantCoefficient *) x));
}
static void *_p_mfem__DivergenceGridFunctionCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::DivergenceGridFunctionCoefficient *) x));
}
static void *_p_mfem__ExtrudeCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::ExtrudeCoefficient *) x));
}
static void *_p_mfem__FunctionCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::FunctionCoefficient *) x));
}
static void *_p_mfem__GridFunctionCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::GridFunctionCoefficient *) x));
}
static void *_p_mfem__InnerProductCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::InnerProductCoefficient *) x));
}
static void *_p_mfem__PWCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::PWCoefficient *) x));
}
static void *_p_mfem__PWConstCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::PWConstCoefficient *) x));
}
static void *_p_mfem__PowerCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::PowerCoefficient *) x));
}
static void *_p_mfem__ProductCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::ProductCoefficient *) x));
}
static void *_p_mfem__PyCoefficientBaseTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *) (mfem::FunctionCoefficient *) ((mfem::PyCoefficientBase *) x));
}
static void *_p_mfem__QuadratureFunctionCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::QuadratureFunctionCoefficient *) x));
}
static void *_p_mfem__RatioCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::RatioCoefficient *) x));
}
static void *_p_mfem__RestrictedCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::RestrictedCoefficient *) x));
}
static void *_p_mfem__SumCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::SumCoefficient *) x));
}
static void *_p_mfem__TransformedCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::TransformedCoefficient *) x));
}
static void *_p_mfem__VectorRotProductCoefficientTo_p_mfem__Coefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Coefficient *)  ((mfem::VectorRotProductCoefficient *) x));
}
static void *_p_mfem__CurlInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::CurlInterpolator *) x));
}
static void *_p_mfem__DivergenceInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::DivergenceInterpolator *) x));
}
static void *_p_mfem__GradientInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::GradientInterpolator *) x));
}
static void *_p_mfem__IdentityInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::IdentityInterpolator *) x));
}
static void *_p_mfem__NormalInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::NormalInterpolator *) x));
}
static void *_p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::ScalarCrossProductInterpolator *) x));
}
static void *_p_mfem__ScalarProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::ScalarProductInterpolator *) x));
}
static void *_p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::ScalarVectorProductInterpolator *) x));
}
static void *_p_mfem__VectorCrossProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::VectorCrossProductInterpolator *) x));
}
static void *_p_mfem__VectorInnerProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::VectorInnerProductInterpolator *) x));
}
static void *_p_mfem__VectorScalarProductInterpolatorTo_p_mfem__DiscreteInterpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::DiscreteInterpolator *)  ((mfem::VectorScalarProductInterpolator *) x));
}
static void *_p_mfem__FaceElementTransformationsTo_p_mfem__ElementTransformation(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::ElementTransformation *) (mfem::IsoparametricTransformation *) ((mfem::FaceElementTransformations *) x));
}
static void *_p_mfem__IsoparametricTransformationTo_p_mfem__ElementTransformation(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::ElementTransformation *)  ((mfem::IsoparametricTransformation *) x));
}
static void *_p_mfem__BiCubic2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::BiCubic2DFiniteElement *) x));
}
static void *_p_mfem__BiLinear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::BiLinear2DFiniteElement *) x));
}
static void *_p_mfem__BiQuad2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::BiQuad2DFiniteElement *) x));
}
static void *_p_mfem__BiQuadPos2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::BiQuadPos2DFiniteElement *) x));
}
static void *_p_mfem__CrouzeixRaviartFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::CrouzeixRaviartFiniteElement *) x));
}
static void *_p_mfem__CrouzeixRaviartQuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::CrouzeixRaviartQuadFiniteElement *) x));
}
static void *_p_mfem__Cubic1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Cubic1DFiniteElement *) x));
}
static void *_p_mfem__Cubic2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Cubic2DFiniteElement *) x));
}
static void *_p_mfem__Cubic3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Cubic3DFiniteElement *) x));
}
static void *_p_mfem__GaussBiLinear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::GaussBiLinear2DFiniteElement *) x));
}
static void *_p_mfem__GaussBiQuad2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::GaussBiQuad2DFiniteElement *) x));
}
static void *_p_mfem__GaussLinear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::GaussLinear2DFiniteElement *) x));
}
static void *_p_mfem__GaussQuad2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::GaussQuad2DFiniteElement *) x));
}
static void *_p_mfem__H1Pos_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::H1Pos_HexahedronElement *) x));
}
static void *_p_mfem__H1Pos_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::H1Pos_QuadrilateralElement *) x));
}
static void *_p_mfem__H1Pos_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::H1Pos_SegmentElement *) x));
}
static void *_p_mfem__H1Pos_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::H1Pos_TetrahedronElement *) x));
}
static void *_p_mfem__H1Pos_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::H1Pos_TriangleElement *) x));
}
static void *_p_mfem__H1Pos_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::H1Pos_WedgeElement *) x));
}
static void *_p_mfem__H1Ser_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *) ((mfem::H1Ser_QuadrilateralElement *) x));
}
static void *_p_mfem__H1_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::H1_HexahedronElement *) x));
}
static void *_p_mfem__H1_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::H1_QuadrilateralElement *) x));
}
static void *_p_mfem__H1_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::H1_SegmentElement *) x));
}
static void *_p_mfem__H1_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::H1_TetrahedronElement *) x));
}
static void *_p_mfem__H1_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::H1_TriangleElement *) x));
}
static void *_p_mfem__H1_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::H1_WedgeElement *) x));
}
static void *_p_mfem__L2Pos_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::L2Pos_HexahedronElement *) x));
}
static void *_p_mfem__L2Pos_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::L2Pos_QuadrilateralElement *) x));
}
static void *_p_mfem__L2Pos_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *)(mfem::PositiveTensorFiniteElement *) ((mfem::L2Pos_SegmentElement *) x));
}
static void *_p_mfem__L2Pos_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::L2Pos_TetrahedronElement *) x));
}
static void *_p_mfem__L2Pos_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::L2Pos_TriangleElement *) x));
}
static void *_p_mfem__L2Pos_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::L2Pos_WedgeElement *) x));
}
static void *_p_mfem__L2_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::L2_HexahedronElement *) x));
}
static void *_p_mfem__L2_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::L2_QuadrilateralElement *) x));
}
static void *_p_mfem__L2_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *)(mfem::NodalTensorFiniteElement *) ((mfem::L2_SegmentElement *) x));
}
static void *_p_mfem__L2_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::L2_TetrahedronElement *) x));
}
static void *_p_mfem__L2_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::L2_TriangleElement *) x));
}
static void *_p_mfem__L2_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::L2_WedgeElement *) x));
}
static void *_p_mfem__Lagrange1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Lagrange1DFiniteElement *) x));
}
static void *_p_mfem__LagrangeHexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::LagrangeHexFiniteElement *) x));
}
static void *_p_mfem__Linear1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Linear1DFiniteElement *) x));
}
static void *_p_mfem__Linear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Linear2DFiniteElement *) x));
}
static void *_p_mfem__Linear3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Linear3DFiniteElement *) x));
}
static void *_p_mfem__LinearPyramidFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::LinearPyramidFiniteElement *) x));
}
static void *_p_mfem__LinearWedgeFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::LinearWedgeFiniteElement *) x));
}
static void *_p_mfem__ND_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::VectorTensorFiniteElement *) ((mfem::ND_HexahedronElement *) x));
}
static void *_p_mfem__ND_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::VectorTensorFiniteElement *) ((mfem::ND_QuadrilateralElement *) x));
}
static void *_p_mfem__ND_R1D_PointElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_R1D_PointElement *) x));
}
static void *_p_mfem__ND_R1D_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_R1D_SegmentElement *) x));
}
static void *_p_mfem__ND_R2D_FiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_R2D_FiniteElement *) x));
}
static void *_p_mfem__ND_R2D_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::ND_R2D_FiniteElement *) ((mfem::ND_R2D_QuadrilateralElement *) x));
}
static void *_p_mfem__ND_R2D_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_R2D_SegmentElement *) x));
}
static void *_p_mfem__ND_R2D_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::ND_R2D_FiniteElement *) ((mfem::ND_R2D_TriangleElement *) x));
}
static void *_p_mfem__ND_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::VectorTensorFiniteElement *) ((mfem::ND_SegmentElement *) x));
}
static void *_p_mfem__ND_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_TetrahedronElement *) x));
}
static void *_p_mfem__ND_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_TriangleElement *) x));
}
static void *_p_mfem__ND_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::ND_WedgeElement *) x));
}
static void *_p_mfem__NURBS1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NURBSFiniteElement *) ((mfem::NURBS1DFiniteElement *) x));
}
static void *_p_mfem__NURBS2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NURBSFiniteElement *) ((mfem::NURBS2DFiniteElement *) x));
}
static void *_p_mfem__NURBS3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NURBSFiniteElement *) ((mfem::NURBS3DFiniteElement *) x));
}
static void *_p_mfem__NURBSFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *) ((mfem::NURBSFiniteElement *) x));
}
static void *_p_mfem__Nedelec1HexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::Nedelec1HexFiniteElement *) x));
}
static void *_p_mfem__Nedelec1PyrFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::Nedelec1PyrFiniteElement *) x));
}
static void *_p_mfem__Nedelec1TetFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::Nedelec1TetFiniteElement *) x));
}
static void *_p_mfem__Nedelec1WdgFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::Nedelec1WdgFiniteElement *) x));
}
static void *_p_mfem__NodalFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *) ((mfem::NodalFiniteElement *) x));
}
static void *_p_mfem__NodalTensorFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::NodalTensorFiniteElement *) x));
}
static void *_p_mfem__P0HexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0HexFiniteElement *) x));
}
static void *_p_mfem__P0PyrFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0PyrFiniteElement *) x));
}
static void *_p_mfem__P0QuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0QuadFiniteElement *) x));
}
static void *_p_mfem__P0SegmentFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0SegmentFiniteElement *) x));
}
static void *_p_mfem__P0TetFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0TetFiniteElement *) x));
}
static void *_p_mfem__P0TriangleFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0TriangleFiniteElement *) x));
}
static void *_p_mfem__P0WdgFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P0WdgFiniteElement *) x));
}
static void *_p_mfem__P1OnQuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P1OnQuadFiniteElement *) x));
}
static void *_p_mfem__P1SegmentFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P1SegmentFiniteElement *) x));
}
static void *_p_mfem__P1TetNonConfFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P1TetNonConfFiniteElement *) x));
}
static void *_p_mfem__P2SegmentFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::P2SegmentFiniteElement *) x));
}
static void *_p_mfem__PointFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::PointFiniteElement *) x));
}
static void *_p_mfem__PositiveFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *) ((mfem::PositiveFiniteElement *) x));
}
static void *_p_mfem__PositiveTensorFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::PositiveTensorFiniteElement *) x));
}
static void *_p_mfem__Quad1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Quad1DFiniteElement *) x));
}
static void *_p_mfem__Quad2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Quad2DFiniteElement *) x));
}
static void *_p_mfem__QuadPos1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::PositiveFiniteElement *) ((mfem::QuadPos1DFiniteElement *) x));
}
static void *_p_mfem__Quadratic3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::Quadratic3DFiniteElement *) x));
}
static void *_p_mfem__RT0HexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0HexFiniteElement *) x));
}
static void *_p_mfem__RT0PyrFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0PyrFiniteElement *) x));
}
static void *_p_mfem__RT0QuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0QuadFiniteElement *) x));
}
static void *_p_mfem__RT0TetFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0TetFiniteElement *) x));
}
static void *_p_mfem__RT0TriangleFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0TriangleFiniteElement *) x));
}
static void *_p_mfem__RT0WdgFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT0WdgFiniteElement *) x));
}
static void *_p_mfem__RT1HexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT1HexFiniteElement *) x));
}
static void *_p_mfem__RT1QuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT1QuadFiniteElement *) x));
}
static void *_p_mfem__RT1TriangleFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT1TriangleFiniteElement *) x));
}
static void *_p_mfem__RT2QuadFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT2QuadFiniteElement *) x));
}
static void *_p_mfem__RT2TriangleFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT2TriangleFiniteElement *) x));
}
static void *_p_mfem__RT_HexahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::VectorTensorFiniteElement *) ((mfem::RT_HexahedronElement *) x));
}
static void *_p_mfem__RT_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::VectorTensorFiniteElement *) ((mfem::RT_QuadrilateralElement *) x));
}
static void *_p_mfem__RT_R1D_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_R1D_SegmentElement *) x));
}
static void *_p_mfem__RT_R2D_FiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_R2D_FiniteElement *) x));
}
static void *_p_mfem__RT_R2D_QuadrilateralElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::RT_R2D_FiniteElement *) ((mfem::RT_R2D_QuadrilateralElement *) x));
}
static void *_p_mfem__RT_R2D_SegmentElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_R2D_SegmentElement *) x));
}
static void *_p_mfem__RT_R2D_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *)(mfem::RT_R2D_FiniteElement *) ((mfem::RT_R2D_TriangleElement *) x));
}
static void *_p_mfem__RT_TetrahedronElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_TetrahedronElement *) x));
}
static void *_p_mfem__RT_TriangleElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_TriangleElement *) x));
}
static void *_p_mfem__RT_WedgeElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::RT_WedgeElement *) x));
}
static void *_p_mfem__RefinedBiLinear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RefinedBiLinear2DFiniteElement *) x));
}
static void *_p_mfem__RefinedLinear1DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RefinedLinear1DFiniteElement *) x));
}
static void *_p_mfem__RefinedLinear2DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RefinedLinear2DFiniteElement *) x));
}
static void *_p_mfem__RefinedLinear3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RefinedLinear3DFiniteElement *) x));
}
static void *_p_mfem__RefinedTriLinear3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RefinedTriLinear3DFiniteElement *) x));
}
static void *_p_mfem__RotTriLinearHexFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::RotTriLinearHexFiniteElement *) x));
}
static void *_p_mfem__ScalarFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *)  ((mfem::ScalarFiniteElement *) x));
}
static void *_p_mfem__TriLinear3DFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::ScalarFiniteElement *)(mfem::NodalFiniteElement *) ((mfem::TriLinear3DFiniteElement *) x));
}
static void *_p_mfem__VectorFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *)  ((mfem::VectorFiniteElement *) x));
}
static void *_p_mfem__VectorTensorFiniteElementTo_p_mfem__FiniteElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::FiniteElement *) (mfem::VectorFiniteElement *) ((mfem::VectorTensorFiniteElement *) x));
}
static void *_p_mfem__BoundaryMassIntegratorTo_p_mfem__MassIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MassIntegrator *)  ((mfem::BoundaryMassIntegrator *) x));
}
static void *_p_MatrixNumbaCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *) (mfem::MatrixFunctionCoefficient *) ((MatrixNumbaCoefficient *) x));
}
static void *_p_mfem__CrossCrossCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::CrossCrossCoefficient *) x));
}
static void *_p_mfem__IdentityMatrixCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::IdentityMatrixCoefficient *) x));
}
static void *_p_mfem__InverseMatrixCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::InverseMatrixCoefficient *) x));
}
static void *_p_mfem__MatrixArrayCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixArrayCoefficient *) x));
}
static void *_p_mfem__MatrixConstantCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixConstantCoefficient *) x));
}
static void *_p_mfem__MatrixFunctionCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixFunctionCoefficient *) x));
}
static void *_p_mfem__MatrixProductCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixProductCoefficient *) x));
}
static void *_p_mfem__MatrixPyCoefficientBaseTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *) (mfem::MatrixFunctionCoefficient *) ((mfem::MatrixPyCoefficientBase *) x));
}
static void *_p_mfem__MatrixRestrictedCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixRestrictedCoefficient *) x));
}
static void *_p_mfem__MatrixSumCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::MatrixSumCoefficient *) x));
}
static void *_p_mfem__OuterProductCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::OuterProductCoefficient *) x));
}
static void *_p_mfem__PWMatrixCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::PWMatrixCoefficient *) x));
}
static void *_p_mfem__ScalarMatrixProductCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::ScalarMatrixProductCoefficient *) x));
}
static void *_p_mfem__SymmetricMatrixCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::SymmetricMatrixCoefficient *) x));
}
static void *_p_mfem__SymmetricMatrixConstantCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *) (mfem::SymmetricMatrixCoefficient *) ((mfem::SymmetricMatrixConstantCoefficient *) x));
}
static void *_p_mfem__SymmetricMatrixFunctionCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *) (mfem::SymmetricMatrixCoefficient *) ((mfem::SymmetricMatrixFunctionCoefficient *) x));
}
static void *_p_mfem__TransposeMatrixCoefficientTo_p_mfem__MatrixCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MatrixCoefficient *)  ((mfem::TransposeMatrixCoefficient *) x));
}
static void *_p_mfem__MixedScalarCurlIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedScalarMassIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarMassIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarWeakDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__MixedScalarIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarIntegrator *)  ((mfem::MixedScalarWeakGradientIntegrator *) x));
}
static void *_p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedDirectionalDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedDivGradIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedDivGradIntegrator *) x));
}
static void *_p_mfem__MixedDotProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedDotProductIntegrator *) x));
}
static void *_p_mfem__MixedGradDivIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedGradDivIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarWeakCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedScalarWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedVectorDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedVectorProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedVectorProductIntegrator *) x));
}
static void *_p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__MixedScalarVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedScalarVectorIntegrator *)  ((mfem::MixedWeakGradDotIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossCurlGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossGradCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossGradGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossProductIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedCurlCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedGradGradIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedGradGradIntegrator *) x));
}
static void *_p_mfem__MixedVectorCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedVectorCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorGradientIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedVectorGradientIntegrator *) x));
}
static void *_p_mfem__MixedVectorMassIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedVectorMassIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedVectorWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedVectorWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__MixedVectorIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::MixedVectorIntegrator *)  ((mfem::MixedWeakDivCrossIntegrator *) x));
}
static void *_p_mfem__BilinearFormIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *)  ((mfem::BilinearFormIntegrator *) x));
}
static void *_p_mfem__BoundaryMassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MassIntegrator *) ((mfem::BoundaryMassIntegrator *) x));
}
static void *_p_mfem__ConservativeConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::TransposeIntegrator *) ((mfem::ConservativeConvectionIntegrator *) x));
}
static void *_p_mfem__ConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::ConvectionIntegrator *) x));
}
static void *_p_mfem__ConvectiveVectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::VectorConvectionNLFIntegrator *) ((mfem::ConvectiveVectorConvectionNLFIntegrator *) x));
}
static void *_p_mfem__CurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::CurlCurlIntegrator *) x));
}
static void *_p_mfem__CurlInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::CurlInterpolator *) x));
}
static void *_p_mfem__DGDiffusionBR2IntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DGDiffusionBR2Integrator *) x));
}
static void *_p_mfem__DGDiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DGDiffusionIntegrator *) x));
}
static void *_p_mfem__DGElasticityIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DGElasticityIntegrator *) x));
}
static void *_p_mfem__DGTraceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DGTraceIntegrator *) x));
}
static void *_p_mfem__DerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DerivativeIntegrator *) x));
}
static void *_p_mfem__DiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DiffusionIntegrator *) x));
}
static void *_p_mfem__DiscreteInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DiscreteInterpolator *) x));
}
static void *_p_mfem__DivDivIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::DivDivIntegrator *) x));
}
static void *_p_mfem__DivergenceInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::DivergenceInterpolator *) x));
}
static void *_p_mfem__ElasticityIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::ElasticityIntegrator *) x));
}
static void *_p_mfem__GradientIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::GradientIntegrator *) x));
}
static void *_p_mfem__GradientInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::GradientInterpolator *) x));
}
static void *_p_mfem__GroupConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::GroupConvectionIntegrator *) x));
}
static void *_p_mfem__HyperelasticNLFIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *)  ((mfem::HyperelasticNLFIntegrator *) x));
}
static void *_p_mfem__IdentityInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::IdentityInterpolator *) x));
}
static void *_p_mfem__InverseIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::InverseIntegrator *) x));
}
static void *_p_mfem__LumpedIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::LumpedIntegrator *) x));
}
static void *_p_mfem__MassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::MassIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradCurlIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedCurlCurlIntegrator *) x));
}
static void *_p_mfem__MixedCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::MixedCurlIntegrator *) x));
}
static void *_p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDirectionalDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedDivGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDivGradIntegrator *) x));
}
static void *_p_mfem__MixedDotProductIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedDotProductIntegrator *) x));
}
static void *_p_mfem__MixedGradDivIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedGradDivIntegrator *) x));
}
static void *_p_mfem__MixedGradGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedGradGradIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossGradIntegrator *) x));
}
static void *_p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedScalarIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::MixedScalarIntegrator *) x));
}
static void *_p_mfem__MixedScalarMassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarMassIntegrator *) x));
}
static void *_p_mfem__MixedScalarVectorIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::MixedScalarVectorIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakCrossProductIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakDerivativeIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedScalarWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarIntegrator *) ((mfem::MixedScalarWeakGradientIntegrator *) x));
}
static void *_p_mfem__MixedVectorCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedVectorCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedVectorDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedVectorGradientIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedVectorGradientIntegrator *) x));
}
static void *_p_mfem__MixedVectorIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::MixedVectorIntegrator *) x));
}
static void *_p_mfem__MixedVectorMassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedVectorMassIntegrator *) x));
}
static void *_p_mfem__MixedVectorProductIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedVectorProductIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedVectorWeakCurlIntegrator *) x));
}
static void *_p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedVectorWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedWeakCurlCrossIntegrator *) x));
}
static void *_p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedVectorIntegrator *) ((mfem::MixedWeakDivCrossIntegrator *) x));
}
static void *_p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::MixedScalarVectorIntegrator *) ((mfem::MixedWeakGradDotIntegrator *) x));
}
static void *_p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::TransposeIntegrator *) ((mfem::NonconservativeDGTraceIntegrator *) x));
}
static void *_p_mfem__NormalInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::NormalInterpolator *) x));
}
static void *_p_mfem__NormalTraceJumpIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::NormalTraceJumpIntegrator *) x));
}
static void *_p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::ScalarCrossProductInterpolator *) x));
}
static void *_p_mfem__ScalarProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::ScalarProductInterpolator *) x));
}
static void *_p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::ScalarVectorProductInterpolator *) x));
}
static void *_p_mfem__SkewSymmetricVectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::VectorConvectionNLFIntegrator *) ((mfem::SkewSymmetricVectorConvectionNLFIntegrator *) x));
}
static void *_p_mfem__SumIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::SumIntegrator *) x));
}
static void *_p_mfem__TraceJumpIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::TraceJumpIntegrator *) x));
}
static void *_p_mfem__TransposeIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::TransposeIntegrator *) x));
}
static void *_p_mfem__VectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *)  ((mfem::VectorConvectionNLFIntegrator *) x));
}
static void *_p_mfem__VectorCrossProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::VectorCrossProductInterpolator *) x));
}
static void *_p_mfem__VectorCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorCurlCurlIntegrator *) x));
}
static void *_p_mfem__VectorDiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorDiffusionIntegrator *) x));
}
static void *_p_mfem__VectorDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorFECurlIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorFECurlIntegrator *) x));
}
static void *_p_mfem__VectorFEDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorFEDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorFEMassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorFEMassIntegrator *) x));
}
static void *_p_mfem__VectorFEWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorFEWeakDivergenceIntegrator *) x));
}
static void *_p_mfem__VectorInnerProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::VectorInnerProductInterpolator *) x));
}
static void *_p_mfem__VectorMassIntegratorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *) ((mfem::VectorMassIntegrator *) x));
}
static void *_p_mfem__VectorScalarProductInterpolatorTo_p_mfem__NonlinearFormIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::NonlinearFormIntegrator *) (mfem::BilinearFormIntegrator *)(mfem::DiscreteInterpolator *) ((mfem::VectorScalarProductInterpolator *) x));
}
static void *_p_mfem__AbstractSparseMatrixTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Matrix *) ((mfem::AbstractSparseMatrix *) x));
}
static void *_p_mfem__ConstrainedOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::ConstrainedOperator *) x));
}
static void *_p_mfem__DenseMatrixTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Matrix *) ((mfem::DenseMatrix *) x));
}
static void *_p_mfem__DenseMatrixInverseTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Solver *)(mfem::MatrixInverse *) ((mfem::DenseMatrixInverse *) x));
}
static void *_p_mfem__DenseSymmetricMatrixTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Matrix *) ((mfem::DenseSymmetricMatrix *) x));
}
static void *_p_mfem__ElementRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::ElementRestrictionOperator *) ((mfem::ElementRestriction *) x));
}
static void *_p_mfem__ElementRestrictionOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::ElementRestrictionOperator *) x));
}
static void *_p_mfem__FaceRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::FaceRestriction *) x));
}
static void *_p_mfem__H1FaceRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::FaceRestriction *) ((mfem::H1FaceRestriction *) x));
}
static void *_p_mfem__IdentityOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::IdentityOperator *) x));
}
static void *_p_mfem__L2ElementRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::ElementRestrictionOperator *) ((mfem::L2ElementRestriction *) x));
}
static void *_p_mfem__L2FaceRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::FaceRestriction *) ((mfem::L2FaceRestriction *) x));
}
static void *_p_mfem__MatrixTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::Matrix *) x));
}
static void *_p_mfem__MatrixInverseTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Solver *) ((mfem::MatrixInverse *) x));
}
static void *_p_mfem__NCL2FaceRestrictionTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::FaceRestriction *)(mfem::L2FaceRestriction *) ((mfem::NCL2FaceRestriction *) x));
}
static void *_p_mfem__ProductOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::ProductOperator *) x));
}
static void *_p_mfem__PyOperatorBaseTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::PyOperatorBase *) x));
}
static void *_p_mfem__PyTimeDependentOperatorBaseTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::TimeDependentOperator *) ((mfem::PyTimeDependentOperatorBase *) x));
}
static void *_p_mfem__RAPOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::RAPOperator *) x));
}
static void *_p_mfem__RectangularConstrainedOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::RectangularConstrainedOperator *) x));
}
static void *_p_mfem__ScaledOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::ScaledOperator *) x));
}
static void *_p_mfem__SecondOrderTimeDependentOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::TimeDependentOperator *) ((mfem::SecondOrderTimeDependentOperator *) x));
}
static void *_p_mfem__SolverTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::Solver *) x));
}
static void *_p_mfem__SparseMatrixTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::Matrix *)(mfem::AbstractSparseMatrix *) ((mfem::SparseMatrix *) x));
}
static void *_p_mfem__TimeDependentAdjointOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *) (mfem::TimeDependentOperator *) ((mfem::TimeDependentAdjointOperator *) x));
}
static void *_p_mfem__TimeDependentOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::TimeDependentOperator *) x));
}
static void *_p_mfem__TransposeOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::TransposeOperator *) x));
}
static void *_p_mfem__TripleProductOperatorTo_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator *)  ((mfem::TripleProductOperator *) x));
}
static void *_p_mfem__DenseMatrixInverseTo_p_mfem__Solver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Solver *) (mfem::MatrixInverse *) ((mfem::DenseMatrixInverse *) x));
}
static void *_p_mfem__MatrixInverseTo_p_mfem__Solver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Solver *)  ((mfem::MatrixInverse *) x));
}
static void *_p_mfem__ConservativeConvectionIntegratorTo_p_mfem__TransposeIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::TransposeIntegrator *)  ((mfem::ConservativeConvectionIntegrator *) x));
}
static void *_p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__TransposeIntegrator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::TransposeIntegrator *)  ((mfem::NonconservativeDGTraceIntegrator *) x));
}
static void *_p_mfem__CoefficientVectorTo_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector *)  ((mfem::CoefficientVector *) x));
}
static void *_p_mfem__GridFunctionTo_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector *)  ((mfem::GridFunction *) x));
}
static void *_p_mfem__LinearFormTo_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector *)  ((mfem::LinearForm *) x));
}
static void *_p_VectorNumbaCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *) (mfem::VectorFunctionCoefficient *) ((VectorNumbaCoefficient *) x));
}
static void *_p_mfem__CurlGridFunctionCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::CurlGridFunctionCoefficient *) x));
}
static void *_p_mfem__GradientGridFunctionCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::GradientGridFunctionCoefficient *) x));
}
static void *_p_mfem__MatrixVectorProductCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::MatrixVectorProductCoefficient *) x));
}
static void *_p_mfem__NodeExtrudeCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::NodeExtrudeCoefficient *) x));
}
static void *_p_mfem__NormalizedVectorCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::NormalizedVectorCoefficient *) x));
}
static void *_p_mfem__PWVectorCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::PWVectorCoefficient *) x));
}
static void *_p_mfem__ScalarVectorProductCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::ScalarVectorProductCoefficient *) x));
}
static void *_p_mfem__VectorArrayCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorArrayCoefficient *) x));
}
static void *_p_mfem__VectorConstantCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorConstantCoefficient *) x));
}
static void *_p_mfem__VectorCrossProductCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorCrossProductCoefficient *) x));
}
static void *_p_mfem__VectorDeltaCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorDeltaCoefficient *) x));
}
static void *_p_mfem__VectorFunctionCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorFunctionCoefficient *) x));
}
static void *_p_mfem__VectorGridFunctionCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorGridFunctionCoefficient *) x));
}
static void *_p_mfem__VectorPyCoefficientBaseTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *) (mfem::VectorFunctionCoefficient *) ((mfem::VectorPyCoefficientBase *) x));
}
static void *_p_mfem__VectorQuadratureFunctionCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorQuadratureFunctionCoefficient *) x));
}
static void *_p_mfem__VectorRestrictedCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorRestrictedCoefficient *) x));
}
static void *_p_mfem__VectorSumCoefficientTo_p_mfem__VectorCoefficient(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::VectorCoefficient *)  ((mfem::VectorSumCoefficient *) x));
}
static void *_p_p_mfem__AbstractSparseMatrixTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Matrix *) ((mfem::AbstractSparseMatrix **) x));
}
static void *_p_p_mfem__ConstrainedOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::ConstrainedOperator **) x));
}
static void *_p_p_mfem__DenseMatrixTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Matrix *) ((mfem::DenseMatrix **) x));
}
static void *_p_p_mfem__DenseMatrixInverseTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Solver *)(mfem::MatrixInverse *) ((mfem::DenseMatrixInverse **) x));
}
static void *_p_p_mfem__DenseSymmetricMatrixTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Matrix *) ((mfem::DenseSymmetricMatrix **) x));
}
static void *_p_p_mfem__ElementRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::ElementRestrictionOperator *) ((mfem::ElementRestriction **) x));
}
static void *_p_p_mfem__ElementRestrictionOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::ElementRestrictionOperator **) x));
}
static void *_p_p_mfem__FaceRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::FaceRestriction **) x));
}
static void *_p_p_mfem__H1FaceRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::FaceRestriction *) ((mfem::H1FaceRestriction **) x));
}
static void *_p_p_mfem__IdentityOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::IdentityOperator **) x));
}
static void *_p_p_mfem__L2ElementRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::ElementRestrictionOperator *) ((mfem::L2ElementRestriction **) x));
}
static void *_p_p_mfem__L2FaceRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::FaceRestriction *) ((mfem::L2FaceRestriction **) x));
}
static void *_p_p_mfem__MatrixTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::Matrix **) x));
}
static void *_p_p_mfem__MatrixInverseTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Solver *) ((mfem::MatrixInverse **) x));
}
static void *_p_p_mfem__NCL2FaceRestrictionTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::FaceRestriction *)(mfem::L2FaceRestriction *) ((mfem::NCL2FaceRestriction **) x));
}
static void *_p_p_mfem__ProductOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::ProductOperator **) x));
}
static void *_p_p_mfem__PyOperatorBaseTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::PyOperatorBase **) x));
}
static void *_p_p_mfem__PyTimeDependentOperatorBaseTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::TimeDependentOperator *) ((mfem::PyTimeDependentOperatorBase **) x));
}
static void *_p_p_mfem__RAPOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::RAPOperator **) x));
}
static void *_p_p_mfem__RectangularConstrainedOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::RectangularConstrainedOperator **) x));
}
static void *_p_p_mfem__ScaledOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::ScaledOperator **) x));
}
static void *_p_p_mfem__SecondOrderTimeDependentOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::TimeDependentOperator *) ((mfem::SecondOrderTimeDependentOperator **) x));
}
static void *_p_p_mfem__SolverTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::Solver **) x));
}
static void *_p_p_mfem__SparseMatrixTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::Matrix *)(mfem::AbstractSparseMatrix *) ((mfem::SparseMatrix **) x));
}
static void *_p_p_mfem__TimeDependentAdjointOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **) (mfem::TimeDependentOperator *) ((mfem::TimeDependentAdjointOperator **) x));
}
static void *_p_p_mfem__TimeDependentOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::TimeDependentOperator **) x));
}
static void *_p_p_mfem__TransposeOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::TransposeOperator **) x));
}
static void *_p_p_mfem__TripleProductOperatorTo_p_p_mfem__Operator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Operator **)  ((mfem::TripleProductOperator **) x));
}
static void *_p_p_mfem__DenseMatrixInverseTo_p_p_mfem__Solver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Solver **) (mfem::MatrixInverse *) ((mfem::DenseMatrixInverse **) x));
}
static void *_p_p_mfem__MatrixInverseTo_p_p_mfem__Solver(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Solver **)  ((mfem::MatrixInverse **) x));
}
static void *_p_p_mfem__CoefficientVectorTo_p_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector **)  ((mfem::CoefficientVector **) x));
}
static void *_p_p_mfem__GridFunctionTo_p_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector **)  ((mfem::GridFunction **) x));
}
static void *_p_p_mfem__LinearFormTo_p_p_mfem__Vector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mfem::Vector **)  ((mfem::LinearForm **) x));
}
static swig_type_info _swigt___input = {"__input", "$input", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MatrixNumbaCoefficient = {"_p_MatrixNumbaCoefficient", "MatrixNumbaCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyMFEM__wFILE = {"_p_PyMFEM__wFILE", "PyMFEM::wFILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefCoord = {"_p_RefCoord", "RefCoord *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ScalarNumbaCoefficient = {"_p_ScalarNumbaCoefficient", "ScalarNumbaCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VectorNumbaCoefficient = {"_p_VectorNumbaCoefficient", "VectorNumbaCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_hex_t = {"_p_hex_t", "hex_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ArrayT_int_t = {"_p_mfem__ArrayT_int_t", "mfem::Array< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__BilinearFormIntegrator = {"_p_mfem__BilinearFormIntegrator", "mfem::BilinearFormIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__BoundaryMassIntegrator = {"_p_mfem__BoundaryMassIntegrator", "mfem::BoundaryMassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__Coefficient = {"_p_mfem__Coefficient", "mfem::Coefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ConstantCoefficient = {"_p_mfem__ConstantCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__DeltaCoefficient = {"_p_mfem__DeltaCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__DeterminantCoefficient = {"_p_mfem__DeterminantCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__DivergenceGridFunctionCoefficient = {"_p_mfem__DivergenceGridFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ExtrudeCoefficient = {"_p_mfem__ExtrudeCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__FunctionCoefficient = {"_p_mfem__FunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GridFunctionCoefficient = {"_p_mfem__GridFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__InnerProductCoefficient = {"_p_mfem__InnerProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PWCoefficient = {"_p_mfem__PWCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PWConstCoefficient = {"_p_mfem__PWConstCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PowerCoefficient = {"_p_mfem__PowerCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ProductCoefficient = {"_p_mfem__ProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PyCoefficientBase = {"_p_mfem__PyCoefficientBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__QuadratureFunctionCoefficient = {"_p_mfem__QuadratureFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RatioCoefficient = {"_p_mfem__RatioCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RestrictedCoefficient = {"_p_mfem__RestrictedCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SumCoefficient = {"_p_mfem__SumCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TransformedCoefficient = {"_p_mfem__TransformedCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorRotProductCoefficient = {"_p_mfem__VectorRotProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ConservativeConvectionIntegrator = {"_p_mfem__ConservativeConvectionIntegrator", "mfem::ConservativeConvectionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ConvectionIntegrator = {"_p_mfem__ConvectionIntegrator", "mfem::NonconservativeConvectionIntegrator *|mfem::ConvectionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__CurlCurlIntegrator = {"_p_mfem__CurlCurlIntegrator", "mfem::CurlCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__CurlInterpolator = {"_p_mfem__CurlInterpolator", "mfem::CurlInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DGDiffusionBR2Integrator = {"_p_mfem__DGDiffusionBR2Integrator", "mfem::DGDiffusionBR2Integrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DGDiffusionIntegrator = {"_p_mfem__DGDiffusionIntegrator", "mfem::DGDiffusionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DGElasticityIntegrator = {"_p_mfem__DGElasticityIntegrator", "mfem::DGElasticityIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DGTraceIntegrator = {"_p_mfem__DGTraceIntegrator", "mfem::ConservativeDGTraceIntegrator *|mfem::DGTraceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DenseMatrix = {"_p_mfem__DenseMatrix", "mfem::DenseMatrix *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DerivativeIntegrator = {"_p_mfem__DerivativeIntegrator", "mfem::DerivativeIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DiffusionIntegrator = {"_p_mfem__DiffusionIntegrator", "mfem::DiffusionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DiscreteInterpolator = {"_p_mfem__DiscreteInterpolator", "mfem::DiscreteInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DivDivIntegrator = {"_p_mfem__DivDivIntegrator", "mfem::DivDivIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__DivergenceInterpolator = {"_p_mfem__DivergenceInterpolator", "mfem::DivergenceInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ElasticityIntegrator = {"_p_mfem__ElasticityIntegrator", "mfem::ElasticityIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ElementTransformation = {"_p_mfem__ElementTransformation", "mfem::ElementTransformation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__IsoparametricTransformation = {"_p_mfem__IsoparametricTransformation", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__FaceElementTransformations = {"_p_mfem__FaceElementTransformations", "mfem::FaceElementTransformations *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__FiniteElement = {"_p_mfem__FiniteElement", "mfem::FiniteElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__BiCubic2DFiniteElement = {"_p_mfem__BiCubic2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__BiLinear2DFiniteElement = {"_p_mfem__BiLinear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__BiQuad2DFiniteElement = {"_p_mfem__BiQuad2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__BiQuadPos2DFiniteElement = {"_p_mfem__BiQuadPos2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__CrouzeixRaviartFiniteElement = {"_p_mfem__CrouzeixRaviartFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__CrouzeixRaviartQuadFiniteElement = {"_p_mfem__CrouzeixRaviartQuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Cubic1DFiniteElement = {"_p_mfem__Cubic1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Cubic2DFiniteElement = {"_p_mfem__Cubic2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Cubic3DFiniteElement = {"_p_mfem__Cubic3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GaussBiLinear2DFiniteElement = {"_p_mfem__GaussBiLinear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GaussBiQuad2DFiniteElement = {"_p_mfem__GaussBiQuad2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GaussLinear2DFiniteElement = {"_p_mfem__GaussLinear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GaussQuad2DFiniteElement = {"_p_mfem__GaussQuad2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_HexahedronElement = {"_p_mfem__H1Pos_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_QuadrilateralElement = {"_p_mfem__H1Pos_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_SegmentElement = {"_p_mfem__H1Pos_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_TetrahedronElement = {"_p_mfem__H1Pos_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_TriangleElement = {"_p_mfem__H1Pos_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Pos_WedgeElement = {"_p_mfem__H1Pos_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1Ser_QuadrilateralElement = {"_p_mfem__H1Ser_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_HexahedronElement = {"_p_mfem__H1_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_QuadrilateralElement = {"_p_mfem__H1_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_SegmentElement = {"_p_mfem__H1_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_TetrahedronElement = {"_p_mfem__H1_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_TriangleElement = {"_p_mfem__H1_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1_WedgeElement = {"_p_mfem__H1_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_HexahedronElement = {"_p_mfem__L2Pos_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_QuadrilateralElement = {"_p_mfem__L2Pos_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_SegmentElement = {"_p_mfem__L2Pos_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_TetrahedronElement = {"_p_mfem__L2Pos_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_TriangleElement = {"_p_mfem__L2Pos_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2Pos_WedgeElement = {"_p_mfem__L2Pos_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_HexahedronElement = {"_p_mfem__L2_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_QuadrilateralElement = {"_p_mfem__L2_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_SegmentElement = {"_p_mfem__L2_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_TetrahedronElement = {"_p_mfem__L2_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_TriangleElement = {"_p_mfem__L2_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2_WedgeElement = {"_p_mfem__L2_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Lagrange1DFiniteElement = {"_p_mfem__Lagrange1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__LagrangeHexFiniteElement = {"_p_mfem__LagrangeHexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Linear1DFiniteElement = {"_p_mfem__Linear1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Linear2DFiniteElement = {"_p_mfem__Linear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Linear3DFiniteElement = {"_p_mfem__Linear3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__LinearPyramidFiniteElement = {"_p_mfem__LinearPyramidFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__LinearWedgeFiniteElement = {"_p_mfem__LinearWedgeFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_HexahedronElement = {"_p_mfem__ND_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_QuadrilateralElement = {"_p_mfem__ND_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R1D_PointElement = {"_p_mfem__ND_R1D_PointElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R1D_SegmentElement = {"_p_mfem__ND_R1D_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R2D_FiniteElement = {"_p_mfem__ND_R2D_FiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R2D_QuadrilateralElement = {"_p_mfem__ND_R2D_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R2D_SegmentElement = {"_p_mfem__ND_R2D_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_R2D_TriangleElement = {"_p_mfem__ND_R2D_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_SegmentElement = {"_p_mfem__ND_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_TetrahedronElement = {"_p_mfem__ND_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_TriangleElement = {"_p_mfem__ND_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ND_WedgeElement = {"_p_mfem__ND_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NURBS1DFiniteElement = {"_p_mfem__NURBS1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NURBS2DFiniteElement = {"_p_mfem__NURBS2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NURBS3DFiniteElement = {"_p_mfem__NURBS3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NURBSFiniteElement = {"_p_mfem__NURBSFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Nedelec1HexFiniteElement = {"_p_mfem__Nedelec1HexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Nedelec1PyrFiniteElement = {"_p_mfem__Nedelec1PyrFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Nedelec1TetFiniteElement = {"_p_mfem__Nedelec1TetFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Nedelec1WdgFiniteElement = {"_p_mfem__Nedelec1WdgFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NodalFiniteElement = {"_p_mfem__NodalFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NodalTensorFiniteElement = {"_p_mfem__NodalTensorFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0HexFiniteElement = {"_p_mfem__P0HexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0PyrFiniteElement = {"_p_mfem__P0PyrFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0QuadFiniteElement = {"_p_mfem__P0QuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0SegmentFiniteElement = {"_p_mfem__P0SegmentFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0TetFiniteElement = {"_p_mfem__P0TetFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0TriangleFiniteElement = {"_p_mfem__P0TriangleFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P0WdgFiniteElement = {"_p_mfem__P0WdgFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P1OnQuadFiniteElement = {"_p_mfem__P1OnQuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P1SegmentFiniteElement = {"_p_mfem__P1SegmentFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P1TetNonConfFiniteElement = {"_p_mfem__P1TetNonConfFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__P2SegmentFiniteElement = {"_p_mfem__P2SegmentFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PointFiniteElement = {"_p_mfem__PointFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PositiveFiniteElement = {"_p_mfem__PositiveFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PositiveTensorFiniteElement = {"_p_mfem__PositiveTensorFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Quad1DFiniteElement = {"_p_mfem__Quad1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Quad2DFiniteElement = {"_p_mfem__Quad2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__QuadPos1DFiniteElement = {"_p_mfem__QuadPos1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Quadratic3DFiniteElement = {"_p_mfem__Quadratic3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0HexFiniteElement = {"_p_mfem__RT0HexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0PyrFiniteElement = {"_p_mfem__RT0PyrFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0QuadFiniteElement = {"_p_mfem__RT0QuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0TetFiniteElement = {"_p_mfem__RT0TetFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0TriangleFiniteElement = {"_p_mfem__RT0TriangleFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT0WdgFiniteElement = {"_p_mfem__RT0WdgFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT1HexFiniteElement = {"_p_mfem__RT1HexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT1QuadFiniteElement = {"_p_mfem__RT1QuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT1TriangleFiniteElement = {"_p_mfem__RT1TriangleFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT2QuadFiniteElement = {"_p_mfem__RT2QuadFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT2TriangleFiniteElement = {"_p_mfem__RT2TriangleFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_HexahedronElement = {"_p_mfem__RT_HexahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_QuadrilateralElement = {"_p_mfem__RT_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_R1D_SegmentElement = {"_p_mfem__RT_R1D_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_R2D_FiniteElement = {"_p_mfem__RT_R2D_FiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_R2D_QuadrilateralElement = {"_p_mfem__RT_R2D_QuadrilateralElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_R2D_SegmentElement = {"_p_mfem__RT_R2D_SegmentElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_R2D_TriangleElement = {"_p_mfem__RT_R2D_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_TetrahedronElement = {"_p_mfem__RT_TetrahedronElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_TriangleElement = {"_p_mfem__RT_TriangleElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RT_WedgeElement = {"_p_mfem__RT_WedgeElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RefinedBiLinear2DFiniteElement = {"_p_mfem__RefinedBiLinear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RefinedLinear1DFiniteElement = {"_p_mfem__RefinedLinear1DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RefinedLinear2DFiniteElement = {"_p_mfem__RefinedLinear2DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RefinedLinear3DFiniteElement = {"_p_mfem__RefinedLinear3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RefinedTriLinear3DFiniteElement = {"_p_mfem__RefinedTriLinear3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RotTriLinearHexFiniteElement = {"_p_mfem__RotTriLinearHexFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ScalarFiniteElement = {"_p_mfem__ScalarFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TriLinear3DFiniteElement = {"_p_mfem__TriLinear3DFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorFiniteElement = {"_p_mfem__VectorFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorTensorFiniteElement = {"_p_mfem__VectorTensorFiniteElement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__FiniteElementSpace = {"_p_mfem__FiniteElementSpace", "mfem::FiniteElementSpace *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__GradientIntegrator = {"_p_mfem__GradientIntegrator", "mfem::GradientIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__GradientInterpolator = {"_p_mfem__GradientInterpolator", "mfem::GradientInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__GridFunction = {"_p_mfem__GridFunction", "mfem::GridFunction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__GroupConvectionIntegrator = {"_p_mfem__GroupConvectionIntegrator", "mfem::GroupConvectionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__IdentityInterpolator = {"_p_mfem__IdentityInterpolator", "mfem::IdentityInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__IntegrationPoint = {"_p_mfem__IntegrationPoint", "mfem::IntegrationPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__IntegrationRule = {"_p_mfem__IntegrationRule", "mfem::IntegrationRule *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__InverseIntegrator = {"_p_mfem__InverseIntegrator", "mfem::InverseIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__L2_FECollection = {"_p_mfem__L2_FECollection", "mfem::DG_FECollection *|mfem::L2_FECollection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__LumpedIntegrator = {"_p_mfem__LumpedIntegrator", "mfem::LumpedIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MassIntegrator = {"_p_mfem__MassIntegrator", "mfem::MassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MatrixCoefficient = {"_p_mfem__MatrixCoefficient", "mfem::MatrixCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__CrossCrossCoefficient = {"_p_mfem__CrossCrossCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__IdentityMatrixCoefficient = {"_p_mfem__IdentityMatrixCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__InverseMatrixCoefficient = {"_p_mfem__InverseMatrixCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixArrayCoefficient = {"_p_mfem__MatrixArrayCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixConstantCoefficient = {"_p_mfem__MatrixConstantCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixFunctionCoefficient = {"_p_mfem__MatrixFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixProductCoefficient = {"_p_mfem__MatrixProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixPyCoefficientBase = {"_p_mfem__MatrixPyCoefficientBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixRestrictedCoefficient = {"_p_mfem__MatrixRestrictedCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixSumCoefficient = {"_p_mfem__MatrixSumCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__OuterProductCoefficient = {"_p_mfem__OuterProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PWMatrixCoefficient = {"_p_mfem__PWMatrixCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ScalarMatrixProductCoefficient = {"_p_mfem__ScalarMatrixProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SymmetricMatrixCoefficient = {"_p_mfem__SymmetricMatrixCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SymmetricMatrixConstantCoefficient = {"_p_mfem__SymmetricMatrixConstantCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SymmetricMatrixFunctionCoefficient = {"_p_mfem__SymmetricMatrixFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TransposeMatrixCoefficient = {"_p_mfem__TransposeMatrixCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixVectorProductCoefficient = {"_p_mfem__MatrixVectorProductCoefficient", "mfem::MatVecCoefficient *|mfem::MatrixVectorProductCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossCurlCurlIntegrator = {"_p_mfem__MixedCrossCurlCurlIntegrator", "mfem::MixedCrossCurlCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossCurlGradIntegrator = {"_p_mfem__MixedCrossCurlGradIntegrator", "mfem::MixedCrossCurlGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossCurlIntegrator = {"_p_mfem__MixedCrossCurlIntegrator", "mfem::MixedCrossCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossGradCurlIntegrator = {"_p_mfem__MixedCrossGradCurlIntegrator", "mfem::MixedCrossGradCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossGradGradIntegrator = {"_p_mfem__MixedCrossGradGradIntegrator", "mfem::MixedCrossGradGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossGradIntegrator = {"_p_mfem__MixedCrossGradIntegrator", "mfem::MixedCrossGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCrossProductIntegrator = {"_p_mfem__MixedCrossProductIntegrator", "mfem::MixedCrossProductIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCurlCurlIntegrator = {"_p_mfem__MixedCurlCurlIntegrator", "mfem::MixedCurlCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedCurlIntegrator = {"_p_mfem__MixedCurlIntegrator", "mfem::MixedCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedDirectionalDerivativeIntegrator = {"_p_mfem__MixedDirectionalDerivativeIntegrator", "mfem::MixedDirectionalDerivativeIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedDivGradIntegrator = {"_p_mfem__MixedDivGradIntegrator", "mfem::MixedDivGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedDotProductIntegrator = {"_p_mfem__MixedDotProductIntegrator", "mfem::MixedDotProductIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedGradDivIntegrator = {"_p_mfem__MixedGradDivIntegrator", "mfem::MixedGradDivIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedGradGradIntegrator = {"_p_mfem__MixedGradGradIntegrator", "mfem::MixedGradGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarCrossCurlIntegrator = {"_p_mfem__MixedScalarCrossCurlIntegrator", "mfem::MixedScalarCrossCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarCrossGradIntegrator = {"_p_mfem__MixedScalarCrossGradIntegrator", "mfem::MixedScalarCrossGradIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarCrossProductIntegrator = {"_p_mfem__MixedScalarCrossProductIntegrator", "mfem::MixedScalarCrossProductIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarCurlIntegrator = {"_p_mfem__MixedScalarCurlIntegrator", "mfem::MixedScalarCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarDerivativeIntegrator = {"_p_mfem__MixedScalarDerivativeIntegrator", "mfem::MixedScalarDerivativeIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarDivergenceIntegrator = {"_p_mfem__MixedScalarDivergenceIntegrator", "mfem::MixedScalarDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarIntegrator = {"_p_mfem__MixedScalarIntegrator", "mfem::MixedScalarIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarMassIntegrator = {"_p_mfem__MixedScalarMassIntegrator", "mfem::MixedScalarMassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarVectorIntegrator = {"_p_mfem__MixedScalarVectorIntegrator", "mfem::MixedScalarVectorIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakCrossProductIntegrator = {"_p_mfem__MixedScalarWeakCrossProductIntegrator", "mfem::MixedScalarWeakCrossProductIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator = {"_p_mfem__MixedScalarWeakCurlCrossIntegrator", "mfem::MixedScalarWeakCurlCrossIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakCurlIntegrator = {"_p_mfem__MixedScalarWeakCurlIntegrator", "mfem::MixedScalarWeakCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakDerivativeIntegrator = {"_p_mfem__MixedScalarWeakDerivativeIntegrator", "mfem::MixedScalarWeakDerivativeIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakDivergenceIntegrator = {"_p_mfem__MixedScalarWeakDivergenceIntegrator", "mfem::MixedScalarWeakDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedScalarWeakGradientIntegrator = {"_p_mfem__MixedScalarWeakGradientIntegrator", "mfem::MixedScalarWeakGradientIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorCurlIntegrator = {"_p_mfem__MixedVectorCurlIntegrator", "mfem::MixedVectorCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorDivergenceIntegrator = {"_p_mfem__MixedVectorDivergenceIntegrator", "mfem::MixedVectorDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorGradientIntegrator = {"_p_mfem__MixedVectorGradientIntegrator", "mfem::MixedVectorGradientIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorIntegrator = {"_p_mfem__MixedVectorIntegrator", "mfem::MixedVectorIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorMassIntegrator = {"_p_mfem__MixedVectorMassIntegrator", "mfem::MixedVectorMassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorProductIntegrator = {"_p_mfem__MixedVectorProductIntegrator", "mfem::MixedVectorProductIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorWeakCurlIntegrator = {"_p_mfem__MixedVectorWeakCurlIntegrator", "mfem::MixedVectorWeakCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedVectorWeakDivergenceIntegrator = {"_p_mfem__MixedVectorWeakDivergenceIntegrator", "mfem::MixedVectorWeakDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedWeakCurlCrossIntegrator = {"_p_mfem__MixedWeakCurlCrossIntegrator", "mfem::MixedWeakCurlCrossIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedWeakDivCrossIntegrator = {"_p_mfem__MixedWeakDivCrossIntegrator", "mfem::MixedWeakDivCrossIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__MixedWeakGradDotIntegrator = {"_p_mfem__MixedWeakGradDotIntegrator", "mfem::MixedWeakGradDotIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__NonconservativeDGTraceIntegrator = {"_p_mfem__NonconservativeDGTraceIntegrator", "mfem::NonconservativeDGTraceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__NonlinearFormIntegrator = {"_p_mfem__NonlinearFormIntegrator", "mfem::NonlinearFormIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ConvectiveVectorConvectionNLFIntegrator = {"_p_mfem__ConvectiveVectorConvectionNLFIntegrator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__HyperelasticNLFIntegrator = {"_p_mfem__HyperelasticNLFIntegrator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator = {"_p_mfem__SkewSymmetricVectorConvectionNLFIntegrator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorConvectionNLFIntegrator = {"_p_mfem__VectorConvectionNLFIntegrator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NormalInterpolator = {"_p_mfem__NormalInterpolator", "mfem::NormalInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__NormalTraceJumpIntegrator = {"_p_mfem__NormalTraceJumpIntegrator", "mfem::NormalTraceJumpIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__Operator = {"_p_mfem__Operator", "mfem::Operator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__AbstractSparseMatrix = {"_p_mfem__AbstractSparseMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ConstrainedOperator = {"_p_mfem__ConstrainedOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__DenseMatrixInverse = {"_p_mfem__DenseMatrixInverse", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__DenseSymmetricMatrix = {"_p_mfem__DenseSymmetricMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ElementRestriction = {"_p_mfem__ElementRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ElementRestrictionOperator = {"_p_mfem__ElementRestrictionOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__FaceRestriction = {"_p_mfem__FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__H1FaceRestriction = {"_p_mfem__H1FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__IdentityOperator = {"_p_mfem__IdentityOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2ElementRestriction = {"_p_mfem__L2ElementRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__L2FaceRestriction = {"_p_mfem__L2FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__Matrix = {"_p_mfem__Matrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__MatrixInverse = {"_p_mfem__MatrixInverse", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NCL2FaceRestriction = {"_p_mfem__NCL2FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ProductOperator = {"_p_mfem__ProductOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PyOperatorBase = {"_p_mfem__PyOperatorBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PyTimeDependentOperatorBase = {"_p_mfem__PyTimeDependentOperatorBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RAPOperator = {"_p_mfem__RAPOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__RectangularConstrainedOperator = {"_p_mfem__RectangularConstrainedOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ScaledOperator = {"_p_mfem__ScaledOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SecondOrderTimeDependentOperator = {"_p_mfem__SecondOrderTimeDependentOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__SparseMatrix = {"_p_mfem__SparseMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TimeDependentAdjointOperator = {"_p_mfem__TimeDependentAdjointOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TimeDependentOperator = {"_p_mfem__TimeDependentOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TransposeOperator = {"_p_mfem__TransposeOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__TripleProductOperator = {"_p_mfem__TripleProductOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__OperatorHandle = {"_p_mfem__OperatorHandle", "mfem::OperatorPtr *|mfem::OperatorHandle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__Refinement = {"_p_mfem__Refinement", "mfem::Refinement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ScalarCrossProductInterpolator = {"_p_mfem__ScalarCrossProductInterpolator", "mfem::ScalarCrossProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ScalarProductInterpolator = {"_p_mfem__ScalarProductInterpolator", "mfem::ScalarProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__ScalarVectorProductInterpolator = {"_p_mfem__ScalarVectorProductInterpolator", "mfem::ScalarVectorProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__Solver = {"_p_mfem__Solver", "mfem::Solver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__SumIntegrator = {"_p_mfem__SumIntegrator", "mfem::SumIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__TraceJumpIntegrator = {"_p_mfem__TraceJumpIntegrator", "mfem::TraceJumpIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__TransposeIntegrator = {"_p_mfem__TransposeIntegrator", "mfem::TransposeIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__Vector = {"_p_mfem__Vector", "mfem::Vector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__CoefficientVector = {"_p_mfem__CoefficientVector", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__LinearForm = {"_p_mfem__LinearForm", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorCoefficient = {"_p_mfem__VectorCoefficient", "mfem::DiagonalMatrixCoefficient *|mfem::VectorCoefficient *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__CurlGridFunctionCoefficient = {"_p_mfem__CurlGridFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__GradientGridFunctionCoefficient = {"_p_mfem__GradientGridFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NodeExtrudeCoefficient = {"_p_mfem__NodeExtrudeCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__NormalizedVectorCoefficient = {"_p_mfem__NormalizedVectorCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__PWVectorCoefficient = {"_p_mfem__PWVectorCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__ScalarVectorProductCoefficient = {"_p_mfem__ScalarVectorProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorArrayCoefficient = {"_p_mfem__VectorArrayCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorConstantCoefficient = {"_p_mfem__VectorConstantCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorCrossProductCoefficient = {"_p_mfem__VectorCrossProductCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorDeltaCoefficient = {"_p_mfem__VectorDeltaCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorFunctionCoefficient = {"_p_mfem__VectorFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorGridFunctionCoefficient = {"_p_mfem__VectorGridFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorPyCoefficientBase = {"_p_mfem__VectorPyCoefficientBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorQuadratureFunctionCoefficient = {"_p_mfem__VectorQuadratureFunctionCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorRestrictedCoefficient = {"_p_mfem__VectorRestrictedCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorSumCoefficient = {"_p_mfem__VectorSumCoefficient", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mfem__VectorCrossProductInterpolator = {"_p_mfem__VectorCrossProductInterpolator", "mfem::VectorCrossProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorCurlCurlIntegrator = {"_p_mfem__VectorCurlCurlIntegrator", "mfem::VectorCurlCurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorDiffusionIntegrator = {"_p_mfem__VectorDiffusionIntegrator", "mfem::VectorDiffusionIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorDivergenceIntegrator = {"_p_mfem__VectorDivergenceIntegrator", "mfem::VectorDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorFECurlIntegrator = {"_p_mfem__VectorFECurlIntegrator", "mfem::VectorFECurlIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorFEDivergenceIntegrator = {"_p_mfem__VectorFEDivergenceIntegrator", "mfem::VectorFEDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorFEMassIntegrator = {"_p_mfem__VectorFEMassIntegrator", "mfem::VectorFEMassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorFEWeakDivergenceIntegrator = {"_p_mfem__VectorFEWeakDivergenceIntegrator", "mfem::VectorFEWeakDivergenceIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorInnerProductInterpolator = {"_p_mfem__VectorInnerProductInterpolator", "mfem::VectorInnerProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorMassIntegrator = {"_p_mfem__VectorMassIntegrator", "mfem::VectorMassIntegrator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mfem__VectorScalarProductInterpolator = {"_p_mfem__VectorScalarProductInterpolator", "mfem::VectorScalarProductInterpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__FiniteElementSpace = {"_p_p_mfem__FiniteElementSpace", "mfem::FiniteElementSpace **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__IntegrationRule = {"_p_p_mfem__IntegrationRule", "mfem::IntegrationRule **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__Operator = {"_p_p_mfem__Operator", "mfem::Operator **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__AbstractSparseMatrix = {"_p_p_mfem__AbstractSparseMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__ConstrainedOperator = {"_p_p_mfem__ConstrainedOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__DenseMatrix = {"_p_p_mfem__DenseMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__DenseMatrixInverse = {"_p_p_mfem__DenseMatrixInverse", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__DenseSymmetricMatrix = {"_p_p_mfem__DenseSymmetricMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__ElementRestriction = {"_p_p_mfem__ElementRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__ElementRestrictionOperator = {"_p_p_mfem__ElementRestrictionOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__FaceRestriction = {"_p_p_mfem__FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__H1FaceRestriction = {"_p_p_mfem__H1FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__IdentityOperator = {"_p_p_mfem__IdentityOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__L2ElementRestriction = {"_p_p_mfem__L2ElementRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__L2FaceRestriction = {"_p_p_mfem__L2FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__Matrix = {"_p_p_mfem__Matrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__MatrixInverse = {"_p_p_mfem__MatrixInverse", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__NCL2FaceRestriction = {"_p_p_mfem__NCL2FaceRestriction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__ProductOperator = {"_p_p_mfem__ProductOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__PyOperatorBase = {"_p_p_mfem__PyOperatorBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__PyTimeDependentOperatorBase = {"_p_p_mfem__PyTimeDependentOperatorBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__RAPOperator = {"_p_p_mfem__RAPOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__RectangularConstrainedOperator = {"_p_p_mfem__RectangularConstrainedOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__ScaledOperator = {"_p_p_mfem__ScaledOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__SecondOrderTimeDependentOperator = {"_p_p_mfem__SecondOrderTimeDependentOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__SparseMatrix = {"_p_p_mfem__SparseMatrix", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__TimeDependentAdjointOperator = {"_p_p_mfem__TimeDependentAdjointOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__TimeDependentOperator = {"_p_p_mfem__TimeDependentOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__TransposeOperator = {"_p_p_mfem__TransposeOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__TripleProductOperator = {"_p_p_mfem__TripleProductOperator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__Solver = {"_p_p_mfem__Solver", "mfem::Solver **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__Vector = {"_p_p_mfem__Vector", "mfem::Vector **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_mfem__CoefficientVector = {"_p_p_mfem__CoefficientVector", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__GridFunction = {"_p_p_mfem__GridFunction", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_mfem__LinearForm = {"_p_p_mfem__LinearForm", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_pri_t = {"_p_pri_t", "pri_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pyr_t = {"_p_pyr_t", "pyr_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_quad_t = {"_p_quad_t", "quad_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_seg_t = {"_p_seg_t", "seg_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tet_t = {"_p_tet_t", "tet_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_tri_t = {"_p_tri_t", "tri_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt___input,
  &_swigt__p_MatrixNumbaCoefficient,
  &_swigt__p_PyMFEM__wFILE,
  &_swigt__p_RefCoord,
  &_swigt__p_ScalarNumbaCoefficient,
  &_swigt__p_VectorNumbaCoefficient,
  &_swigt__p_allocator_type,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_double,
  &_swigt__p_hex_t,
  &_swigt__p_int,
  &_swigt__p_mfem__AbstractSparseMatrix,
  &_swigt__p_mfem__ArrayT_int_t,
  &_swigt__p_mfem__BiCubic2DFiniteElement,
  &_swigt__p_mfem__BiLinear2DFiniteElement,
  &_swigt__p_mfem__BiQuad2DFiniteElement,
  &_swigt__p_mfem__BiQuadPos2DFiniteElement,
  &_swigt__p_mfem__BilinearFormIntegrator,
  &_swigt__p_mfem__BoundaryMassIntegrator,
  &_swigt__p_mfem__Coefficient,
  &_swigt__p_mfem__CoefficientVector,
  &_swigt__p_mfem__ConservativeConvectionIntegrator,
  &_swigt__p_mfem__ConstantCoefficient,
  &_swigt__p_mfem__ConstrainedOperator,
  &_swigt__p_mfem__ConvectionIntegrator,
  &_swigt__p_mfem__ConvectiveVectorConvectionNLFIntegrator,
  &_swigt__p_mfem__CrossCrossCoefficient,
  &_swigt__p_mfem__CrouzeixRaviartFiniteElement,
  &_swigt__p_mfem__CrouzeixRaviartQuadFiniteElement,
  &_swigt__p_mfem__Cubic1DFiniteElement,
  &_swigt__p_mfem__Cubic2DFiniteElement,
  &_swigt__p_mfem__Cubic3DFiniteElement,
  &_swigt__p_mfem__CurlCurlIntegrator,
  &_swigt__p_mfem__CurlGridFunctionCoefficient,
  &_swigt__p_mfem__CurlInterpolator,
  &_swigt__p_mfem__DGDiffusionBR2Integrator,
  &_swigt__p_mfem__DGDiffusionIntegrator,
  &_swigt__p_mfem__DGElasticityIntegrator,
  &_swigt__p_mfem__DGTraceIntegrator,
  &_swigt__p_mfem__DeltaCoefficient,
  &_swigt__p_mfem__DenseMatrix,
  &_swigt__p_mfem__DenseMatrixInverse,
  &_swigt__p_mfem__DenseSymmetricMatrix,
  &_swigt__p_mfem__DerivativeIntegrator,
  &_swigt__p_mfem__DeterminantCoefficient,
  &_swigt__p_mfem__DiffusionIntegrator,
  &_swigt__p_mfem__DiscreteInterpolator,
  &_swigt__p_mfem__DivDivIntegrator,
  &_swigt__p_mfem__DivergenceGridFunctionCoefficient,
  &_swigt__p_mfem__DivergenceInterpolator,
  &_swigt__p_mfem__ElasticityIntegrator,
  &_swigt__p_mfem__ElementRestriction,
  &_swigt__p_mfem__ElementRestrictionOperator,
  &_swigt__p_mfem__ElementTransformation,
  &_swigt__p_mfem__ExtrudeCoefficient,
  &_swigt__p_mfem__FaceElementTransformations,
  &_swigt__p_mfem__FaceRestriction,
  &_swigt__p_mfem__FiniteElement,
  &_swigt__p_mfem__FiniteElementSpace,
  &_swigt__p_mfem__FunctionCoefficient,
  &_swigt__p_mfem__GaussBiLinear2DFiniteElement,
  &_swigt__p_mfem__GaussBiQuad2DFiniteElement,
  &_swigt__p_mfem__GaussLinear2DFiniteElement,
  &_swigt__p_mfem__GaussQuad2DFiniteElement,
  &_swigt__p_mfem__GradientGridFunctionCoefficient,
  &_swigt__p_mfem__GradientIntegrator,
  &_swigt__p_mfem__GradientInterpolator,
  &_swigt__p_mfem__GridFunction,
  &_swigt__p_mfem__GridFunctionCoefficient,
  &_swigt__p_mfem__GroupConvectionIntegrator,
  &_swigt__p_mfem__H1FaceRestriction,
  &_swigt__p_mfem__H1Pos_HexahedronElement,
  &_swigt__p_mfem__H1Pos_QuadrilateralElement,
  &_swigt__p_mfem__H1Pos_SegmentElement,
  &_swigt__p_mfem__H1Pos_TetrahedronElement,
  &_swigt__p_mfem__H1Pos_TriangleElement,
  &_swigt__p_mfem__H1Pos_WedgeElement,
  &_swigt__p_mfem__H1Ser_QuadrilateralElement,
  &_swigt__p_mfem__H1_HexahedronElement,
  &_swigt__p_mfem__H1_QuadrilateralElement,
  &_swigt__p_mfem__H1_SegmentElement,
  &_swigt__p_mfem__H1_TetrahedronElement,
  &_swigt__p_mfem__H1_TriangleElement,
  &_swigt__p_mfem__H1_WedgeElement,
  &_swigt__p_mfem__HyperelasticNLFIntegrator,
  &_swigt__p_mfem__IdentityInterpolator,
  &_swigt__p_mfem__IdentityMatrixCoefficient,
  &_swigt__p_mfem__IdentityOperator,
  &_swigt__p_mfem__InnerProductCoefficient,
  &_swigt__p_mfem__IntegrationPoint,
  &_swigt__p_mfem__IntegrationRule,
  &_swigt__p_mfem__InverseIntegrator,
  &_swigt__p_mfem__InverseMatrixCoefficient,
  &_swigt__p_mfem__IsoparametricTransformation,
  &_swigt__p_mfem__L2ElementRestriction,
  &_swigt__p_mfem__L2FaceRestriction,
  &_swigt__p_mfem__L2Pos_HexahedronElement,
  &_swigt__p_mfem__L2Pos_QuadrilateralElement,
  &_swigt__p_mfem__L2Pos_SegmentElement,
  &_swigt__p_mfem__L2Pos_TetrahedronElement,
  &_swigt__p_mfem__L2Pos_TriangleElement,
  &_swigt__p_mfem__L2Pos_WedgeElement,
  &_swigt__p_mfem__L2_FECollection,
  &_swigt__p_mfem__L2_HexahedronElement,
  &_swigt__p_mfem__L2_QuadrilateralElement,
  &_swigt__p_mfem__L2_SegmentElement,
  &_swigt__p_mfem__L2_TetrahedronElement,
  &_swigt__p_mfem__L2_TriangleElement,
  &_swigt__p_mfem__L2_WedgeElement,
  &_swigt__p_mfem__Lagrange1DFiniteElement,
  &_swigt__p_mfem__LagrangeHexFiniteElement,
  &_swigt__p_mfem__Linear1DFiniteElement,
  &_swigt__p_mfem__Linear2DFiniteElement,
  &_swigt__p_mfem__Linear3DFiniteElement,
  &_swigt__p_mfem__LinearForm,
  &_swigt__p_mfem__LinearPyramidFiniteElement,
  &_swigt__p_mfem__LinearWedgeFiniteElement,
  &_swigt__p_mfem__LumpedIntegrator,
  &_swigt__p_mfem__MassIntegrator,
  &_swigt__p_mfem__Matrix,
  &_swigt__p_mfem__MatrixArrayCoefficient,
  &_swigt__p_mfem__MatrixCoefficient,
  &_swigt__p_mfem__MatrixConstantCoefficient,
  &_swigt__p_mfem__MatrixFunctionCoefficient,
  &_swigt__p_mfem__MatrixInverse,
  &_swigt__p_mfem__MatrixProductCoefficient,
  &_swigt__p_mfem__MatrixPyCoefficientBase,
  &_swigt__p_mfem__MatrixRestrictedCoefficient,
  &_swigt__p_mfem__MatrixSumCoefficient,
  &_swigt__p_mfem__MatrixVectorProductCoefficient,
  &_swigt__p_mfem__MixedCrossCurlCurlIntegrator,
  &_swigt__p_mfem__MixedCrossCurlGradIntegrator,
  &_swigt__p_mfem__MixedCrossCurlIntegrator,
  &_swigt__p_mfem__MixedCrossGradCurlIntegrator,
  &_swigt__p_mfem__MixedCrossGradGradIntegrator,
  &_swigt__p_mfem__MixedCrossGradIntegrator,
  &_swigt__p_mfem__MixedCrossProductIntegrator,
  &_swigt__p_mfem__MixedCurlCurlIntegrator,
  &_swigt__p_mfem__MixedCurlIntegrator,
  &_swigt__p_mfem__MixedDirectionalDerivativeIntegrator,
  &_swigt__p_mfem__MixedDivGradIntegrator,
  &_swigt__p_mfem__MixedDotProductIntegrator,
  &_swigt__p_mfem__MixedGradDivIntegrator,
  &_swigt__p_mfem__MixedGradGradIntegrator,
  &_swigt__p_mfem__MixedScalarCrossCurlIntegrator,
  &_swigt__p_mfem__MixedScalarCrossGradIntegrator,
  &_swigt__p_mfem__MixedScalarCrossProductIntegrator,
  &_swigt__p_mfem__MixedScalarCurlIntegrator,
  &_swigt__p_mfem__MixedScalarDerivativeIntegrator,
  &_swigt__p_mfem__MixedScalarDivergenceIntegrator,
  &_swigt__p_mfem__MixedScalarIntegrator,
  &_swigt__p_mfem__MixedScalarMassIntegrator,
  &_swigt__p_mfem__MixedScalarVectorIntegrator,
  &_swigt__p_mfem__MixedScalarWeakCrossProductIntegrator,
  &_swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator,
  &_swigt__p_mfem__MixedScalarWeakCurlIntegrator,
  &_swigt__p_mfem__MixedScalarWeakDerivativeIntegrator,
  &_swigt__p_mfem__MixedScalarWeakDivergenceIntegrator,
  &_swigt__p_mfem__MixedScalarWeakGradientIntegrator,
  &_swigt__p_mfem__MixedVectorCurlIntegrator,
  &_swigt__p_mfem__MixedVectorDivergenceIntegrator,
  &_swigt__p_mfem__MixedVectorGradientIntegrator,
  &_swigt__p_mfem__MixedVectorIntegrator,
  &_swigt__p_mfem__MixedVectorMassIntegrator,
  &_swigt__p_mfem__MixedVectorProductIntegrator,
  &_swigt__p_mfem__MixedVectorWeakCurlIntegrator,
  &_swigt__p_mfem__MixedVectorWeakDivergenceIntegrator,
  &_swigt__p_mfem__MixedWeakCurlCrossIntegrator,
  &_swigt__p_mfem__MixedWeakDivCrossIntegrator,
  &_swigt__p_mfem__MixedWeakGradDotIntegrator,
  &_swigt__p_mfem__NCL2FaceRestriction,
  &_swigt__p_mfem__ND_HexahedronElement,
  &_swigt__p_mfem__ND_QuadrilateralElement,
  &_swigt__p_mfem__ND_R1D_PointElement,
  &_swigt__p_mfem__ND_R1D_SegmentElement,
  &_swigt__p_mfem__ND_R2D_FiniteElement,
  &_swigt__p_mfem__ND_R2D_QuadrilateralElement,
  &_swigt__p_mfem__ND_R2D_SegmentElement,
  &_swigt__p_mfem__ND_R2D_TriangleElement,
  &_swigt__p_mfem__ND_SegmentElement,
  &_swigt__p_mfem__ND_TetrahedronElement,
  &_swigt__p_mfem__ND_TriangleElement,
  &_swigt__p_mfem__ND_WedgeElement,
  &_swigt__p_mfem__NURBS1DFiniteElement,
  &_swigt__p_mfem__NURBS2DFiniteElement,
  &_swigt__p_mfem__NURBS3DFiniteElement,
  &_swigt__p_mfem__NURBSFiniteElement,
  &_swigt__p_mfem__Nedelec1HexFiniteElement,
  &_swigt__p_mfem__Nedelec1PyrFiniteElement,
  &_swigt__p_mfem__Nedelec1TetFiniteElement,
  &_swigt__p_mfem__Nedelec1WdgFiniteElement,
  &_swigt__p_mfem__NodalFiniteElement,
  &_swigt__p_mfem__NodalTensorFiniteElement,
  &_swigt__p_mfem__NodeExtrudeCoefficient,
  &_swigt__p_mfem__NonconservativeDGTraceIntegrator,
  &_swigt__p_mfem__NonlinearFormIntegrator,
  &_swigt__p_mfem__NormalInterpolator,
  &_swigt__p_mfem__NormalTraceJumpIntegrator,
  &_swigt__p_mfem__NormalizedVectorCoefficient,
  &_swigt__p_mfem__Operator,
  &_swigt__p_mfem__OperatorHandle,
  &_swigt__p_mfem__OuterProductCoefficient,
  &_swigt__p_mfem__P0HexFiniteElement,
  &_swigt__p_mfem__P0PyrFiniteElement,
  &_swigt__p_mfem__P0QuadFiniteElement,
  &_swigt__p_mfem__P0SegmentFiniteElement,
  &_swigt__p_mfem__P0TetFiniteElement,
  &_swigt__p_mfem__P0TriangleFiniteElement,
  &_swigt__p_mfem__P0WdgFiniteElement,
  &_swigt__p_mfem__P1OnQuadFiniteElement,
  &_swigt__p_mfem__P1SegmentFiniteElement,
  &_swigt__p_mfem__P1TetNonConfFiniteElement,
  &_swigt__p_mfem__P2SegmentFiniteElement,
  &_swigt__p_mfem__PWCoefficient,
  &_swigt__p_mfem__PWConstCoefficient,
  &_swigt__p_mfem__PWMatrixCoefficient,
  &_swigt__p_mfem__PWVectorCoefficient,
  &_swigt__p_mfem__PointFiniteElement,
  &_swigt__p_mfem__PositiveFiniteElement,
  &_swigt__p_mfem__PositiveTensorFiniteElement,
  &_swigt__p_mfem__PowerCoefficient,
  &_swigt__p_mfem__ProductCoefficient,
  &_swigt__p_mfem__ProductOperator,
  &_swigt__p_mfem__PyCoefficientBase,
  &_swigt__p_mfem__PyOperatorBase,
  &_swigt__p_mfem__PyTimeDependentOperatorBase,
  &_swigt__p_mfem__Quad1DFiniteElement,
  &_swigt__p_mfem__Quad2DFiniteElement,
  &_swigt__p_mfem__QuadPos1DFiniteElement,
  &_swigt__p_mfem__Quadratic3DFiniteElement,
  &_swigt__p_mfem__QuadratureFunctionCoefficient,
  &_swigt__p_mfem__RAPOperator,
  &_swigt__p_mfem__RT0HexFiniteElement,
  &_swigt__p_mfem__RT0PyrFiniteElement,
  &_swigt__p_mfem__RT0QuadFiniteElement,
  &_swigt__p_mfem__RT0TetFiniteElement,
  &_swigt__p_mfem__RT0TriangleFiniteElement,
  &_swigt__p_mfem__RT0WdgFiniteElement,
  &_swigt__p_mfem__RT1HexFiniteElement,
  &_swigt__p_mfem__RT1QuadFiniteElement,
  &_swigt__p_mfem__RT1TriangleFiniteElement,
  &_swigt__p_mfem__RT2QuadFiniteElement,
  &_swigt__p_mfem__RT2TriangleFiniteElement,
  &_swigt__p_mfem__RT_HexahedronElement,
  &_swigt__p_mfem__RT_QuadrilateralElement,
  &_swigt__p_mfem__RT_R1D_SegmentElement,
  &_swigt__p_mfem__RT_R2D_FiniteElement,
  &_swigt__p_mfem__RT_R2D_QuadrilateralElement,
  &_swigt__p_mfem__RT_R2D_SegmentElement,
  &_swigt__p_mfem__RT_R2D_TriangleElement,
  &_swigt__p_mfem__RT_TetrahedronElement,
  &_swigt__p_mfem__RT_TriangleElement,
  &_swigt__p_mfem__RT_WedgeElement,
  &_swigt__p_mfem__RatioCoefficient,
  &_swigt__p_mfem__RectangularConstrainedOperator,
  &_swigt__p_mfem__RefinedBiLinear2DFiniteElement,
  &_swigt__p_mfem__RefinedLinear1DFiniteElement,
  &_swigt__p_mfem__RefinedLinear2DFiniteElement,
  &_swigt__p_mfem__RefinedLinear3DFiniteElement,
  &_swigt__p_mfem__RefinedTriLinear3DFiniteElement,
  &_swigt__p_mfem__Refinement,
  &_swigt__p_mfem__RestrictedCoefficient,
  &_swigt__p_mfem__RotTriLinearHexFiniteElement,
  &_swigt__p_mfem__ScalarCrossProductInterpolator,
  &_swigt__p_mfem__ScalarFiniteElement,
  &_swigt__p_mfem__ScalarMatrixProductCoefficient,
  &_swigt__p_mfem__ScalarProductInterpolator,
  &_swigt__p_mfem__ScalarVectorProductCoefficient,
  &_swigt__p_mfem__ScalarVectorProductInterpolator,
  &_swigt__p_mfem__ScaledOperator,
  &_swigt__p_mfem__SecondOrderTimeDependentOperator,
  &_swigt__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator,
  &_swigt__p_mfem__Solver,
  &_swigt__p_mfem__SparseMatrix,
  &_swigt__p_mfem__SumCoefficient,
  &_swigt__p_mfem__SumIntegrator,
  &_swigt__p_mfem__SymmetricMatrixCoefficient,
  &_swigt__p_mfem__SymmetricMatrixConstantCoefficient,
  &_swigt__p_mfem__SymmetricMatrixFunctionCoefficient,
  &_swigt__p_mfem__TimeDependentAdjointOperator,
  &_swigt__p_mfem__TimeDependentOperator,
  &_swigt__p_mfem__TraceJumpIntegrator,
  &_swigt__p_mfem__TransformedCoefficient,
  &_swigt__p_mfem__TransposeIntegrator,
  &_swigt__p_mfem__TransposeMatrixCoefficient,
  &_swigt__p_mfem__TransposeOperator,
  &_swigt__p_mfem__TriLinear3DFiniteElement,
  &_swigt__p_mfem__TripleProductOperator,
  &_swigt__p_mfem__Vector,
  &_swigt__p_mfem__VectorArrayCoefficient,
  &_swigt__p_mfem__VectorCoefficient,
  &_swigt__p_mfem__VectorConstantCoefficient,
  &_swigt__p_mfem__VectorConvectionNLFIntegrator,
  &_swigt__p_mfem__VectorCrossProductCoefficient,
  &_swigt__p_mfem__VectorCrossProductInterpolator,
  &_swigt__p_mfem__VectorCurlCurlIntegrator,
  &_swigt__p_mfem__VectorDeltaCoefficient,
  &_swigt__p_mfem__VectorDiffusionIntegrator,
  &_swigt__p_mfem__VectorDivergenceIntegrator,
  &_swigt__p_mfem__VectorFECurlIntegrator,
  &_swigt__p_mfem__VectorFEDivergenceIntegrator,
  &_swigt__p_mfem__VectorFEMassIntegrator,
  &_swigt__p_mfem__VectorFEWeakDivergenceIntegrator,
  &_swigt__p_mfem__VectorFiniteElement,
  &_swigt__p_mfem__VectorFunctionCoefficient,
  &_swigt__p_mfem__VectorGridFunctionCoefficient,
  &_swigt__p_mfem__VectorInnerProductInterpolator,
  &_swigt__p_mfem__VectorMassIntegrator,
  &_swigt__p_mfem__VectorPyCoefficientBase,
  &_swigt__p_mfem__VectorQuadratureFunctionCoefficient,
  &_swigt__p_mfem__VectorRestrictedCoefficient,
  &_swigt__p_mfem__VectorRotProductCoefficient,
  &_swigt__p_mfem__VectorScalarProductInterpolator,
  &_swigt__p_mfem__VectorSumCoefficient,
  &_swigt__p_mfem__VectorTensorFiniteElement,
  &_swigt__p_p_mfem__AbstractSparseMatrix,
  &_swigt__p_p_mfem__CoefficientVector,
  &_swigt__p_p_mfem__ConstrainedOperator,
  &_swigt__p_p_mfem__DenseMatrix,
  &_swigt__p_p_mfem__DenseMatrixInverse,
  &_swigt__p_p_mfem__DenseSymmetricMatrix,
  &_swigt__p_p_mfem__ElementRestriction,
  &_swigt__p_p_mfem__ElementRestrictionOperator,
  &_swigt__p_p_mfem__FaceRestriction,
  &_swigt__p_p_mfem__FiniteElementSpace,
  &_swigt__p_p_mfem__GridFunction,
  &_swigt__p_p_mfem__H1FaceRestriction,
  &_swigt__p_p_mfem__IdentityOperator,
  &_swigt__p_p_mfem__IntegrationRule,
  &_swigt__p_p_mfem__L2ElementRestriction,
  &_swigt__p_p_mfem__L2FaceRestriction,
  &_swigt__p_p_mfem__LinearForm,
  &_swigt__p_p_mfem__Matrix,
  &_swigt__p_p_mfem__MatrixInverse,
  &_swigt__p_p_mfem__NCL2FaceRestriction,
  &_swigt__p_p_mfem__Operator,
  &_swigt__p_p_mfem__ProductOperator,
  &_swigt__p_p_mfem__PyOperatorBase,
  &_swigt__p_p_mfem__PyTimeDependentOperatorBase,
  &_swigt__p_p_mfem__RAPOperator,
  &_swigt__p_p_mfem__RectangularConstrainedOperator,
  &_swigt__p_p_mfem__ScaledOperator,
  &_swigt__p_p_mfem__SecondOrderTimeDependentOperator,
  &_swigt__p_p_mfem__Solver,
  &_swigt__p_p_mfem__SparseMatrix,
  &_swigt__p_p_mfem__TimeDependentAdjointOperator,
  &_swigt__p_p_mfem__TimeDependentOperator,
  &_swigt__p_p_mfem__TransposeOperator,
  &_swigt__p_p_mfem__TripleProductOperator,
  &_swigt__p_p_mfem__Vector,
  &_swigt__p_pri_t,
  &_swigt__p_pyr_t,
  &_swigt__p_quad_t,
  &_swigt__p_seg_t,
  &_swigt__p_size_type,
  &_swigt__p_tet_t,
  &_swigt__p_tri_t,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc___input[] = {  {&_swigt___input, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MatrixNumbaCoefficient[] = {  {&_swigt__p_MatrixNumbaCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyMFEM__wFILE[] = {  {&_swigt__p_PyMFEM__wFILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefCoord[] = {  {&_swigt__p_RefCoord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ScalarNumbaCoefficient[] = {  {&_swigt__p_ScalarNumbaCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VectorNumbaCoefficient[] = {  {&_swigt__p_VectorNumbaCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_hex_t[] = {  {&_swigt__p_hex_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ArrayT_int_t[] = {  {&_swigt__p_mfem__ArrayT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BilinearFormIntegrator[] = {  {&_swigt__p_mfem__BilinearFormIntegrator, 0, 0, 0},  {&_swigt__p_mfem__BoundaryMassIntegrator, _p_mfem__BoundaryMassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ConservativeConvectionIntegrator, _p_mfem__ConservativeConvectionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ConvectionIntegrator, _p_mfem__ConvectionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__CurlCurlIntegrator, _p_mfem__CurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__CurlInterpolator, _p_mfem__CurlInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGDiffusionBR2Integrator, _p_mfem__DGDiffusionBR2IntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGDiffusionIntegrator, _p_mfem__DGDiffusionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGElasticityIntegrator, _p_mfem__DGElasticityIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGTraceIntegrator, _p_mfem__DGTraceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DerivativeIntegrator, _p_mfem__DerivativeIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DiffusionIntegrator, _p_mfem__DiffusionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DiscreteInterpolator, _p_mfem__DiscreteInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DivDivIntegrator, _p_mfem__DivDivIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DivergenceInterpolator, _p_mfem__DivergenceInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ElasticityIntegrator, _p_mfem__ElasticityIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GradientIntegrator, _p_mfem__GradientIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GradientInterpolator, _p_mfem__GradientInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GroupConvectionIntegrator, _p_mfem__GroupConvectionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__IdentityInterpolator, _p_mfem__IdentityInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__InverseIntegrator, _p_mfem__InverseIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__LumpedIntegrator, _p_mfem__LumpedIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MassIntegrator, _p_mfem__MassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlCurlIntegrator, _p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlGradIntegrator, _p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlIntegrator, _p_mfem__MixedCrossCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradCurlIntegrator, _p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradGradIntegrator, _p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradIntegrator, _p_mfem__MixedCrossGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossProductIntegrator, _p_mfem__MixedCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCurlCurlIntegrator, _p_mfem__MixedCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCurlIntegrator, _p_mfem__MixedCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDirectionalDerivativeIntegrator, _p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDivGradIntegrator, _p_mfem__MixedDivGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDotProductIntegrator, _p_mfem__MixedDotProductIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradDivIntegrator, _p_mfem__MixedGradDivIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradGradIntegrator, _p_mfem__MixedGradGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossCurlIntegrator, _p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossGradIntegrator, _p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossProductIntegrator, _p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCurlIntegrator, _p_mfem__MixedScalarCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDerivativeIntegrator, _p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDivergenceIntegrator, _p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarIntegrator, _p_mfem__MixedScalarIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarMassIntegrator, _p_mfem__MixedScalarMassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarVectorIntegrator, _p_mfem__MixedScalarVectorIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCrossProductIntegrator, _p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator, _p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlIntegrator, _p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDerivativeIntegrator, _p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDivergenceIntegrator, _p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakGradientIntegrator, _p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorCurlIntegrator, _p_mfem__MixedVectorCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorDivergenceIntegrator, _p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorGradientIntegrator, _p_mfem__MixedVectorGradientIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorIntegrator, _p_mfem__MixedVectorIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorMassIntegrator, _p_mfem__MixedVectorMassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorProductIntegrator, _p_mfem__MixedVectorProductIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakCurlIntegrator, _p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakDivergenceIntegrator, _p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakCurlCrossIntegrator, _p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakDivCrossIntegrator, _p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakGradDotIntegrator, _p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NonconservativeDGTraceIntegrator, _p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NormalInterpolator, _p_mfem__NormalInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NormalTraceJumpIntegrator, _p_mfem__NormalTraceJumpIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarCrossProductInterpolator, _p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarProductInterpolator, _p_mfem__ScalarProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarVectorProductInterpolator, _p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__SumIntegrator, _p_mfem__SumIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__TraceJumpIntegrator, _p_mfem__TraceJumpIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__TransposeIntegrator, _p_mfem__TransposeIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorCrossProductInterpolator, _p_mfem__VectorCrossProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorCurlCurlIntegrator, _p_mfem__VectorCurlCurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorDiffusionIntegrator, _p_mfem__VectorDiffusionIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorDivergenceIntegrator, _p_mfem__VectorDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFECurlIntegrator, _p_mfem__VectorFECurlIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEDivergenceIntegrator, _p_mfem__VectorFEDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEMassIntegrator, _p_mfem__VectorFEMassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEWeakDivergenceIntegrator, _p_mfem__VectorFEWeakDivergenceIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorInnerProductInterpolator, _p_mfem__VectorInnerProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorMassIntegrator, _p_mfem__VectorMassIntegratorTo_p_mfem__BilinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorScalarProductInterpolator, _p_mfem__VectorScalarProductInterpolatorTo_p_mfem__BilinearFormIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BoundaryMassIntegrator[] = {  {&_swigt__p_mfem__BoundaryMassIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ConstantCoefficient[] = {{&_swigt__p_mfem__ConstantCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DeltaCoefficient[] = {{&_swigt__p_mfem__DeltaCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DeterminantCoefficient[] = {{&_swigt__p_mfem__DeterminantCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DivergenceGridFunctionCoefficient[] = {{&_swigt__p_mfem__DivergenceGridFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ExtrudeCoefficient[] = {{&_swigt__p_mfem__ExtrudeCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__FunctionCoefficient[] = {{&_swigt__p_mfem__FunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GridFunctionCoefficient[] = {{&_swigt__p_mfem__GridFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__InnerProductCoefficient[] = {{&_swigt__p_mfem__InnerProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PWCoefficient[] = {{&_swigt__p_mfem__PWCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PWConstCoefficient[] = {{&_swigt__p_mfem__PWConstCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PowerCoefficient[] = {{&_swigt__p_mfem__PowerCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ProductCoefficient[] = {{&_swigt__p_mfem__ProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PyCoefficientBase[] = {{&_swigt__p_mfem__PyCoefficientBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__QuadratureFunctionCoefficient[] = {{&_swigt__p_mfem__QuadratureFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RatioCoefficient[] = {{&_swigt__p_mfem__RatioCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RestrictedCoefficient[] = {{&_swigt__p_mfem__RestrictedCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SumCoefficient[] = {{&_swigt__p_mfem__SumCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TransformedCoefficient[] = {{&_swigt__p_mfem__TransformedCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorRotProductCoefficient[] = {{&_swigt__p_mfem__VectorRotProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Coefficient[] = {  {&_swigt__p_mfem__Coefficient, 0, 0, 0},  {&_swigt__p_ScalarNumbaCoefficient, _p_ScalarNumbaCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__ConstantCoefficient, _p_mfem__ConstantCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__DeltaCoefficient, _p_mfem__DeltaCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__DeterminantCoefficient, _p_mfem__DeterminantCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__DivergenceGridFunctionCoefficient, _p_mfem__DivergenceGridFunctionCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__ExtrudeCoefficient, _p_mfem__ExtrudeCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__FunctionCoefficient, _p_mfem__FunctionCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__GridFunctionCoefficient, _p_mfem__GridFunctionCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__InnerProductCoefficient, _p_mfem__InnerProductCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__PWCoefficient, _p_mfem__PWCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__PWConstCoefficient, _p_mfem__PWConstCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__PowerCoefficient, _p_mfem__PowerCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__ProductCoefficient, _p_mfem__ProductCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__PyCoefficientBase, _p_mfem__PyCoefficientBaseTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__QuadratureFunctionCoefficient, _p_mfem__QuadratureFunctionCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__RatioCoefficient, _p_mfem__RatioCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__RestrictedCoefficient, _p_mfem__RestrictedCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__SumCoefficient, _p_mfem__SumCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__TransformedCoefficient, _p_mfem__TransformedCoefficientTo_p_mfem__Coefficient, 0, 0},  {&_swigt__p_mfem__VectorRotProductCoefficient, _p_mfem__VectorRotProductCoefficientTo_p_mfem__Coefficient, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ConservativeConvectionIntegrator[] = {  {&_swigt__p_mfem__ConservativeConvectionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ConvectionIntegrator[] = {  {&_swigt__p_mfem__ConvectionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CurlCurlIntegrator[] = {  {&_swigt__p_mfem__CurlCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CurlInterpolator[] = {  {&_swigt__p_mfem__CurlInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DGDiffusionBR2Integrator[] = {  {&_swigt__p_mfem__DGDiffusionBR2Integrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DGDiffusionIntegrator[] = {  {&_swigt__p_mfem__DGDiffusionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DGElasticityIntegrator[] = {  {&_swigt__p_mfem__DGElasticityIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DGTraceIntegrator[] = {  {&_swigt__p_mfem__DGTraceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DenseMatrix[] = {  {&_swigt__p_mfem__DenseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DerivativeIntegrator[] = {  {&_swigt__p_mfem__DerivativeIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DiffusionIntegrator[] = {  {&_swigt__p_mfem__DiffusionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DiscreteInterpolator[] = {  {&_swigt__p_mfem__DiscreteInterpolator, 0, 0, 0},  {&_swigt__p_mfem__CurlInterpolator, _p_mfem__CurlInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__DivergenceInterpolator, _p_mfem__DivergenceInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__GradientInterpolator, _p_mfem__GradientInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__IdentityInterpolator, _p_mfem__IdentityInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__NormalInterpolator, _p_mfem__NormalInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__ScalarCrossProductInterpolator, _p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__ScalarProductInterpolator, _p_mfem__ScalarProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__ScalarVectorProductInterpolator, _p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__VectorCrossProductInterpolator, _p_mfem__VectorCrossProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__VectorInnerProductInterpolator, _p_mfem__VectorInnerProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},  {&_swigt__p_mfem__VectorScalarProductInterpolator, _p_mfem__VectorScalarProductInterpolatorTo_p_mfem__DiscreteInterpolator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DivDivIntegrator[] = {  {&_swigt__p_mfem__DivDivIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DivergenceInterpolator[] = {  {&_swigt__p_mfem__DivergenceInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ElasticityIntegrator[] = {  {&_swigt__p_mfem__ElasticityIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IsoparametricTransformation[] = {{&_swigt__p_mfem__IsoparametricTransformation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ElementTransformation[] = {  {&_swigt__p_mfem__ElementTransformation, 0, 0, 0},  {&_swigt__p_mfem__FaceElementTransformations, _p_mfem__FaceElementTransformationsTo_p_mfem__ElementTransformation, 0, 0},  {&_swigt__p_mfem__IsoparametricTransformation, _p_mfem__IsoparametricTransformationTo_p_mfem__ElementTransformation, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__FaceElementTransformations[] = {  {&_swigt__p_mfem__FaceElementTransformations, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BiCubic2DFiniteElement[] = {{&_swigt__p_mfem__BiCubic2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BiLinear2DFiniteElement[] = {{&_swigt__p_mfem__BiLinear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BiQuad2DFiniteElement[] = {{&_swigt__p_mfem__BiQuad2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__BiQuadPos2DFiniteElement[] = {{&_swigt__p_mfem__BiQuadPos2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CrouzeixRaviartFiniteElement[] = {{&_swigt__p_mfem__CrouzeixRaviartFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CrouzeixRaviartQuadFiniteElement[] = {{&_swigt__p_mfem__CrouzeixRaviartQuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Cubic1DFiniteElement[] = {{&_swigt__p_mfem__Cubic1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Cubic2DFiniteElement[] = {{&_swigt__p_mfem__Cubic2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Cubic3DFiniteElement[] = {{&_swigt__p_mfem__Cubic3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GaussBiLinear2DFiniteElement[] = {{&_swigt__p_mfem__GaussBiLinear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GaussBiQuad2DFiniteElement[] = {{&_swigt__p_mfem__GaussBiQuad2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GaussLinear2DFiniteElement[] = {{&_swigt__p_mfem__GaussLinear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GaussQuad2DFiniteElement[] = {{&_swigt__p_mfem__GaussQuad2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_HexahedronElement[] = {{&_swigt__p_mfem__H1Pos_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_QuadrilateralElement[] = {{&_swigt__p_mfem__H1Pos_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_SegmentElement[] = {{&_swigt__p_mfem__H1Pos_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_TetrahedronElement[] = {{&_swigt__p_mfem__H1Pos_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_TriangleElement[] = {{&_swigt__p_mfem__H1Pos_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Pos_WedgeElement[] = {{&_swigt__p_mfem__H1Pos_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1Ser_QuadrilateralElement[] = {{&_swigt__p_mfem__H1Ser_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_HexahedronElement[] = {{&_swigt__p_mfem__H1_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_QuadrilateralElement[] = {{&_swigt__p_mfem__H1_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_SegmentElement[] = {{&_swigt__p_mfem__H1_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_TetrahedronElement[] = {{&_swigt__p_mfem__H1_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_TriangleElement[] = {{&_swigt__p_mfem__H1_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1_WedgeElement[] = {{&_swigt__p_mfem__H1_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_HexahedronElement[] = {{&_swigt__p_mfem__L2Pos_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_QuadrilateralElement[] = {{&_swigt__p_mfem__L2Pos_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_SegmentElement[] = {{&_swigt__p_mfem__L2Pos_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_TetrahedronElement[] = {{&_swigt__p_mfem__L2Pos_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_TriangleElement[] = {{&_swigt__p_mfem__L2Pos_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2Pos_WedgeElement[] = {{&_swigt__p_mfem__L2Pos_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_HexahedronElement[] = {{&_swigt__p_mfem__L2_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_QuadrilateralElement[] = {{&_swigt__p_mfem__L2_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_SegmentElement[] = {{&_swigt__p_mfem__L2_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_TetrahedronElement[] = {{&_swigt__p_mfem__L2_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_TriangleElement[] = {{&_swigt__p_mfem__L2_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_WedgeElement[] = {{&_swigt__p_mfem__L2_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Lagrange1DFiniteElement[] = {{&_swigt__p_mfem__Lagrange1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__LagrangeHexFiniteElement[] = {{&_swigt__p_mfem__LagrangeHexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Linear1DFiniteElement[] = {{&_swigt__p_mfem__Linear1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Linear2DFiniteElement[] = {{&_swigt__p_mfem__Linear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Linear3DFiniteElement[] = {{&_swigt__p_mfem__Linear3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__LinearPyramidFiniteElement[] = {{&_swigt__p_mfem__LinearPyramidFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__LinearWedgeFiniteElement[] = {{&_swigt__p_mfem__LinearWedgeFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_HexahedronElement[] = {{&_swigt__p_mfem__ND_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_QuadrilateralElement[] = {{&_swigt__p_mfem__ND_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R1D_PointElement[] = {{&_swigt__p_mfem__ND_R1D_PointElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R1D_SegmentElement[] = {{&_swigt__p_mfem__ND_R1D_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R2D_FiniteElement[] = {{&_swigt__p_mfem__ND_R2D_FiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R2D_QuadrilateralElement[] = {{&_swigt__p_mfem__ND_R2D_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R2D_SegmentElement[] = {{&_swigt__p_mfem__ND_R2D_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_R2D_TriangleElement[] = {{&_swigt__p_mfem__ND_R2D_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_SegmentElement[] = {{&_swigt__p_mfem__ND_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_TetrahedronElement[] = {{&_swigt__p_mfem__ND_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_TriangleElement[] = {{&_swigt__p_mfem__ND_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ND_WedgeElement[] = {{&_swigt__p_mfem__ND_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NURBS1DFiniteElement[] = {{&_swigt__p_mfem__NURBS1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NURBS2DFiniteElement[] = {{&_swigt__p_mfem__NURBS2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NURBS3DFiniteElement[] = {{&_swigt__p_mfem__NURBS3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NURBSFiniteElement[] = {{&_swigt__p_mfem__NURBSFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Nedelec1HexFiniteElement[] = {{&_swigt__p_mfem__Nedelec1HexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Nedelec1PyrFiniteElement[] = {{&_swigt__p_mfem__Nedelec1PyrFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Nedelec1TetFiniteElement[] = {{&_swigt__p_mfem__Nedelec1TetFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Nedelec1WdgFiniteElement[] = {{&_swigt__p_mfem__Nedelec1WdgFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NodalFiniteElement[] = {{&_swigt__p_mfem__NodalFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NodalTensorFiniteElement[] = {{&_swigt__p_mfem__NodalTensorFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0HexFiniteElement[] = {{&_swigt__p_mfem__P0HexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0PyrFiniteElement[] = {{&_swigt__p_mfem__P0PyrFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0QuadFiniteElement[] = {{&_swigt__p_mfem__P0QuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0SegmentFiniteElement[] = {{&_swigt__p_mfem__P0SegmentFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0TetFiniteElement[] = {{&_swigt__p_mfem__P0TetFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0TriangleFiniteElement[] = {{&_swigt__p_mfem__P0TriangleFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P0WdgFiniteElement[] = {{&_swigt__p_mfem__P0WdgFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P1OnQuadFiniteElement[] = {{&_swigt__p_mfem__P1OnQuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P1SegmentFiniteElement[] = {{&_swigt__p_mfem__P1SegmentFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P1TetNonConfFiniteElement[] = {{&_swigt__p_mfem__P1TetNonConfFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__P2SegmentFiniteElement[] = {{&_swigt__p_mfem__P2SegmentFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PointFiniteElement[] = {{&_swigt__p_mfem__PointFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PositiveFiniteElement[] = {{&_swigt__p_mfem__PositiveFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PositiveTensorFiniteElement[] = {{&_swigt__p_mfem__PositiveTensorFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Quad1DFiniteElement[] = {{&_swigt__p_mfem__Quad1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Quad2DFiniteElement[] = {{&_swigt__p_mfem__Quad2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__QuadPos1DFiniteElement[] = {{&_swigt__p_mfem__QuadPos1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Quadratic3DFiniteElement[] = {{&_swigt__p_mfem__Quadratic3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0HexFiniteElement[] = {{&_swigt__p_mfem__RT0HexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0PyrFiniteElement[] = {{&_swigt__p_mfem__RT0PyrFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0QuadFiniteElement[] = {{&_swigt__p_mfem__RT0QuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0TetFiniteElement[] = {{&_swigt__p_mfem__RT0TetFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0TriangleFiniteElement[] = {{&_swigt__p_mfem__RT0TriangleFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT0WdgFiniteElement[] = {{&_swigt__p_mfem__RT0WdgFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT1HexFiniteElement[] = {{&_swigt__p_mfem__RT1HexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT1QuadFiniteElement[] = {{&_swigt__p_mfem__RT1QuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT1TriangleFiniteElement[] = {{&_swigt__p_mfem__RT1TriangleFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT2QuadFiniteElement[] = {{&_swigt__p_mfem__RT2QuadFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT2TriangleFiniteElement[] = {{&_swigt__p_mfem__RT2TriangleFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_HexahedronElement[] = {{&_swigt__p_mfem__RT_HexahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_QuadrilateralElement[] = {{&_swigt__p_mfem__RT_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_R1D_SegmentElement[] = {{&_swigt__p_mfem__RT_R1D_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_R2D_FiniteElement[] = {{&_swigt__p_mfem__RT_R2D_FiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_R2D_QuadrilateralElement[] = {{&_swigt__p_mfem__RT_R2D_QuadrilateralElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_R2D_SegmentElement[] = {{&_swigt__p_mfem__RT_R2D_SegmentElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_R2D_TriangleElement[] = {{&_swigt__p_mfem__RT_R2D_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_TetrahedronElement[] = {{&_swigt__p_mfem__RT_TetrahedronElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_TriangleElement[] = {{&_swigt__p_mfem__RT_TriangleElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RT_WedgeElement[] = {{&_swigt__p_mfem__RT_WedgeElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RefinedBiLinear2DFiniteElement[] = {{&_swigt__p_mfem__RefinedBiLinear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RefinedLinear1DFiniteElement[] = {{&_swigt__p_mfem__RefinedLinear1DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RefinedLinear2DFiniteElement[] = {{&_swigt__p_mfem__RefinedLinear2DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RefinedLinear3DFiniteElement[] = {{&_swigt__p_mfem__RefinedLinear3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RefinedTriLinear3DFiniteElement[] = {{&_swigt__p_mfem__RefinedTriLinear3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RotTriLinearHexFiniteElement[] = {{&_swigt__p_mfem__RotTriLinearHexFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarFiniteElement[] = {{&_swigt__p_mfem__ScalarFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TriLinear3DFiniteElement[] = {{&_swigt__p_mfem__TriLinear3DFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFiniteElement[] = {{&_swigt__p_mfem__VectorFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorTensorFiniteElement[] = {{&_swigt__p_mfem__VectorTensorFiniteElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__FiniteElement[] = {  {&_swigt__p_mfem__FiniteElement, 0, 0, 0},  {&_swigt__p_mfem__BiCubic2DFiniteElement, _p_mfem__BiCubic2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__BiLinear2DFiniteElement, _p_mfem__BiLinear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__BiQuad2DFiniteElement, _p_mfem__BiQuad2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__BiQuadPos2DFiniteElement, _p_mfem__BiQuadPos2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__CrouzeixRaviartFiniteElement, _p_mfem__CrouzeixRaviartFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__CrouzeixRaviartQuadFiniteElement, _p_mfem__CrouzeixRaviartQuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Cubic1DFiniteElement, _p_mfem__Cubic1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Cubic2DFiniteElement, _p_mfem__Cubic2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Cubic3DFiniteElement, _p_mfem__Cubic3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__GaussBiLinear2DFiniteElement, _p_mfem__GaussBiLinear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__GaussBiQuad2DFiniteElement, _p_mfem__GaussBiQuad2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__GaussLinear2DFiniteElement, _p_mfem__GaussLinear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__GaussQuad2DFiniteElement, _p_mfem__GaussQuad2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_HexahedronElement, _p_mfem__H1Pos_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_QuadrilateralElement, _p_mfem__H1Pos_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_SegmentElement, _p_mfem__H1Pos_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_TetrahedronElement, _p_mfem__H1Pos_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_TriangleElement, _p_mfem__H1Pos_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Pos_WedgeElement, _p_mfem__H1Pos_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1Ser_QuadrilateralElement, _p_mfem__H1Ser_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_HexahedronElement, _p_mfem__H1_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_QuadrilateralElement, _p_mfem__H1_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_SegmentElement, _p_mfem__H1_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_TetrahedronElement, _p_mfem__H1_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_TriangleElement, _p_mfem__H1_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__H1_WedgeElement, _p_mfem__H1_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_HexahedronElement, _p_mfem__L2Pos_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_QuadrilateralElement, _p_mfem__L2Pos_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_SegmentElement, _p_mfem__L2Pos_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_TetrahedronElement, _p_mfem__L2Pos_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_TriangleElement, _p_mfem__L2Pos_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2Pos_WedgeElement, _p_mfem__L2Pos_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_HexahedronElement, _p_mfem__L2_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_QuadrilateralElement, _p_mfem__L2_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_SegmentElement, _p_mfem__L2_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_TetrahedronElement, _p_mfem__L2_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_TriangleElement, _p_mfem__L2_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__L2_WedgeElement, _p_mfem__L2_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Lagrange1DFiniteElement, _p_mfem__Lagrange1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__LagrangeHexFiniteElement, _p_mfem__LagrangeHexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Linear1DFiniteElement, _p_mfem__Linear1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Linear2DFiniteElement, _p_mfem__Linear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Linear3DFiniteElement, _p_mfem__Linear3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__LinearPyramidFiniteElement, _p_mfem__LinearPyramidFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__LinearWedgeFiniteElement, _p_mfem__LinearWedgeFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_HexahedronElement, _p_mfem__ND_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_QuadrilateralElement, _p_mfem__ND_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R1D_PointElement, _p_mfem__ND_R1D_PointElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R1D_SegmentElement, _p_mfem__ND_R1D_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R2D_FiniteElement, _p_mfem__ND_R2D_FiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R2D_QuadrilateralElement, _p_mfem__ND_R2D_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R2D_SegmentElement, _p_mfem__ND_R2D_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_R2D_TriangleElement, _p_mfem__ND_R2D_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_SegmentElement, _p_mfem__ND_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_TetrahedronElement, _p_mfem__ND_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_TriangleElement, _p_mfem__ND_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ND_WedgeElement, _p_mfem__ND_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NURBS1DFiniteElement, _p_mfem__NURBS1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NURBS2DFiniteElement, _p_mfem__NURBS2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NURBS3DFiniteElement, _p_mfem__NURBS3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NURBSFiniteElement, _p_mfem__NURBSFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Nedelec1HexFiniteElement, _p_mfem__Nedelec1HexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Nedelec1PyrFiniteElement, _p_mfem__Nedelec1PyrFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Nedelec1TetFiniteElement, _p_mfem__Nedelec1TetFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Nedelec1WdgFiniteElement, _p_mfem__Nedelec1WdgFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NodalFiniteElement, _p_mfem__NodalFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__NodalTensorFiniteElement, _p_mfem__NodalTensorFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0HexFiniteElement, _p_mfem__P0HexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0PyrFiniteElement, _p_mfem__P0PyrFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0QuadFiniteElement, _p_mfem__P0QuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0SegmentFiniteElement, _p_mfem__P0SegmentFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0TetFiniteElement, _p_mfem__P0TetFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0TriangleFiniteElement, _p_mfem__P0TriangleFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P0WdgFiniteElement, _p_mfem__P0WdgFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P1OnQuadFiniteElement, _p_mfem__P1OnQuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P1SegmentFiniteElement, _p_mfem__P1SegmentFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P1TetNonConfFiniteElement, _p_mfem__P1TetNonConfFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__P2SegmentFiniteElement, _p_mfem__P2SegmentFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__PointFiniteElement, _p_mfem__PointFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__PositiveFiniteElement, _p_mfem__PositiveFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__PositiveTensorFiniteElement, _p_mfem__PositiveTensorFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Quad1DFiniteElement, _p_mfem__Quad1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Quad2DFiniteElement, _p_mfem__Quad2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__QuadPos1DFiniteElement, _p_mfem__QuadPos1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__Quadratic3DFiniteElement, _p_mfem__Quadratic3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0HexFiniteElement, _p_mfem__RT0HexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0PyrFiniteElement, _p_mfem__RT0PyrFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0QuadFiniteElement, _p_mfem__RT0QuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0TetFiniteElement, _p_mfem__RT0TetFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0TriangleFiniteElement, _p_mfem__RT0TriangleFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT0WdgFiniteElement, _p_mfem__RT0WdgFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT1HexFiniteElement, _p_mfem__RT1HexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT1QuadFiniteElement, _p_mfem__RT1QuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT1TriangleFiniteElement, _p_mfem__RT1TriangleFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT2QuadFiniteElement, _p_mfem__RT2QuadFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT2TriangleFiniteElement, _p_mfem__RT2TriangleFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_HexahedronElement, _p_mfem__RT_HexahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_QuadrilateralElement, _p_mfem__RT_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_R1D_SegmentElement, _p_mfem__RT_R1D_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_R2D_FiniteElement, _p_mfem__RT_R2D_FiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_R2D_QuadrilateralElement, _p_mfem__RT_R2D_QuadrilateralElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_R2D_SegmentElement, _p_mfem__RT_R2D_SegmentElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_R2D_TriangleElement, _p_mfem__RT_R2D_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_TetrahedronElement, _p_mfem__RT_TetrahedronElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_TriangleElement, _p_mfem__RT_TriangleElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RT_WedgeElement, _p_mfem__RT_WedgeElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RefinedBiLinear2DFiniteElement, _p_mfem__RefinedBiLinear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RefinedLinear1DFiniteElement, _p_mfem__RefinedLinear1DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RefinedLinear2DFiniteElement, _p_mfem__RefinedLinear2DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RefinedLinear3DFiniteElement, _p_mfem__RefinedLinear3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RefinedTriLinear3DFiniteElement, _p_mfem__RefinedTriLinear3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__RotTriLinearHexFiniteElement, _p_mfem__RotTriLinearHexFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__ScalarFiniteElement, _p_mfem__ScalarFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__TriLinear3DFiniteElement, _p_mfem__TriLinear3DFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__VectorFiniteElement, _p_mfem__VectorFiniteElementTo_p_mfem__FiniteElement, 0, 0},  {&_swigt__p_mfem__VectorTensorFiniteElement, _p_mfem__VectorTensorFiniteElementTo_p_mfem__FiniteElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__FiniteElementSpace[] = {  {&_swigt__p_mfem__FiniteElementSpace, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GradientIntegrator[] = {  {&_swigt__p_mfem__GradientIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GradientInterpolator[] = {  {&_swigt__p_mfem__GradientInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GridFunction[] = {  {&_swigt__p_mfem__GridFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GroupConvectionIntegrator[] = {  {&_swigt__p_mfem__GroupConvectionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IdentityInterpolator[] = {  {&_swigt__p_mfem__IdentityInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IntegrationPoint[] = {  {&_swigt__p_mfem__IntegrationPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IntegrationRule[] = {  {&_swigt__p_mfem__IntegrationRule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__InverseIntegrator[] = {  {&_swigt__p_mfem__InverseIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2_FECollection[] = {  {&_swigt__p_mfem__L2_FECollection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__LumpedIntegrator[] = {  {&_swigt__p_mfem__LumpedIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MassIntegrator[] = {  {&_swigt__p_mfem__MassIntegrator, 0, 0, 0},  {&_swigt__p_mfem__BoundaryMassIntegrator, _p_mfem__BoundaryMassIntegratorTo_p_mfem__MassIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CrossCrossCoefficient[] = {{&_swigt__p_mfem__CrossCrossCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IdentityMatrixCoefficient[] = {{&_swigt__p_mfem__IdentityMatrixCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__InverseMatrixCoefficient[] = {{&_swigt__p_mfem__InverseMatrixCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixArrayCoefficient[] = {{&_swigt__p_mfem__MatrixArrayCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixConstantCoefficient[] = {{&_swigt__p_mfem__MatrixConstantCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixFunctionCoefficient[] = {{&_swigt__p_mfem__MatrixFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixProductCoefficient[] = {{&_swigt__p_mfem__MatrixProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixPyCoefficientBase[] = {{&_swigt__p_mfem__MatrixPyCoefficientBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixRestrictedCoefficient[] = {{&_swigt__p_mfem__MatrixRestrictedCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixSumCoefficient[] = {{&_swigt__p_mfem__MatrixSumCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__OuterProductCoefficient[] = {{&_swigt__p_mfem__OuterProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PWMatrixCoefficient[] = {{&_swigt__p_mfem__PWMatrixCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarMatrixProductCoefficient[] = {{&_swigt__p_mfem__ScalarMatrixProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SymmetricMatrixCoefficient[] = {{&_swigt__p_mfem__SymmetricMatrixCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SymmetricMatrixConstantCoefficient[] = {{&_swigt__p_mfem__SymmetricMatrixConstantCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SymmetricMatrixFunctionCoefficient[] = {{&_swigt__p_mfem__SymmetricMatrixFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TransposeMatrixCoefficient[] = {{&_swigt__p_mfem__TransposeMatrixCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixCoefficient[] = {  {&_swigt__p_mfem__MatrixCoefficient, 0, 0, 0},  {&_swigt__p_MatrixNumbaCoefficient, _p_MatrixNumbaCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__CrossCrossCoefficient, _p_mfem__CrossCrossCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__IdentityMatrixCoefficient, _p_mfem__IdentityMatrixCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__InverseMatrixCoefficient, _p_mfem__InverseMatrixCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixArrayCoefficient, _p_mfem__MatrixArrayCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixConstantCoefficient, _p_mfem__MatrixConstantCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixFunctionCoefficient, _p_mfem__MatrixFunctionCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixProductCoefficient, _p_mfem__MatrixProductCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixPyCoefficientBase, _p_mfem__MatrixPyCoefficientBaseTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixRestrictedCoefficient, _p_mfem__MatrixRestrictedCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixSumCoefficient, _p_mfem__MatrixSumCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__OuterProductCoefficient, _p_mfem__OuterProductCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__PWMatrixCoefficient, _p_mfem__PWMatrixCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__ScalarMatrixProductCoefficient, _p_mfem__ScalarMatrixProductCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__SymmetricMatrixCoefficient, _p_mfem__SymmetricMatrixCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__SymmetricMatrixConstantCoefficient, _p_mfem__SymmetricMatrixConstantCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__SymmetricMatrixFunctionCoefficient, _p_mfem__SymmetricMatrixFunctionCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},  {&_swigt__p_mfem__TransposeMatrixCoefficient, _p_mfem__TransposeMatrixCoefficientTo_p_mfem__MatrixCoefficient, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixVectorProductCoefficient[] = {  {&_swigt__p_mfem__MatrixVectorProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossCurlCurlIntegrator[] = {  {&_swigt__p_mfem__MixedCrossCurlCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossCurlGradIntegrator[] = {  {&_swigt__p_mfem__MixedCrossCurlGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossCurlIntegrator[] = {  {&_swigt__p_mfem__MixedCrossCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossGradCurlIntegrator[] = {  {&_swigt__p_mfem__MixedCrossGradCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossGradGradIntegrator[] = {  {&_swigt__p_mfem__MixedCrossGradGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossGradIntegrator[] = {  {&_swigt__p_mfem__MixedCrossGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCrossProductIntegrator[] = {  {&_swigt__p_mfem__MixedCrossProductIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCurlCurlIntegrator[] = {  {&_swigt__p_mfem__MixedCurlCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedCurlIntegrator[] = {  {&_swigt__p_mfem__MixedCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedDirectionalDerivativeIntegrator[] = {  {&_swigt__p_mfem__MixedDirectionalDerivativeIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedDivGradIntegrator[] = {  {&_swigt__p_mfem__MixedDivGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedDotProductIntegrator[] = {  {&_swigt__p_mfem__MixedDotProductIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedGradDivIntegrator[] = {  {&_swigt__p_mfem__MixedGradDivIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedGradGradIntegrator[] = {  {&_swigt__p_mfem__MixedGradGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarCrossCurlIntegrator[] = {  {&_swigt__p_mfem__MixedScalarCrossCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarCrossGradIntegrator[] = {  {&_swigt__p_mfem__MixedScalarCrossGradIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarCrossProductIntegrator[] = {  {&_swigt__p_mfem__MixedScalarCrossProductIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarCurlIntegrator[] = {  {&_swigt__p_mfem__MixedScalarCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarDerivativeIntegrator[] = {  {&_swigt__p_mfem__MixedScalarDerivativeIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarDivergenceIntegrator[] = {  {&_swigt__p_mfem__MixedScalarDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarIntegrator[] = {  {&_swigt__p_mfem__MixedScalarIntegrator, 0, 0, 0},  {&_swigt__p_mfem__MixedScalarCurlIntegrator, _p_mfem__MixedScalarCurlIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDerivativeIntegrator, _p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDivergenceIntegrator, _p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarMassIntegrator, _p_mfem__MixedScalarMassIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlIntegrator, _p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDerivativeIntegrator, _p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakGradientIntegrator, _p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__MixedScalarIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarMassIntegrator[] = {  {&_swigt__p_mfem__MixedScalarMassIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarVectorIntegrator[] = {  {&_swigt__p_mfem__MixedScalarVectorIntegrator, 0, 0, 0},  {&_swigt__p_mfem__MixedDirectionalDerivativeIntegrator, _p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDivGradIntegrator, _p_mfem__MixedDivGradIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDotProductIntegrator, _p_mfem__MixedDotProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradDivIntegrator, _p_mfem__MixedGradDivIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossCurlIntegrator, _p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossGradIntegrator, _p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossProductIntegrator, _p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCrossProductIntegrator, _p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator, _p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDivergenceIntegrator, _p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorDivergenceIntegrator, _p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorProductIntegrator, _p_mfem__MixedVectorProductIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakGradDotIntegrator, _p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__MixedScalarVectorIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakCrossProductIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakCrossProductIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakCurlCrossIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakCurlIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakDerivativeIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakDerivativeIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakDivergenceIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedScalarWeakGradientIntegrator[] = {  {&_swigt__p_mfem__MixedScalarWeakGradientIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorCurlIntegrator[] = {  {&_swigt__p_mfem__MixedVectorCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorDivergenceIntegrator[] = {  {&_swigt__p_mfem__MixedVectorDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorGradientIntegrator[] = {  {&_swigt__p_mfem__MixedVectorGradientIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorIntegrator[] = {  {&_swigt__p_mfem__MixedVectorIntegrator, 0, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlCurlIntegrator, _p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlGradIntegrator, _p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlIntegrator, _p_mfem__MixedCrossCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradCurlIntegrator, _p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradGradIntegrator, _p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradIntegrator, _p_mfem__MixedCrossGradIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossProductIntegrator, _p_mfem__MixedCrossProductIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCurlCurlIntegrator, _p_mfem__MixedCurlCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradGradIntegrator, _p_mfem__MixedGradGradIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorCurlIntegrator, _p_mfem__MixedVectorCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorGradientIntegrator, _p_mfem__MixedVectorGradientIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorMassIntegrator, _p_mfem__MixedVectorMassIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakCurlIntegrator, _p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakDivergenceIntegrator, _p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakCurlCrossIntegrator, _p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakDivCrossIntegrator, _p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__MixedVectorIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorMassIntegrator[] = {  {&_swigt__p_mfem__MixedVectorMassIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorProductIntegrator[] = {  {&_swigt__p_mfem__MixedVectorProductIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorWeakCurlIntegrator[] = {  {&_swigt__p_mfem__MixedVectorWeakCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedVectorWeakDivergenceIntegrator[] = {  {&_swigt__p_mfem__MixedVectorWeakDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedWeakCurlCrossIntegrator[] = {  {&_swigt__p_mfem__MixedWeakCurlCrossIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedWeakDivCrossIntegrator[] = {  {&_swigt__p_mfem__MixedWeakDivCrossIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MixedWeakGradDotIntegrator[] = {  {&_swigt__p_mfem__MixedWeakGradDotIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NonconservativeDGTraceIntegrator[] = {  {&_swigt__p_mfem__NonconservativeDGTraceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ConvectiveVectorConvectionNLFIntegrator[] = {{&_swigt__p_mfem__ConvectiveVectorConvectionNLFIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__HyperelasticNLFIntegrator[] = {{&_swigt__p_mfem__HyperelasticNLFIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator[] = {{&_swigt__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorConvectionNLFIntegrator[] = {{&_swigt__p_mfem__VectorConvectionNLFIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NonlinearFormIntegrator[] = {  {&_swigt__p_mfem__NonlinearFormIntegrator, 0, 0, 0},  {&_swigt__p_mfem__BilinearFormIntegrator, _p_mfem__BilinearFormIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__BoundaryMassIntegrator, _p_mfem__BoundaryMassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ConservativeConvectionIntegrator, _p_mfem__ConservativeConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ConvectionIntegrator, _p_mfem__ConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ConvectiveVectorConvectionNLFIntegrator, _p_mfem__ConvectiveVectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__CurlCurlIntegrator, _p_mfem__CurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__CurlInterpolator, _p_mfem__CurlInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGDiffusionBR2Integrator, _p_mfem__DGDiffusionBR2IntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGDiffusionIntegrator, _p_mfem__DGDiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGElasticityIntegrator, _p_mfem__DGElasticityIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DGTraceIntegrator, _p_mfem__DGTraceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DerivativeIntegrator, _p_mfem__DerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DiffusionIntegrator, _p_mfem__DiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DiscreteInterpolator, _p_mfem__DiscreteInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DivDivIntegrator, _p_mfem__DivDivIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__DivergenceInterpolator, _p_mfem__DivergenceInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ElasticityIntegrator, _p_mfem__ElasticityIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GradientIntegrator, _p_mfem__GradientIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GradientInterpolator, _p_mfem__GradientInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__GroupConvectionIntegrator, _p_mfem__GroupConvectionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__HyperelasticNLFIntegrator, _p_mfem__HyperelasticNLFIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__IdentityInterpolator, _p_mfem__IdentityInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__InverseIntegrator, _p_mfem__InverseIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__LumpedIntegrator, _p_mfem__LumpedIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MassIntegrator, _p_mfem__MassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlCurlIntegrator, _p_mfem__MixedCrossCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlGradIntegrator, _p_mfem__MixedCrossCurlGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossCurlIntegrator, _p_mfem__MixedCrossCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradCurlIntegrator, _p_mfem__MixedCrossGradCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradGradIntegrator, _p_mfem__MixedCrossGradGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossGradIntegrator, _p_mfem__MixedCrossGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCrossProductIntegrator, _p_mfem__MixedCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCurlCurlIntegrator, _p_mfem__MixedCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedCurlIntegrator, _p_mfem__MixedCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDirectionalDerivativeIntegrator, _p_mfem__MixedDirectionalDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDivGradIntegrator, _p_mfem__MixedDivGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedDotProductIntegrator, _p_mfem__MixedDotProductIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradDivIntegrator, _p_mfem__MixedGradDivIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedGradGradIntegrator, _p_mfem__MixedGradGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossCurlIntegrator, _p_mfem__MixedScalarCrossCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossGradIntegrator, _p_mfem__MixedScalarCrossGradIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCrossProductIntegrator, _p_mfem__MixedScalarCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarCurlIntegrator, _p_mfem__MixedScalarCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDerivativeIntegrator, _p_mfem__MixedScalarDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarDivergenceIntegrator, _p_mfem__MixedScalarDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarIntegrator, _p_mfem__MixedScalarIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarMassIntegrator, _p_mfem__MixedScalarMassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarVectorIntegrator, _p_mfem__MixedScalarVectorIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCrossProductIntegrator, _p_mfem__MixedScalarWeakCrossProductIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlCrossIntegrator, _p_mfem__MixedScalarWeakCurlCrossIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakCurlIntegrator, _p_mfem__MixedScalarWeakCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDerivativeIntegrator, _p_mfem__MixedScalarWeakDerivativeIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakDivergenceIntegrator, _p_mfem__MixedScalarWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedScalarWeakGradientIntegrator, _p_mfem__MixedScalarWeakGradientIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorCurlIntegrator, _p_mfem__MixedVectorCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorDivergenceIntegrator, _p_mfem__MixedVectorDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorGradientIntegrator, _p_mfem__MixedVectorGradientIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorIntegrator, _p_mfem__MixedVectorIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorMassIntegrator, _p_mfem__MixedVectorMassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorProductIntegrator, _p_mfem__MixedVectorProductIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakCurlIntegrator, _p_mfem__MixedVectorWeakCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedVectorWeakDivergenceIntegrator, _p_mfem__MixedVectorWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakCurlCrossIntegrator, _p_mfem__MixedWeakCurlCrossIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakDivCrossIntegrator, _p_mfem__MixedWeakDivCrossIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__MixedWeakGradDotIntegrator, _p_mfem__MixedWeakGradDotIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NonconservativeDGTraceIntegrator, _p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NormalInterpolator, _p_mfem__NormalInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__NormalTraceJumpIntegrator, _p_mfem__NormalTraceJumpIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarCrossProductInterpolator, _p_mfem__ScalarCrossProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarProductInterpolator, _p_mfem__ScalarProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__ScalarVectorProductInterpolator, _p_mfem__ScalarVectorProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator, _p_mfem__SkewSymmetricVectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__SumIntegrator, _p_mfem__SumIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__TraceJumpIntegrator, _p_mfem__TraceJumpIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__TransposeIntegrator, _p_mfem__TransposeIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorConvectionNLFIntegrator, _p_mfem__VectorConvectionNLFIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorCrossProductInterpolator, _p_mfem__VectorCrossProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorCurlCurlIntegrator, _p_mfem__VectorCurlCurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorDiffusionIntegrator, _p_mfem__VectorDiffusionIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorDivergenceIntegrator, _p_mfem__VectorDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFECurlIntegrator, _p_mfem__VectorFECurlIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEDivergenceIntegrator, _p_mfem__VectorFEDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEMassIntegrator, _p_mfem__VectorFEMassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorFEWeakDivergenceIntegrator, _p_mfem__VectorFEWeakDivergenceIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorInnerProductInterpolator, _p_mfem__VectorInnerProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorMassIntegrator, _p_mfem__VectorMassIntegratorTo_p_mfem__NonlinearFormIntegrator, 0, 0},  {&_swigt__p_mfem__VectorScalarProductInterpolator, _p_mfem__VectorScalarProductInterpolatorTo_p_mfem__NonlinearFormIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NormalInterpolator[] = {  {&_swigt__p_mfem__NormalInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NormalTraceJumpIntegrator[] = {  {&_swigt__p_mfem__NormalTraceJumpIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__AbstractSparseMatrix[] = {{&_swigt__p_mfem__AbstractSparseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ConstrainedOperator[] = {{&_swigt__p_mfem__ConstrainedOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DenseMatrixInverse[] = {{&_swigt__p_mfem__DenseMatrixInverse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__DenseSymmetricMatrix[] = {{&_swigt__p_mfem__DenseSymmetricMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ElementRestriction[] = {{&_swigt__p_mfem__ElementRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ElementRestrictionOperator[] = {{&_swigt__p_mfem__ElementRestrictionOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__FaceRestriction[] = {{&_swigt__p_mfem__FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__H1FaceRestriction[] = {{&_swigt__p_mfem__H1FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__IdentityOperator[] = {{&_swigt__p_mfem__IdentityOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2ElementRestriction[] = {{&_swigt__p_mfem__L2ElementRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__L2FaceRestriction[] = {{&_swigt__p_mfem__L2FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Matrix[] = {{&_swigt__p_mfem__Matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__MatrixInverse[] = {{&_swigt__p_mfem__MatrixInverse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NCL2FaceRestriction[] = {{&_swigt__p_mfem__NCL2FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ProductOperator[] = {{&_swigt__p_mfem__ProductOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PyOperatorBase[] = {{&_swigt__p_mfem__PyOperatorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PyTimeDependentOperatorBase[] = {{&_swigt__p_mfem__PyTimeDependentOperatorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RAPOperator[] = {{&_swigt__p_mfem__RAPOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__RectangularConstrainedOperator[] = {{&_swigt__p_mfem__RectangularConstrainedOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScaledOperator[] = {{&_swigt__p_mfem__ScaledOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SecondOrderTimeDependentOperator[] = {{&_swigt__p_mfem__SecondOrderTimeDependentOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SparseMatrix[] = {{&_swigt__p_mfem__SparseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TimeDependentAdjointOperator[] = {{&_swigt__p_mfem__TimeDependentAdjointOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TimeDependentOperator[] = {{&_swigt__p_mfem__TimeDependentOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TransposeOperator[] = {{&_swigt__p_mfem__TransposeOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TripleProductOperator[] = {{&_swigt__p_mfem__TripleProductOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Operator[] = {  {&_swigt__p_mfem__Operator, 0, 0, 0},  {&_swigt__p_mfem__AbstractSparseMatrix, _p_mfem__AbstractSparseMatrixTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__ConstrainedOperator, _p_mfem__ConstrainedOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__DenseMatrix, _p_mfem__DenseMatrixTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__DenseMatrixInverse, _p_mfem__DenseMatrixInverseTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__DenseSymmetricMatrix, _p_mfem__DenseSymmetricMatrixTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__ElementRestriction, _p_mfem__ElementRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__ElementRestrictionOperator, _p_mfem__ElementRestrictionOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__FaceRestriction, _p_mfem__FaceRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__H1FaceRestriction, _p_mfem__H1FaceRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__IdentityOperator, _p_mfem__IdentityOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__L2ElementRestriction, _p_mfem__L2ElementRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__L2FaceRestriction, _p_mfem__L2FaceRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__Matrix, _p_mfem__MatrixTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__MatrixInverse, _p_mfem__MatrixInverseTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__NCL2FaceRestriction, _p_mfem__NCL2FaceRestrictionTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__ProductOperator, _p_mfem__ProductOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__PyOperatorBase, _p_mfem__PyOperatorBaseTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__PyTimeDependentOperatorBase, _p_mfem__PyTimeDependentOperatorBaseTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__RAPOperator, _p_mfem__RAPOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__RectangularConstrainedOperator, _p_mfem__RectangularConstrainedOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__ScaledOperator, _p_mfem__ScaledOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__SecondOrderTimeDependentOperator, _p_mfem__SecondOrderTimeDependentOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__Solver, _p_mfem__SolverTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__SparseMatrix, _p_mfem__SparseMatrixTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__TimeDependentAdjointOperator, _p_mfem__TimeDependentAdjointOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__TimeDependentOperator, _p_mfem__TimeDependentOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__TransposeOperator, _p_mfem__TransposeOperatorTo_p_mfem__Operator, 0, 0},  {&_swigt__p_mfem__TripleProductOperator, _p_mfem__TripleProductOperatorTo_p_mfem__Operator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__OperatorHandle[] = {  {&_swigt__p_mfem__OperatorHandle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Refinement[] = {  {&_swigt__p_mfem__Refinement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarCrossProductInterpolator[] = {  {&_swigt__p_mfem__ScalarCrossProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarProductInterpolator[] = {  {&_swigt__p_mfem__ScalarProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarVectorProductInterpolator[] = {  {&_swigt__p_mfem__ScalarVectorProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Solver[] = {  {&_swigt__p_mfem__Solver, 0, 0, 0},  {&_swigt__p_mfem__DenseMatrixInverse, _p_mfem__DenseMatrixInverseTo_p_mfem__Solver, 0, 0},  {&_swigt__p_mfem__MatrixInverse, _p_mfem__MatrixInverseTo_p_mfem__Solver, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__SumIntegrator[] = {  {&_swigt__p_mfem__SumIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TraceJumpIntegrator[] = {  {&_swigt__p_mfem__TraceJumpIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__TransposeIntegrator[] = {  {&_swigt__p_mfem__TransposeIntegrator, 0, 0, 0},  {&_swigt__p_mfem__ConservativeConvectionIntegrator, _p_mfem__ConservativeConvectionIntegratorTo_p_mfem__TransposeIntegrator, 0, 0},  {&_swigt__p_mfem__NonconservativeDGTraceIntegrator, _p_mfem__NonconservativeDGTraceIntegratorTo_p_mfem__TransposeIntegrator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CoefficientVector[] = {{&_swigt__p_mfem__CoefficientVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__LinearForm[] = {{&_swigt__p_mfem__LinearForm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__Vector[] = {  {&_swigt__p_mfem__Vector, 0, 0, 0},  {&_swigt__p_mfem__CoefficientVector, _p_mfem__CoefficientVectorTo_p_mfem__Vector, 0, 0},  {&_swigt__p_mfem__GridFunction, _p_mfem__GridFunctionTo_p_mfem__Vector, 0, 0},  {&_swigt__p_mfem__LinearForm, _p_mfem__LinearFormTo_p_mfem__Vector, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__CurlGridFunctionCoefficient[] = {{&_swigt__p_mfem__CurlGridFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__GradientGridFunctionCoefficient[] = {{&_swigt__p_mfem__GradientGridFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NodeExtrudeCoefficient[] = {{&_swigt__p_mfem__NodeExtrudeCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__NormalizedVectorCoefficient[] = {{&_swigt__p_mfem__NormalizedVectorCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__PWVectorCoefficient[] = {{&_swigt__p_mfem__PWVectorCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__ScalarVectorProductCoefficient[] = {{&_swigt__p_mfem__ScalarVectorProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorArrayCoefficient[] = {{&_swigt__p_mfem__VectorArrayCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorConstantCoefficient[] = {{&_swigt__p_mfem__VectorConstantCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorCrossProductCoefficient[] = {{&_swigt__p_mfem__VectorCrossProductCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorDeltaCoefficient[] = {{&_swigt__p_mfem__VectorDeltaCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFunctionCoefficient[] = {{&_swigt__p_mfem__VectorFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorGridFunctionCoefficient[] = {{&_swigt__p_mfem__VectorGridFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorPyCoefficientBase[] = {{&_swigt__p_mfem__VectorPyCoefficientBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorQuadratureFunctionCoefficient[] = {{&_swigt__p_mfem__VectorQuadratureFunctionCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorRestrictedCoefficient[] = {{&_swigt__p_mfem__VectorRestrictedCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorSumCoefficient[] = {{&_swigt__p_mfem__VectorSumCoefficient, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorCoefficient[] = {  {&_swigt__p_mfem__VectorCoefficient, 0, 0, 0},  {&_swigt__p_VectorNumbaCoefficient, _p_VectorNumbaCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__CurlGridFunctionCoefficient, _p_mfem__CurlGridFunctionCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__GradientGridFunctionCoefficient, _p_mfem__GradientGridFunctionCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__MatrixVectorProductCoefficient, _p_mfem__MatrixVectorProductCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__NodeExtrudeCoefficient, _p_mfem__NodeExtrudeCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__NormalizedVectorCoefficient, _p_mfem__NormalizedVectorCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__PWVectorCoefficient, _p_mfem__PWVectorCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__ScalarVectorProductCoefficient, _p_mfem__ScalarVectorProductCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorArrayCoefficient, _p_mfem__VectorArrayCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorConstantCoefficient, _p_mfem__VectorConstantCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorCrossProductCoefficient, _p_mfem__VectorCrossProductCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorDeltaCoefficient, _p_mfem__VectorDeltaCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorFunctionCoefficient, _p_mfem__VectorFunctionCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorGridFunctionCoefficient, _p_mfem__VectorGridFunctionCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorPyCoefficientBase, _p_mfem__VectorPyCoefficientBaseTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorQuadratureFunctionCoefficient, _p_mfem__VectorQuadratureFunctionCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorRestrictedCoefficient, _p_mfem__VectorRestrictedCoefficientTo_p_mfem__VectorCoefficient, 0, 0},  {&_swigt__p_mfem__VectorSumCoefficient, _p_mfem__VectorSumCoefficientTo_p_mfem__VectorCoefficient, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorCrossProductInterpolator[] = {  {&_swigt__p_mfem__VectorCrossProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorCurlCurlIntegrator[] = {  {&_swigt__p_mfem__VectorCurlCurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorDiffusionIntegrator[] = {  {&_swigt__p_mfem__VectorDiffusionIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorDivergenceIntegrator[] = {  {&_swigt__p_mfem__VectorDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFECurlIntegrator[] = {  {&_swigt__p_mfem__VectorFECurlIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFEDivergenceIntegrator[] = {  {&_swigt__p_mfem__VectorFEDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFEMassIntegrator[] = {  {&_swigt__p_mfem__VectorFEMassIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorFEWeakDivergenceIntegrator[] = {  {&_swigt__p_mfem__VectorFEWeakDivergenceIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorInnerProductInterpolator[] = {  {&_swigt__p_mfem__VectorInnerProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorMassIntegrator[] = {  {&_swigt__p_mfem__VectorMassIntegrator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mfem__VectorScalarProductInterpolator[] = {  {&_swigt__p_mfem__VectorScalarProductInterpolator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__FiniteElementSpace[] = {  {&_swigt__p_p_mfem__FiniteElementSpace, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__IntegrationRule[] = {  {&_swigt__p_p_mfem__IntegrationRule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__AbstractSparseMatrix[] = {{&_swigt__p_p_mfem__AbstractSparseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__ConstrainedOperator[] = {{&_swigt__p_p_mfem__ConstrainedOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__DenseMatrix[] = {{&_swigt__p_p_mfem__DenseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__DenseMatrixInverse[] = {{&_swigt__p_p_mfem__DenseMatrixInverse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__DenseSymmetricMatrix[] = {{&_swigt__p_p_mfem__DenseSymmetricMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__ElementRestriction[] = {{&_swigt__p_p_mfem__ElementRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__ElementRestrictionOperator[] = {{&_swigt__p_p_mfem__ElementRestrictionOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__FaceRestriction[] = {{&_swigt__p_p_mfem__FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__H1FaceRestriction[] = {{&_swigt__p_p_mfem__H1FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__IdentityOperator[] = {{&_swigt__p_p_mfem__IdentityOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__L2ElementRestriction[] = {{&_swigt__p_p_mfem__L2ElementRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__L2FaceRestriction[] = {{&_swigt__p_p_mfem__L2FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__Matrix[] = {{&_swigt__p_p_mfem__Matrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__MatrixInverse[] = {{&_swigt__p_p_mfem__MatrixInverse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__NCL2FaceRestriction[] = {{&_swigt__p_p_mfem__NCL2FaceRestriction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__ProductOperator[] = {{&_swigt__p_p_mfem__ProductOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__PyOperatorBase[] = {{&_swigt__p_p_mfem__PyOperatorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__PyTimeDependentOperatorBase[] = {{&_swigt__p_p_mfem__PyTimeDependentOperatorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__RAPOperator[] = {{&_swigt__p_p_mfem__RAPOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__RectangularConstrainedOperator[] = {{&_swigt__p_p_mfem__RectangularConstrainedOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__ScaledOperator[] = {{&_swigt__p_p_mfem__ScaledOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__SecondOrderTimeDependentOperator[] = {{&_swigt__p_p_mfem__SecondOrderTimeDependentOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__SparseMatrix[] = {{&_swigt__p_p_mfem__SparseMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__TimeDependentAdjointOperator[] = {{&_swigt__p_p_mfem__TimeDependentAdjointOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__TimeDependentOperator[] = {{&_swigt__p_p_mfem__TimeDependentOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__TransposeOperator[] = {{&_swigt__p_p_mfem__TransposeOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__TripleProductOperator[] = {{&_swigt__p_p_mfem__TripleProductOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__Operator[] = {  {&_swigt__p_p_mfem__Operator, 0, 0, 0},  {&_swigt__p_p_mfem__AbstractSparseMatrix, _p_p_mfem__AbstractSparseMatrixTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__ConstrainedOperator, _p_p_mfem__ConstrainedOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__DenseMatrix, _p_p_mfem__DenseMatrixTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__DenseMatrixInverse, _p_p_mfem__DenseMatrixInverseTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__DenseSymmetricMatrix, _p_p_mfem__DenseSymmetricMatrixTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__ElementRestriction, _p_p_mfem__ElementRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__ElementRestrictionOperator, _p_p_mfem__ElementRestrictionOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__FaceRestriction, _p_p_mfem__FaceRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__H1FaceRestriction, _p_p_mfem__H1FaceRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__IdentityOperator, _p_p_mfem__IdentityOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__L2ElementRestriction, _p_p_mfem__L2ElementRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__L2FaceRestriction, _p_p_mfem__L2FaceRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__Matrix, _p_p_mfem__MatrixTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__MatrixInverse, _p_p_mfem__MatrixInverseTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__NCL2FaceRestriction, _p_p_mfem__NCL2FaceRestrictionTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__ProductOperator, _p_p_mfem__ProductOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__PyOperatorBase, _p_p_mfem__PyOperatorBaseTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__PyTimeDependentOperatorBase, _p_p_mfem__PyTimeDependentOperatorBaseTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__RAPOperator, _p_p_mfem__RAPOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__RectangularConstrainedOperator, _p_p_mfem__RectangularConstrainedOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__ScaledOperator, _p_p_mfem__ScaledOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__SecondOrderTimeDependentOperator, _p_p_mfem__SecondOrderTimeDependentOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__Solver, _p_p_mfem__SolverTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__SparseMatrix, _p_p_mfem__SparseMatrixTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__TimeDependentAdjointOperator, _p_p_mfem__TimeDependentAdjointOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__TimeDependentOperator, _p_p_mfem__TimeDependentOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__TransposeOperator, _p_p_mfem__TransposeOperatorTo_p_p_mfem__Operator, 0, 0},  {&_swigt__p_p_mfem__TripleProductOperator, _p_p_mfem__TripleProductOperatorTo_p_p_mfem__Operator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__Solver[] = {  {&_swigt__p_p_mfem__Solver, 0, 0, 0},  {&_swigt__p_p_mfem__DenseMatrixInverse, _p_p_mfem__DenseMatrixInverseTo_p_p_mfem__Solver, 0, 0},  {&_swigt__p_p_mfem__MatrixInverse, _p_p_mfem__MatrixInverseTo_p_p_mfem__Solver, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__CoefficientVector[] = {{&_swigt__p_p_mfem__CoefficientVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__GridFunction[] = {{&_swigt__p_p_mfem__GridFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__LinearForm[] = {{&_swigt__p_p_mfem__LinearForm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_mfem__Vector[] = {  {&_swigt__p_p_mfem__Vector, 0, 0, 0},  {&_swigt__p_p_mfem__CoefficientVector, _p_p_mfem__CoefficientVectorTo_p_p_mfem__Vector, 0, 0},  {&_swigt__p_p_mfem__GridFunction, _p_p_mfem__GridFunctionTo_p_p_mfem__Vector, 0, 0},  {&_swigt__p_p_mfem__LinearForm, _p_p_mfem__LinearFormTo_p_p_mfem__Vector, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pri_t[] = {  {&_swigt__p_pri_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pyr_t[] = {  {&_swigt__p_pyr_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_quad_t[] = {  {&_swigt__p_quad_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_seg_t[] = {  {&_swigt__p_seg_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tet_t[] = {  {&_swigt__p_tet_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_tri_t[] = {  {&_swigt__p_tri_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc___input,
  _swigc__p_MatrixNumbaCoefficient,
  _swigc__p_PyMFEM__wFILE,
  _swigc__p_RefCoord,
  _swigc__p_ScalarNumbaCoefficient,
  _swigc__p_VectorNumbaCoefficient,
  _swigc__p_allocator_type,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_double,
  _swigc__p_hex_t,
  _swigc__p_int,
  _swigc__p_mfem__AbstractSparseMatrix,
  _swigc__p_mfem__ArrayT_int_t,
  _swigc__p_mfem__BiCubic2DFiniteElement,
  _swigc__p_mfem__BiLinear2DFiniteElement,
  _swigc__p_mfem__BiQuad2DFiniteElement,
  _swigc__p_mfem__BiQuadPos2DFiniteElement,
  _swigc__p_mfem__BilinearFormIntegrator,
  _swigc__p_mfem__BoundaryMassIntegrator,
  _swigc__p_mfem__Coefficient,
  _swigc__p_mfem__CoefficientVector,
  _swigc__p_mfem__ConservativeConvectionIntegrator,
  _swigc__p_mfem__ConstantCoefficient,
  _swigc__p_mfem__ConstrainedOperator,
  _swigc__p_mfem__ConvectionIntegrator,
  _swigc__p_mfem__ConvectiveVectorConvectionNLFIntegrator,
  _swigc__p_mfem__CrossCrossCoefficient,
  _swigc__p_mfem__CrouzeixRaviartFiniteElement,
  _swigc__p_mfem__CrouzeixRaviartQuadFiniteElement,
  _swigc__p_mfem__Cubic1DFiniteElement,
  _swigc__p_mfem__Cubic2DFiniteElement,
  _swigc__p_mfem__Cubic3DFiniteElement,
  _swigc__p_mfem__CurlCurlIntegrator,
  _swigc__p_mfem__CurlGridFunctionCoefficient,
  _swigc__p_mfem__CurlInterpolator,
  _swigc__p_mfem__DGDiffusionBR2Integrator,
  _swigc__p_mfem__DGDiffusionIntegrator,
  _swigc__p_mfem__DGElasticityIntegrator,
  _swigc__p_mfem__DGTraceIntegrator,
  _swigc__p_mfem__DeltaCoefficient,
  _swigc__p_mfem__DenseMatrix,
  _swigc__p_mfem__DenseMatrixInverse,
  _swigc__p_mfem__DenseSymmetricMatrix,
  _swigc__p_mfem__DerivativeIntegrator,
  _swigc__p_mfem__DeterminantCoefficient,
  _swigc__p_mfem__DiffusionIntegrator,
  _swigc__p_mfem__DiscreteInterpolator,
  _swigc__p_mfem__DivDivIntegrator,
  _swigc__p_mfem__DivergenceGridFunctionCoefficient,
  _swigc__p_mfem__DivergenceInterpolator,
  _swigc__p_mfem__ElasticityIntegrator,
  _swigc__p_mfem__ElementRestriction,
  _swigc__p_mfem__ElementRestrictionOperator,
  _swigc__p_mfem__ElementTransformation,
  _swigc__p_mfem__ExtrudeCoefficient,
  _swigc__p_mfem__FaceElementTransformations,
  _swigc__p_mfem__FaceRestriction,
  _swigc__p_mfem__FiniteElement,
  _swigc__p_mfem__FiniteElementSpace,
  _swigc__p_mfem__FunctionCoefficient,
  _swigc__p_mfem__GaussBiLinear2DFiniteElement,
  _swigc__p_mfem__GaussBiQuad2DFiniteElement,
  _swigc__p_mfem__GaussLinear2DFiniteElement,
  _swigc__p_mfem__GaussQuad2DFiniteElement,
  _swigc__p_mfem__GradientGridFunctionCoefficient,
  _swigc__p_mfem__GradientIntegrator,
  _swigc__p_mfem__GradientInterpolator,
  _swigc__p_mfem__GridFunction,
  _swigc__p_mfem__GridFunctionCoefficient,
  _swigc__p_mfem__GroupConvectionIntegrator,
  _swigc__p_mfem__H1FaceRestriction,
  _swigc__p_mfem__H1Pos_HexahedronElement,
  _swigc__p_mfem__H1Pos_QuadrilateralElement,
  _swigc__p_mfem__H1Pos_SegmentElement,
  _swigc__p_mfem__H1Pos_TetrahedronElement,
  _swigc__p_mfem__H1Pos_TriangleElement,
  _swigc__p_mfem__H1Pos_WedgeElement,
  _swigc__p_mfem__H1Ser_QuadrilateralElement,
  _swigc__p_mfem__H1_HexahedronElement,
  _swigc__p_mfem__H1_QuadrilateralElement,
  _swigc__p_mfem__H1_SegmentElement,
  _swigc__p_mfem__H1_TetrahedronElement,
  _swigc__p_mfem__H1_TriangleElement,
  _swigc__p_mfem__H1_WedgeElement,
  _swigc__p_mfem__HyperelasticNLFIntegrator,
  _swigc__p_mfem__IdentityInterpolator,
  _swigc__p_mfem__IdentityMatrixCoefficient,
  _swigc__p_mfem__IdentityOperator,
  _swigc__p_mfem__InnerProductCoefficient,
  _swigc__p_mfem__IntegrationPoint,
  _swigc__p_mfem__IntegrationRule,
  _swigc__p_mfem__InverseIntegrator,
  _swigc__p_mfem__InverseMatrixCoefficient,
  _swigc__p_mfem__IsoparametricTransformation,
  _swigc__p_mfem__L2ElementRestriction,
  _swigc__p_mfem__L2FaceRestriction,
  _swigc__p_mfem__L2Pos_HexahedronElement,
  _swigc__p_mfem__L2Pos_QuadrilateralElement,
  _swigc__p_mfem__L2Pos_SegmentElement,
  _swigc__p_mfem__L2Pos_TetrahedronElement,
  _swigc__p_mfem__L2Pos_TriangleElement,
  _swigc__p_mfem__L2Pos_WedgeElement,
  _swigc__p_mfem__L2_FECollection,
  _swigc__p_mfem__L2_HexahedronElement,
  _swigc__p_mfem__L2_QuadrilateralElement,
  _swigc__p_mfem__L2_SegmentElement,
  _swigc__p_mfem__L2_TetrahedronElement,
  _swigc__p_mfem__L2_TriangleElement,
  _swigc__p_mfem__L2_WedgeElement,
  _swigc__p_mfem__Lagrange1DFiniteElement,
  _swigc__p_mfem__LagrangeHexFiniteElement,
  _swigc__p_mfem__Linear1DFiniteElement,
  _swigc__p_mfem__Linear2DFiniteElement,
  _swigc__p_mfem__Linear3DFiniteElement,
  _swigc__p_mfem__LinearForm,
  _swigc__p_mfem__LinearPyramidFiniteElement,
  _swigc__p_mfem__LinearWedgeFiniteElement,
  _swigc__p_mfem__LumpedIntegrator,
  _swigc__p_mfem__MassIntegrator,
  _swigc__p_mfem__Matrix,
  _swigc__p_mfem__MatrixArrayCoefficient,
  _swigc__p_mfem__MatrixCoefficient,
  _swigc__p_mfem__MatrixConstantCoefficient,
  _swigc__p_mfem__MatrixFunctionCoefficient,
  _swigc__p_mfem__MatrixInverse,
  _swigc__p_mfem__MatrixProductCoefficient,
  _swigc__p_mfem__MatrixPyCoefficientBase,
  _swigc__p_mfem__MatrixRestrictedCoefficient,
  _swigc__p_mfem__MatrixSumCoefficient,
  _swigc__p_mfem__MatrixVectorProductCoefficient,
  _swigc__p_mfem__MixedCrossCurlCurlIntegrator,
  _swigc__p_mfem__MixedCrossCurlGradIntegrator,
  _swigc__p_mfem__MixedCrossCurlIntegrator,
  _swigc__p_mfem__MixedCrossGradCurlIntegrator,
  _swigc__p_mfem__MixedCrossGradGradIntegrator,
  _swigc__p_mfem__MixedCrossGradIntegrator,
  _swigc__p_mfem__MixedCrossProductIntegrator,
  _swigc__p_mfem__MixedCurlCurlIntegrator,
  _swigc__p_mfem__MixedCurlIntegrator,
  _swigc__p_mfem__MixedDirectionalDerivativeIntegrator,
  _swigc__p_mfem__MixedDivGradIntegrator,
  _swigc__p_mfem__MixedDotProductIntegrator,
  _swigc__p_mfem__MixedGradDivIntegrator,
  _swigc__p_mfem__MixedGradGradIntegrator,
  _swigc__p_mfem__MixedScalarCrossCurlIntegrator,
  _swigc__p_mfem__MixedScalarCrossGradIntegrator,
  _swigc__p_mfem__MixedScalarCrossProductIntegrator,
  _swigc__p_mfem__MixedScalarCurlIntegrator,
  _swigc__p_mfem__MixedScalarDerivativeIntegrator,
  _swigc__p_mfem__MixedScalarDivergenceIntegrator,
  _swigc__p_mfem__MixedScalarIntegrator,
  _swigc__p_mfem__MixedScalarMassIntegrator,
  _swigc__p_mfem__MixedScalarVectorIntegrator,
  _swigc__p_mfem__MixedScalarWeakCrossProductIntegrator,
  _swigc__p_mfem__MixedScalarWeakCurlCrossIntegrator,
  _swigc__p_mfem__MixedScalarWeakCurlIntegrator,
  _swigc__p_mfem__MixedScalarWeakDerivativeIntegrator,
  _swigc__p_mfem__MixedScalarWeakDivergenceIntegrator,
  _swigc__p_mfem__MixedScalarWeakGradientIntegrator,
  _swigc__p_mfem__MixedVectorCurlIntegrator,
  _swigc__p_mfem__MixedVectorDivergenceIntegrator,
  _swigc__p_mfem__MixedVectorGradientIntegrator,
  _swigc__p_mfem__MixedVectorIntegrator,
  _swigc__p_mfem__MixedVectorMassIntegrator,
  _swigc__p_mfem__MixedVectorProductIntegrator,
  _swigc__p_mfem__MixedVectorWeakCurlIntegrator,
  _swigc__p_mfem__MixedVectorWeakDivergenceIntegrator,
  _swigc__p_mfem__MixedWeakCurlCrossIntegrator,
  _swigc__p_mfem__MixedWeakDivCrossIntegrator,
  _swigc__p_mfem__MixedWeakGradDotIntegrator,
  _swigc__p_mfem__NCL2FaceRestriction,
  _swigc__p_mfem__ND_HexahedronElement,
  _swigc__p_mfem__ND_QuadrilateralElement,
  _swigc__p_mfem__ND_R1D_PointElement,
  _swigc__p_mfem__ND_R1D_SegmentElement,
  _swigc__p_mfem__ND_R2D_FiniteElement,
  _swigc__p_mfem__ND_R2D_QuadrilateralElement,
  _swigc__p_mfem__ND_R2D_SegmentElement,
  _swigc__p_mfem__ND_R2D_TriangleElement,
  _swigc__p_mfem__ND_SegmentElement,
  _swigc__p_mfem__ND_TetrahedronElement,
  _swigc__p_mfem__ND_TriangleElement,
  _swigc__p_mfem__ND_WedgeElement,
  _swigc__p_mfem__NURBS1DFiniteElement,
  _swigc__p_mfem__NURBS2DFiniteElement,
  _swigc__p_mfem__NURBS3DFiniteElement,
  _swigc__p_mfem__NURBSFiniteElement,
  _swigc__p_mfem__Nedelec1HexFiniteElement,
  _swigc__p_mfem__Nedelec1PyrFiniteElement,
  _swigc__p_mfem__Nedelec1TetFiniteElement,
  _swigc__p_mfem__Nedelec1WdgFiniteElement,
  _swigc__p_mfem__NodalFiniteElement,
  _swigc__p_mfem__NodalTensorFiniteElement,
  _swigc__p_mfem__NodeExtrudeCoefficient,
  _swigc__p_mfem__NonconservativeDGTraceIntegrator,
  _swigc__p_mfem__NonlinearFormIntegrator,
  _swigc__p_mfem__NormalInterpolator,
  _swigc__p_mfem__NormalTraceJumpIntegrator,
  _swigc__p_mfem__NormalizedVectorCoefficient,
  _swigc__p_mfem__Operator,
  _swigc__p_mfem__OperatorHandle,
  _swigc__p_mfem__OuterProductCoefficient,
  _swigc__p_mfem__P0HexFiniteElement,
  _swigc__p_mfem__P0PyrFiniteElement,
  _swigc__p_mfem__P0QuadFiniteElement,
  _swigc__p_mfem__P0SegmentFiniteElement,
  _swigc__p_mfem__P0TetFiniteElement,
  _swigc__p_mfem__P0TriangleFiniteElement,
  _swigc__p_mfem__P0WdgFiniteElement,
  _swigc__p_mfem__P1OnQuadFiniteElement,
  _swigc__p_mfem__P1SegmentFiniteElement,
  _swigc__p_mfem__P1TetNonConfFiniteElement,
  _swigc__p_mfem__P2SegmentFiniteElement,
  _swigc__p_mfem__PWCoefficient,
  _swigc__p_mfem__PWConstCoefficient,
  _swigc__p_mfem__PWMatrixCoefficient,
  _swigc__p_mfem__PWVectorCoefficient,
  _swigc__p_mfem__PointFiniteElement,
  _swigc__p_mfem__PositiveFiniteElement,
  _swigc__p_mfem__PositiveTensorFiniteElement,
  _swigc__p_mfem__PowerCoefficient,
  _swigc__p_mfem__ProductCoefficient,
  _swigc__p_mfem__ProductOperator,
  _swigc__p_mfem__PyCoefficientBase,
  _swigc__p_mfem__PyOperatorBase,
  _swigc__p_mfem__PyTimeDependentOperatorBase,
  _swigc__p_mfem__Quad1DFiniteElement,
  _swigc__p_mfem__Quad2DFiniteElement,
  _swigc__p_mfem__QuadPos1DFiniteElement,
  _swigc__p_mfem__Quadratic3DFiniteElement,
  _swigc__p_mfem__QuadratureFunctionCoefficient,
  _swigc__p_mfem__RAPOperator,
  _swigc__p_mfem__RT0HexFiniteElement,
  _swigc__p_mfem__RT0PyrFiniteElement,
  _swigc__p_mfem__RT0QuadFiniteElement,
  _swigc__p_mfem__RT0TetFiniteElement,
  _swigc__p_mfem__RT0TriangleFiniteElement,
  _swigc__p_mfem__RT0WdgFiniteElement,
  _swigc__p_mfem__RT1HexFiniteElement,
  _swigc__p_mfem__RT1QuadFiniteElement,
  _swigc__p_mfem__RT1TriangleFiniteElement,
  _swigc__p_mfem__RT2QuadFiniteElement,
  _swigc__p_mfem__RT2TriangleFiniteElement,
  _swigc__p_mfem__RT_HexahedronElement,
  _swigc__p_mfem__RT_QuadrilateralElement,
  _swigc__p_mfem__RT_R1D_SegmentElement,
  _swigc__p_mfem__RT_R2D_FiniteElement,
  _swigc__p_mfem__RT_R2D_QuadrilateralElement,
  _swigc__p_mfem__RT_R2D_SegmentElement,
  _swigc__p_mfem__RT_R2D_TriangleElement,
  _swigc__p_mfem__RT_TetrahedronElement,
  _swigc__p_mfem__RT_TriangleElement,
  _swigc__p_mfem__RT_WedgeElement,
  _swigc__p_mfem__RatioCoefficient,
  _swigc__p_mfem__RectangularConstrainedOperator,
  _swigc__p_mfem__RefinedBiLinear2DFiniteElement,
  _swigc__p_mfem__RefinedLinear1DFiniteElement,
  _swigc__p_mfem__RefinedLinear2DFiniteElement,
  _swigc__p_mfem__RefinedLinear3DFiniteElement,
  _swigc__p_mfem__RefinedTriLinear3DFiniteElement,
  _swigc__p_mfem__Refinement,
  _swigc__p_mfem__RestrictedCoefficient,
  _swigc__p_mfem__RotTriLinearHexFiniteElement,
  _swigc__p_mfem__ScalarCrossProductInterpolator,
  _swigc__p_mfem__ScalarFiniteElement,
  _swigc__p_mfem__ScalarMatrixProductCoefficient,
  _swigc__p_mfem__ScalarProductInterpolator,
  _swigc__p_mfem__ScalarVectorProductCoefficient,
  _swigc__p_mfem__ScalarVectorProductInterpolator,
  _swigc__p_mfem__ScaledOperator,
  _swigc__p_mfem__SecondOrderTimeDependentOperator,
  _swigc__p_mfem__SkewSymmetricVectorConvectionNLFIntegrator,
  _swigc__p_mfem__Solver,
  _swigc__p_mfem__SparseMatrix,
  _swigc__p_mfem__SumCoefficient,
  _swigc__p_mfem__SumIntegrator,
  _swigc__p_mfem__SymmetricMatrixCoefficient,
  _swigc__p_mfem__SymmetricMatrixConstantCoefficient,
  _swigc__p_mfem__SymmetricMatrixFunctionCoefficient,
  _swigc__p_mfem__TimeDependentAdjointOperator,
  _swigc__p_mfem__TimeDependentOperator,
  _swigc__p_mfem__TraceJumpIntegrator,
  _swigc__p_mfem__TransformedCoefficient,
  _swigc__p_mfem__TransposeIntegrator,
  _swigc__p_mfem__TransposeMatrixCoefficient,
  _swigc__p_mfem__TransposeOperator,
  _swigc__p_mfem__TriLinear3DFiniteElement,
  _swigc__p_mfem__TripleProductOperator,
  _swigc__p_mfem__Vector,
  _swigc__p_mfem__VectorArrayCoefficient,
  _swigc__p_mfem__VectorCoefficient,
  _swigc__p_mfem__VectorConstantCoefficient,
  _swigc__p_mfem__VectorConvectionNLFIntegrator,
  _swigc__p_mfem__VectorCrossProductCoefficient,
  _swigc__p_mfem__VectorCrossProductInterpolator,
  _swigc__p_mfem__VectorCurlCurlIntegrator,
  _swigc__p_mfem__VectorDeltaCoefficient,
  _swigc__p_mfem__VectorDiffusionIntegrator,
  _swigc__p_mfem__VectorDivergenceIntegrator,
  _swigc__p_mfem__VectorFECurlIntegrator,
  _swigc__p_mfem__VectorFEDivergenceIntegrator,
  _swigc__p_mfem__VectorFEMassIntegrator,
  _swigc__p_mfem__VectorFEWeakDivergenceIntegrator,
  _swigc__p_mfem__VectorFiniteElement,
  _swigc__p_mfem__VectorFunctionCoefficient,
  _swigc__p_mfem__VectorGridFunctionCoefficient,
  _swigc__p_mfem__VectorInnerProductInterpolator,
  _swigc__p_mfem__VectorMassIntegrator,
  _swigc__p_mfem__VectorPyCoefficientBase,
  _swigc__p_mfem__VectorQuadratureFunctionCoefficient,
  _swigc__p_mfem__VectorRestrictedCoefficient,
  _swigc__p_mfem__VectorRotProductCoefficient,
  _swigc__p_mfem__VectorScalarProductInterpolator,
  _swigc__p_mfem__VectorSumCoefficient,
  _swigc__p_mfem__VectorTensorFiniteElement,
  _swigc__p_p_mfem__AbstractSparseMatrix,
  _swigc__p_p_mfem__CoefficientVector,
  _swigc__p_p_mfem__ConstrainedOperator,
  _swigc__p_p_mfem__DenseMatrix,
  _swigc__p_p_mfem__DenseMatrixInverse,
  _swigc__p_p_mfem__DenseSymmetricMatrix,
  _swigc__p_p_mfem__ElementRestriction,
  _swigc__p_p_mfem__ElementRestrictionOperator,
  _swigc__p_p_mfem__FaceRestriction,
  _swigc__p_p_mfem__FiniteElementSpace,
  _swigc__p_p_mfem__GridFunction,
  _swigc__p_p_mfem__H1FaceRestriction,
  _swigc__p_p_mfem__IdentityOperator,
  _swigc__p_p_mfem__IntegrationRule,
  _swigc__p_p_mfem__L2ElementRestriction,
  _swigc__p_p_mfem__L2FaceRestriction,
  _swigc__p_p_mfem__LinearForm,
  _swigc__p_p_mfem__Matrix,
  _swigc__p_p_mfem__MatrixInverse,
  _swigc__p_p_mfem__NCL2FaceRestriction,
  _swigc__p_p_mfem__Operator,
  _swigc__p_p_mfem__ProductOperator,
  _swigc__p_p_mfem__PyOperatorBase,
  _swigc__p_p_mfem__PyTimeDependentOperatorBase,
  _swigc__p_p_mfem__RAPOperator,
  _swigc__p_p_mfem__RectangularConstrainedOperator,
  _swigc__p_p_mfem__ScaledOperator,
  _swigc__p_p_mfem__SecondOrderTimeDependentOperator,
  _swigc__p_p_mfem__Solver,
  _swigc__p_p_mfem__SparseMatrix,
  _swigc__p_p_mfem__TimeDependentAdjointOperator,
  _swigc__p_p_mfem__TimeDependentOperator,
  _swigc__p_p_mfem__TransposeOperator,
  _swigc__p_p_mfem__TripleProductOperator,
  _swigc__p_p_mfem__Vector,
  _swigc__p_pri_t,
  _swigc__p_pyr_t,
  _swigc__p_quad_t,
  _swigc__p_seg_t,
  _swigc__p_size_type,
  _swigc__p_tet_t,
  _swigc__p_tri_t,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------
   * Patch %callback methods' docstrings to hold the callback ptrs
   * -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods, const swig_const_info *const_table, swig_type_info **types, swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        const swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif




#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif




/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  
  import_array();
  
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  SWIG_addvarlink(globals, "HCURL_MAX_D1D", Swig_var_HCURL_MAX_D1D_get, Swig_var_HCURL_MAX_D1D_set);
  SWIG_addvarlink(globals, "HCURL_MAX_Q1D", Swig_var_HCURL_MAX_Q1D_get, Swig_var_HCURL_MAX_Q1D_set);
  SWIG_addvarlink(globals, "HDIV_MAX_D1D", Swig_var_HDIV_MAX_D1D_get, Swig_var_HDIV_MAX_D1D_set);
  SWIG_addvarlink(globals, "HDIV_MAX_Q1D", Swig_var_HDIV_MAX_Q1D_get, Swig_var_HDIV_MAX_Q1D_set);
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

